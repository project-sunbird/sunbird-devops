@Library('deploy-conf') _
node(){
    try {
    
// Testing module begin    
           if (params.size() == 0){
            properties([[$class: 'RebuildSettings', autoRebuild: false, rebuildDisabled: false], parameters([string(defaultValue: '', description: '', name: 'parent_project', trim: false), string(defaultValue: '', description: '', name: 'private_repo_branch', trim: false), string(defaultValue: '', description: '', name: 'image_name', trim: false), string(defaultValue: '', description: '', name: 'image_tag', trim: false)])])
            
            ansiColor('xterm') {
            println "First run of the job. Parameters created. Stopping the current build. Please trigger new build and provide parameters if required"
            }
            
            println "First run of the job. Parameters created. Stopping the current build. Please trigger new build and provide parameters if required"
            currentBuild.result = 'SUCCESS'
            return
            }
           else
           println "params OK"


// Testing module end

    
        stage('checkout public repo') {
            checkout scm
        }

        stage('define variables') {
            def values = docker_service_variables()     
            ansibleExtraArgs = """\
                               --extra-vars "hub_org=$hub_org image_name=$values.image_name 
                               image_tag=$values.image_tag" --vault-password-file $values.vaultFile
                               """.stripIndent().replace("\n"," ")
            values.put('ansibleExtraArgs', ansibleExtraArgs)
            ansible_playbook_run(values)
            archiveArtifacts 'metadata.json'
        }
    }

    catch (err)
    {
        throw err
    }
}
