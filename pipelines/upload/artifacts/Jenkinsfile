@Library('deploy-conf') _
node() {
    try {
        stage('checkout public repo') {
            cleanWs()
            checkout scm
        }
        stage('Artifact Upload') {
            def values = lp_dp_params()
            if(params.artifact_source == "ArtifactRepo")
            {
                artifact_version = sh(returnStdout: true, script: 'jq -r .artifact_version metadata.json').trim()
                values.put('artifact_version', artifact_version)
                currentWs = sh(returnStdout: true, script: 'pwd').trim()
                artifact = values.artifact_name + ":" + values.artifact_version
                ansiblePlaybook = "${currentWs}/ansible/artifacts-upload.yml"
                ansibleExtraArgs = "--extra-vars \"artifact=${artifact} artifact_path=${currentWs}/${artifact}\" --vault-password-file /home/ops/vault"
                values.put('currentWs', currentWs)
                values.put('ansiblePlaybook', ansiblePlaybook)
                values.put('ansibleExtraArgs', ansibleExtraArgs)
                ansible_playbook_run(values)
            }
            archiveArtifacts artifacts: "${artifact}", fingerprint: true, onlyIfSuccessful: true
            archiveArtifacts artifacts: 'metadata.json', onlyIfSuccessful: true
            currentBuild.description = "${artifact_version}"
        }
    }
    catch (err) {
        currentBuild.result = "FAILURE"
        throw err
    }
}
