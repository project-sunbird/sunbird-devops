# ------------------------------------------------------------------------------------------------------------ #
# Mandatorty variables - DO NOT LEAVE ANYTHING BLANK #
# ------------------------------------------------------------------------------------------------------------ #
domain_name: ""                  # your domain name like example.com
dockerhub: "change.docker.url"   # docker hub username or url incase of private registry
# This ip should be in the kubenetes subnet range. For example, if your kube cluster is running in `10.0.0.0/24, then it can be 10.0.0.5. Make sure this ip is not allocated to any other things.`
private_ingressgateway_ip: ""     # your private kubernetes load balancer ip

# For sendgrid, if you want to change, update the following
mail_server_host: "smtp.sendgrid.net"                               # Email host, can be any email provider
mail_server_username: "apikey"                           # Email provider username; for sendgrid you can use "apikey"

# This mail id should be verified by your provider. This is the mail id which will be used for `From Address`. For example, 
#
# From: support@sunbird.org
# Subject: Forgot password
# Hi.....
sunbird_mail_server_from_email: "support@myorg.com"       # Email ID that should be as from address in mails
# List of mail ids to whome the monitoring alerts should be sent.
alerts_mailing_list : "devops@myorg.com"                         # Comma separated mail list for Alerts; eg: user1@mail.com, user2@mail.com
# Note - You can use the same azure account for the below variables or have separate azure accounts
sunbird_public_storage_account_name: "change.azure.storage.account.name"         # Azure account name for storing public data (like contents)
sunbird_private_storage_account_name: "change.azure.storage.account.name"           # Azure account name for storing private data (like reports, telemetry data)
sunbird_artifact_storage_account_name: "change.azure.storage.account.name"          # Azure account name for storing artifacts data (like jenkins build zip files)
sunbird_management_storage_account_name: "change.azure.storage.account.name"        # Azure account name for storing backup data (like cassandra backups)
# ------------------------------------------------------------------------------------------------------------ #
# Cloud / Infra Specific values - Check these and update accordingly

# Kubernetes annotation to create private loadbalancer. Will be used for private nginx and others.
# for google:
# nginx_private_ingress_annotations:
#   cloud.google.com/load-balancer-type: "Internal"
# for azure:
# nginx_private_ingress_annotations:
#   service.beta.kubernetes.io/azure-load-balancer-internal: "true"

nginx_private_ingress_annotations:
  service.beta.kubernetes.io/azure-load-balancer-internal: "true"

# ------------------------------------------------------------------------------------------------------------ #

## Optional

learningservice_ip: "10.0.1.5"             # Load balancer IP or server ip
keycloak_url: "http://10.0.1.6:8080"       # Keycloak Load balancer IP; eg http://10.10.10.10 or VM IP with port like http://10.10.10.10:8080
env: dev                  # some name like dev, preprod etc
proto: https               # http or https, preferably https
sunbird_default_channel: sunbird                # default sunbird channel name
environment_id: "10000003"                                 # A 8 digit number for example like 1000000, should be same as defined in KP common.yml

sunbird_content_azure_storage_container: contents        # Azure container name for storing public data (like contents), should be same as azure_public_container defined in KP common.yml
# This sms sender id should be verified by your provider. This is the sender id which will be used for `From Address`. For example, 
#
# From: SBSMS
# Hi.....
# This is optional.
# If not set, you won't get sms OTPs. You'll get it in mail though.
sunbird_msg_sender:                              # SMS from Address; exact 6 char like SBSUNB

#sunbird_cassandra_replication_strategy: '{"class":"NetworkTopologyStrategy","datacenter1":2}' # If using cluster give this value and choose datacenter and replication factor as required '{"class":"NetworkTopologyStrategy","datacenter1":2}' if not using cluster, leave this variable commented

# ------------------------------------------------------------------------------------------------------------ #
#
# **Optional variables** - Can be left blank if you dont plan to use the intended features
#
# ------------------------------------------------------------------------------------------------------------ #
kibana_oauth_authenticated_email_domains_kube: '["domain.com","domain1.com"]'   # whitelisted domains for accessing kibana
# whitelisted email ids for access kibana
kibana_oauth_authenticated_email_ids:
  - email1
  - email2
sunbird_env_logo_url:                           # A public url for logo, this logo url will be used in emails
monitor_alerts_slack_channel:           # Slack channel to receive alerts from monitoring stack

# Certs related vars
certs_badge_name: ""                 # Course Completion Certificate Name e.g value is "Course Completion Certificate"
certs_badge_description: ""           # Descripton of course Completion e.g value is "Successfully completed course on Sunbird"
certs_badge_image: ""                # Image of the certs badge e.g value is "sunbird"
certs_badge_root_org_id: ""          # Root org ID for which the certs will be created e.g value is "0124229474659643111"
certs_badge_issuer_name: ""          # The issuer of the certs name e.g value is "Government of karnataka"
certs_badge_issuer_url:  ""          # Issuer organisation official URL e.g value is "https://testdomain.in"

# ------------------------------------------------------------------------------------------------------------ #
# Sensible defaults which you need not change - But if you would like to change, you are free to do so
env_name: "{{ env }}"
sunbird_app_name: "sunbird"                       # default sunbird app name
postgres:
  db_url: "{{ groups['postgres'][0] }}"
  db_username: analytics
  db_name: analytics
  db_password: "{{core_vault_dp_pgdb_password}}"
  db_table_name: "{{env}}_consumer_channel_mapping"
  db_port: 5432
  db_admin_user: postgres
  db_admin_password: "{{core_vault_postgres_password}}"

# Azure account related vars
sunbird_azure_public_storage_account_name: "{{ sunbird_public_storage_account_name }}"
upstream_url: "{{sunbird_azure_public_storage_account_name}}.blob.core.windows.net/{{sunbird_content_azure_storage_container}}" # Proxy url to get /assets/public
plugin_upstream_url: "{{upstream_url}}"
azure_plugin_storage_account_name: "{{sunbird_azure_public_storage_account_name}}"
azure_plugin_storage_account_key: "{{sunbird_public_storage_account_key}}"
plugin_container_name: "{{sunbird_content_azure_storage_container}}"
kp_schema_base_path: "{{proto}}://{{sunbird_public_storage_account_name}}.blob.core.windows.net/{{plugin_container_name}}/schemas/local"

keycloak_api_management_user_email: "admin@sunbird.org"
sunbird_installation_email: "admin@sunbird.org"

# Other vars
cert_service_container_name: e-credentials               # Conatiner name for cert service to store cert templates
cert_service_cloud_storage_type: azure                   # Changes this if you use other clouds like aws, gcp
artifacts_container: artifacts                           # Azure blob container name to save built artifacts, default it can be arti
dataexhaust_super_admin_channel: sunbird
dedup_redis_host: "{{ groups['dp-redis'][0] }}"          # for router service
namespace: "{{ env }}"                                   # required for bot and router, these helm charts should be moved to devops repo
imagepullsecrets: "{{ env }}registrysecret"              # kubernetes imagePullSecrets
kubeconfig_path: /var/lib/jenkins/secrets/k8s.yaml       # kubeconfig file path on jenkins
private_ingress_custom_annotations: true                 # this ensure the LB is a internal LB 
graph_passport_key: "{{core_vault_graph_passport_key}}"
sunbird_portal_player_cdn_enabled: false
sunbird_ekstep_proxy_base_url: "{{proto}}://{{domain_name}}"
monitor_alerts_mail_from_email: "{{ sunbird_mail_server_from_email }}"
ekstep_s3_env: ""                                        # This variable is not used and leave the value as empty
freshDesk_token: ""

# Provide the admin-api consumer access to all API's - The public repo restricts this for security reasons
# If you dont want to key to have access to all API's, please remove the variables kong_all_consumer_groups and kong_consumers or edit the groups to have a smaller subset
kong_all_consumer_groups:
  - appAccess
  - appAdmin
  - appCreate
  - appUpdate
  - badgeAccess
  - badgeAdmin
  - badgeCreate
  - badgeUpdate
  - certificateAccess
  - certificateCreate
  - certificateUpdate
  - channelAccess
  - channelAdmin
  - channelCreate
  - channelUpdate
  - contentAccess
  - contentAdmin
  - contentCreate
  - contentSuperAdmin
  - contentUpdate
  - courseAccess
  - courseAdmin
  - courseCreate
  - courseSuperAdmin
  - courseUpdate
  - dataAccess
  - dataCreate
  - desktopAdmin
  - desktopSuperAdmin
  - deviceCreate
  - dialcodeAccess
  - dialcodeAdmin
  - dialcodeCreate
  - dialcodeUpdate
  - discussionAccess
  - discussionCreate
  - druidReportAdmin
  - druidReportCreate
  - experimentCreate
  - expirementAccess
  - formCreate
  - formUpdate
  - frameworkAccess
  - frameworkAdmin
  - frameworkCreate
  - frameworkUpdate
  - groupAccess
  - groupAdmin
  - groupCreate
  - groupUpdate
  - igotAdmin
  - igotApp
  - itemSetAdmin
  - kongConsumerAdmin
  - locationAccess
  - locationAdmin
  - locationCreate
  - locationSuperAdmin
  - locationUpdate
  - mobileAdmin
  - mobileOpenRAPAdmin
  - mobileOpenRAPSuperAdmin
  - mobileSuperAdmin
  - mobileTeacherAidAdmin
  - mobileTeacherAidSuperAdmin
  - noteAccess
  - noteAdmin
  - noteCreate
  - noteUpdate
  - orgAccess
  - orgAdmin
  - orgCreate
  - orgSuperAdmin
  - orgUpdate
  - pageAccess
  - pageCreate
  - pageUpdate
  - pluginAccess
  - portalAdmin
  - refreshTokenCreate
  - reportsAccess
  - reportsAdmin
  - reportsCreate
  - reportsUpdate
  - ssoAdmin
  - ssoCreate
  - telemetryCreate
  - userAccess
  - userAdmin
  - userCreate
  - userSuperAccess
  - userSuperAdmin
  - userTempAdmin
  - userUpdate

kong_consumers:
  - username: api-admin
    groups: "{{ kong_all_consumer_groups }}"
    state: present

## Grafana oauth

# Grafana access htpasswd
# You can generate one at
# https://wtools.io/generate-htpasswd-online
# admin:{{ grafana_admin_password }}
# eg: grafana_nginx_private_htpasswd: admin:$apr1$mf3whl$79CIvrwS7B2EZsEhKhH8w0
grafana_nginx_private_htpasswd: ""
# This is the header with which grafana will authorize the admin user.
# Make sure this is a random text.
# Ref: https://grafana.com/docs/grafana/latest/auth/auth-proxy/
grafana_admin_user_http_header: "X-privateSecretHeader-Auth"

grafana_google_oauth_client_id: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com"
grafana_google_oauth_client_secret: "xxxxxxxxxxxxxxxxxxxxxxxx"

# New line sperated list of users.
# For example:
# grafana_login_whitelisted_emails: |-
#   user1@gmail.com
#   user2@yahoo.com
grafana_login_whitelisted_emails: ""
