# ------------------------------------------------------------------------------------------------------------ #
# Mandatorty variables - DO NOT LEAVE ANYTHING BLANK #
# docker hub details
cloud_service_provider: ""       # Your cloud service provider name. Supported values are aws, azure, gcloud
dockerhub: "change.docker.url"                 # docker hub username or url incase of private registry
private_ingressgateway_ip: "" # your private kubernetes load balancer ip
domain_name: ""               # your domain name like example.com

# Cloud Service Provider Variables
cloud_public_storage_accountname: ""  # If cloud_service_provider is aws--> access key, gcp--> service account name, azure--> storage account name
cloud_public_storage_endpoint: ""     # Not required in current release
cloud_public_storage_region: ""       # If cloud_service_provider is aws or oci update this variable
cloud_public_storage_project: ""      # If cloud_service_provider is gcp update this variable
cloud_public_storage_namespace: ""    # If cloud_service_provider is oci update this variable

cloud_private_storage_accountname: "" # If cloud_service_provider is aws--> access key, gcp--> service account name, azure--> storage account name
cloud_private_storage_endpoint: ""    # Not required in current release
cloud_private_storage_region: ""      # If cloud_service_provider is aws or oci update this variable
cloud_private_storage_project: ""     # If cloud_service_provider is gcp update this variable
cloud_private_storage_namespace: ""    # If cloud_service_provider is oci update this variable

cloud_management_storage_accountname: ""  # If cloud_service_provider is aws--> access key, gcp--> service account name, azure--> storage account name
cloud_management_storage_endpoint: ""     # Not required in current release
cloud_management_storage_region: ""       # If cloud_service_provider is aws or oci update this variable
cloud_management_storage_project: ""      # If cloud_service_provider is gcp update this variable
cloud_management_storage_namespace: ""    # If cloud_service_provider is oci update this variable

cloud_artifact_storage_accountname: ""  # If cloud_service_provider is aws--> access key, gcp--> service account name, azure--> storage account name
cloud_artifact_storage_endpoint: ""     # Not required in current release
cloud_artifact_storage_region: ""       # If cloud_service_provider is aws or oci update this variable
cloud_artifact_storage_project: ""      # If cloud_service_provider is gcp update this variable
cloud_artifact_storage_namespace: ""    # If cloud_service_provider is oci update this variable

# Create object storage for each below mentioned variables and update accordingly
cloud_storage_certqr_bucketname: ""
cloud_storage_chatbot_bucketname: ""
cloud_storage_dial_bucketname: ""
cloud_storage_flink_bucketname: ""
cloud_storage_playercdn_bucketname: ""
cloud_storage_public_bucketname: ""
cloud_storage_publicreports_bucketname: ""
cloud_storage_privatereports_bucketname: ""
cloud_storage_samiksha_bucketname: ""
cloud_storage_schema_bucketname: ""
cloud_storage_sourcing_bucketname: ""
cloud_storage_offlineinstaller_bucketname: ""
cloud_storage_content_bucketname: ""
cloud_storage_telemetry_bucketname: ""
cloud_storage_termsandcondtions_bucketname: ""
cloud_storage_user_bucketname: ""
cloud_storage_desktopappcrashlogs_bucketname: ""
cloud_storage_label_bucketname: ""
cloud_storage_certservice_bucketname: ""
cloud_storage_uci_bucketname: "" 
cloud_storage_artifacts_bucketname: ""

cloud_storage_management_bucketname: ""  # This object storage is used for backups

## Enable below vars to upload database backups in seperate buckets 
# cloud_storage_cassandrabackup_bucketname: ""
# cloud_storage_dpcassandrabackup_bucketname: ""
# cloud_storage_dppostgresbackup_bucketname: ""
# cloud_storage_dpredisbackup_bucketname: ""
# cloud_storage_esbackup_bucketname: ""
# cloud_storage_influxdbbackup_bucketname: ""
# cloud_storage_jenkinsbackup_bucketname: ""
# cloud_storage_mongobackup_bucketname: ""
# cloud_storage_neo4jbackup_bucketname: ""
# cloud_storage_redisbackup_bucketname: ""


# Uncomment the variable based on your cloud provider (as a default we have kept Azure variable uncommented)
# GCP
# cloud_storage_url: https://storage.cloud.google.com
# AWS
# cloud_storage_url: "https://s3.{{ cloud_public_storage_region }}.amazonaws.com"
# OCI
# cloud_storage_url: https://{{ cloud_public_storage_namespace }}.compat.objectstorage.{{ cloud_public_storage_region }}.oraclecloud.com/{{ bucket_name }}
# Azure
cloud_storage_url: "https://{{ cloud_public_storage_accountname }}.blob.core.windows.net"

# Optional

env: dev                  # some name like dev, preprod etc
proto: https               # http or https, preferably https

environment_id: "10000003"                                   # A 8 digit number for example like 1000000,
                                                  # Important: same as the one in core/common.yaml
neo4j_zip: neo4j-community-3.3.9-unix.tar.gz      # Neo4j file name present in the azure blob artifacts folder (only neo4j 3.4 and below is supported)
neo4j_home: "{{learner_user_home}}/{{neo4j_dir}}/neo4j-community-3.3.9"   # update the version number here of the neo4j
neo4j_enterprise: false                           # Set this to true if you use the enterprise version


# ------------------------------------------------------------------------------------------------------------ #
# Sensible defaults which you need not change - But if you would like to change, you are free to do so
ekstep_domain_name: "{{ proto }}://{{ domain_name }}"

# SB-31155 - This should be deprecated in future in favour of plugin_storage
plugin_container_name: "{{ cloud_storage_content_bucketname }}"

kp_schema_base_path: "{{ cloud_storage_url }}/{{ cloud_storage_content_bucketname }}/schemas/local"
imagepullsecrets: "{{env}}registrysecret"                 # kubernetes imagePullSecrets
kubeconfig_path: /var/lib/jenkins/secrets/k8s.yaml        # kubeconfig file path on jenkins

