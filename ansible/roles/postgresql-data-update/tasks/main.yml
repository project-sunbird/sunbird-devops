- name: install psycopg2
  package:
    name: python-psycopg2
    state: present

- name: Verifying db users are present else creating them
  include: databases.yml

- name: creating database
  include: users.yml

- name: Copy the templates
  become: yes
  template: src={{item}} dest=/tmp/{{item}}
  with_items:
    - tables_postgres.sql

- name: Dump api manager database to a file
  postgresql_db:
    login_user: "{{ application_postgres_user }}"
    login_password: "{{ application_postgres_password }}"
    login_host: "{{ application_postgres_host }}"
    name: "{{ application_postgres_database }}"
    state: dump
    target: "/tmp/tables_postgres.sql"

    #- name: run the templates in the postgres
    #  become: yes
    #  postgresql_db:
    #    name: "{{ item.name }}"
    #    password: "{{ item.password | default(omit) }}"
    #    priv: "{{ item.priv | default(omit) }}"
    #    role_attr_flags: "{{ item.role_attr_flags | default(omit) }}"
    #    db: "{{ item.db | default(omit) }}"
    #    login_host: "{{ item.login_host | default('localhost') }}"
    #    login_password: "{{ item.login_password | default(omit) }}"
    #    login_user: "{{ item.login_user | default(postgresql_user) }}"
    #    login_unix_socket: "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}"
    #    port: "{{ item.port | default(omit) }}"
    #    state: "{{ item.state | default('present') }}"
    #  with_items: "{{ postgresql_users }}"
    #  no_log: true
    #  become: yes
    #  become_user: "{{ postgresql_user }}"
    #  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
    #  vars: 
    #    ansible_ssh_pipelining: true
      


    #- name: Run the postgresql command
    #  become: yes
    #  environment:
    #    PGPASSWORD: "{{ application_postgres_password }}"
    #  command: "psql -h 127.0.0.1 -U {{application_postgres_user}} -d {{application_postgres_database}} -a -f /tmp/tables_postgres.sql"
