
---
kong_admin_api_url: "http://{{kong_host}}:8001"

# Default statsd_metrics
statsd_metrics: ["request_count", "status_count", "latency", "upstream_latency", "request_size", "response_size"]
statsd_host: monitor_statsd_exporter
statsd_port: 9125

statsd_pulgin:
  name: statsd
  config.metrics: "{{ statsd_metrics }}"
  config.host: "{{ statsd_host }}"
  config.port: "{{ statsd_port }}"

# Default Rate limits
small_rate_limit_per_hour: 100
medium_rate_limit_per_hour: 5000
x_medium_rate_limit_per_hour: 5000
large_rate_limit_per_hour: 10000
x2_large_rate_limit_per_hour: 15000
x_large_rate_limit_per_hour: 30000

premium_consumer_small_rate_limit_per_hour: 1000
premium_consumer_medium_rate_limit_per_hour: 10000
premium_consumer_large_rate_limit_per_hour: 100000

# Default max request size in MB
small_request_size_limit: 1
medium_request_size_limit: 10
large_request_size_limit: 100

# Default service prefixes
private_content_prefix: /private/content
content_prefix: /content
course_service_prefix: /course
user_service_prefix: /user
data_service_prefix: /data
notes_service_prefix: /notes
org_service_prefix: /org
echo_service_prefix: /echo
composite_service_prefix: /composite
api_manager_perfix: /api-manager
meta_service_prefix: /meta
dashboard_service_prefix: /dashboard
announcement_service_prefix: /announcement
dialcode_service_prefix: /dialcode
channel_service_prefix: /channel
framework_service_prefix: /framework
badge_service_prefix: /badging
plugin_service_prefix: /plugins
config_service_prefix: /config
textbook_service_prefix: /textbook
lock_service_prefix: /lock
otp_service_prefix: /otp
sso_service_prefix: /sso
cert_service_prefix: /cert
cert_registry_service_prefix: /certreg
desktop_app_prefix: /desktop
license_api_prefix: /license

# Service URLs
knowledge_mw_service_url: "http://knowledge-mw-service:5000"
learning_service_url: "http://learner-service:9000"
vm_learning_service_url: "http://{{learningservice_ip}}:8080/learning-service"
telemetry_service_url: "http://telemetry-service:9001"
player_service_url: "http://player:3000"
echo_service_url: "http://echo:9595"
am_util_url: "http://adminutil:4000"
config_service_url: "http://config-service:8080"
user_org_service_url: "http://user-org-service:9000"
lms_service_url: "http://lms-service:9000"
cert_service_url: "http://cert-service:9000"
cert_registry_service_url: "http://cert-registry-service:9000"
content_service_url: "http://content-service:9000"

premium_consumer_rate_limits:
  - api: createContent
    config.hour: "{{ premium_consumer_small_rate_limit_per_hour }}"
    config.limit_by: credential
    config.policy: local
  - api: updateContent
    config.hour: "{{ premium_consumer_medium_rate_limit_per_hour }}"
    config.limit_by: credential
    config.policy: local
  - api: readContent
    config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
    config.limit_by: credential
    config.policy: local

# Example:
# kong_apis:
# - name: "readContent"
#   request_path: "/v3/public/content/read"
#   upstream_url: "{{ learning_service_url }}/v3/public/content/read"
#   strip_request_path: true
#   plugins:
#    - {name: 'jwt'}
#    - {name: 'cors'}
#    - {name: 'statsd', config.metrics: "{{ statsd_metrics }}" }
#    - {name: 'acl', config.whitelist: 'contentUser'}
#    - {name: 'rate-limiting', config.hour: "{{ medium_rate_limit_per_hour }}"}
#    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ medium_request_size_limit }}" }
kong_apis:

  - name: PrivateContentAPIs
    request_path: "{{ private_content_prefix }}/v3"
    upstream_url: "{{ vm_learning_service_url }}/content/v3"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ PrivateContentAPIs_ACL | default(['privateContentMgmt']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: PrivateContentCreateAPIs
    request_path: "{{ private_content_prefix }}/v3/create"
    upstream_url: "{{ content_service_url }}/content/v3/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ PrivateContentCreateAPIs_ACL | default(['privateContentMgmt']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: PrivateContentUpdateAPIs
    request_path: "{{ private_content_prefix }}/v3/update"
    upstream_url: "{{ content_service_url }}/content/v3/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ PrivateContentUpdateAPIs_ACL | default(['privateContentMgmt']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: PrivateContentReadAPIs
    request_path: "{{ private_content_prefix }}/v3/read"
    upstream_url: "{{ content_service_url }}/content/v3/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ PrivateContentReadAPIs_ACL | default(['privateContentMgmt']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createContent
    request_path: "{{ content_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createContent_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchContent
    request_path: "{{ content_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/search"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateContent
    request_path: "{{ content_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateContent_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readContent
    request_path: "{{ content_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: submitContentForReview
    request_path: "{{ content_prefix }}/v1/review"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/review"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ submitContentForReview_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishContent
    request_path: "{{ content_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ publishContent_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: uploadContent
    request_path: "{{ content_prefix }}/v1/upload"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ uploadContent_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ large_request_size_limit }}"

  - name: retireContent
    request_path: "{{ content_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ retireContent_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createCourse
    request_path: "{{ course_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createCourse_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchCourse
    request_path: "{{ course_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchCourse_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateCourse
    request_path: "{{ course_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateCourse_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readCourse
    request_path: "{{ course_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readCourse_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: submitCourseForReview
    request_path: "{{ course_service_prefix }}/v1/review"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/review"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ submitCourseForReview_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishCourse
    request_path: "{{ course_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ publishCourse_ACL | default(['courseAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: retireCourse
    request_path: "{{ course_service_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ retireCourse_ACL | default(['courseAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getCourseHierarchy
    request_path: "{{ course_service_prefix }}/v1/hierarchy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/course/hierarchy"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseEnrolment
    request_path: "{{ course_service_prefix }}/v1/enrol"
    upstream_url: "{{ lms_service_url }}/v1/course/enroll"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseEnrolment_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseUnEnrolment
    request_path: "{{ course_service_prefix }}/v1/unenrol"
    upstream_url: "{{ lms_service_url }}/v1/course/unenroll"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseUnEnrolment_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listCourseEnrollments
    request_path: "{{ course_service_prefix }}/v1/user/enrollment/list"
    upstream_url: "{{ lms_service_url }}/v1/user/courses/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listCourseEnrollments_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readCourseEnrollment
    request_path: "{{ course_service_prefix }}/v1/user/enrollment/read"
    upstream_url: "{{ lms_service_url }}/v1/user/courses/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readCourseEnrollment_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readContentState
    request_path: "{{ course_service_prefix }}/v1/content/state/read"
    upstream_url: "{{ lms_service_url }}/v1/content/state/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readContentState_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateContentState
    request_path: "{{ course_service_prefix }}/v1/content/state/update"
    upstream_url: "{{ lms_service_url }}/v1/content/state/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateContentState_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createUser
    request_path: "{{ user_service_prefix }}/v1/create"
    upstream_url: "{{ learning_service_url }}/v1/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createUser_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createUserVersion2
    request_path: "{{ user_service_prefix }}/v2/create"
    upstream_url: "{{ learning_service_url }}/v2/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createUserVersion2_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateUser
    request_path: "{{ user_service_prefix }}/v1/update"
    upstream_url: "{{ learning_service_url }}/v1/user/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateUser_ACL | default(['userUpdate','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserProfile
    request_path: "{{ user_service_prefix }}/v1/read"
    upstream_url: "{{ learning_service_url }}/v1/user/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserProfile_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserProfileV2
    request_path: "{{ user_service_prefix }}/v2/read"
    upstream_url: "{{ learning_service_url }}/v2/user/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserProfileV2_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchUser
    request_path: "{{ user_service_prefix }}/v1/search"
    upstream_url: "{{ learning_service_url }}/v1/user/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchUser_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: retireUser
    request_path: "{{ user_service_prefix }}/v1/retire"
    upstream_url: "{{ learning_service_url }}/v1/user/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ retireUser_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createPage
    request_path: "{{ data_service_prefix }}/v1/page/create"
    upstream_url: "{{ lms_service_url }}/v1/page/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createPage_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updatePage
    request_path: "{{ data_service_prefix }}/v1/page/update"
    upstream_url: "{{ lms_service_url }}/v1/page/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updatePage_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getPageSettings
    request_path: "{{ data_service_prefix }}/v1/page/read"
    upstream_url: "{{ lms_service_url }}/v1/page/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getPageSettings_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: dialAssemble
    request_path: "{{ data_service_prefix }}/v1/dial/assemble"
    upstream_url: "{{ lms_service_url }}/v1/page/assemble"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: assemblePage
    request_path: "{{ data_service_prefix }}/v1/page/assemble"
    upstream_url: "{{ lms_service_url }}/v1/page/assemble"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createNote
    request_path: "{{ notes_service_prefix }}/v1/create"
    upstream_url: "{{ learning_service_url }}/v1/note/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createNote_ACL | default(['noteUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateNote
    request_path: "{{ notes_service_prefix }}/v1/update"
    upstream_url: "{{ learning_service_url }}/v1/note/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateNote_ACL | default(['noteUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readNote
    request_path: "{{ notes_service_prefix }}/v1/read"
    upstream_url: "{{ learning_service_url }}/v1/note/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readNote_ACL | default(['noteUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchNotes
    request_path: "{{ notes_service_prefix }}/v1/search"
    upstream_url: "{{ learning_service_url }}/v1/note/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchNotes_ACL | default(['noteUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createOrg
    request_path: "{{ org_service_prefix }}/v1/create"
    upstream_url: "{{ learning_service_url }}/v1/org/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createOrg_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateOrg
    request_path: "{{ org_service_prefix }}/v1/update"
    upstream_url: "{{ learning_service_url }}/v1/org/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateOrg_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readOrg
    request_path: "{{ org_service_prefix }}/v1/read"
    upstream_url: "{{ learning_service_url }}/v1/org/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readOrg_ACL | default(['orgUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchOrg
    request_path: "{{ org_service_prefix }}/v1/search"
    upstream_url: "{{ learning_service_url }}/v1/org/search"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: addMember
    request_path: "{{ org_service_prefix }}/v1/member/add"
    upstream_url: "{{ learning_service_url }}/v1/org/member/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addMember_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: removeMember
    request_path: "{{ org_service_prefix }}/v1/member/remove"
    upstream_url: "{{ learning_service_url }}/v1/org/member/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ removeMember_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: suspendMember
    request_path: "{{ org_service_prefix }}/v1/member/suspend"
    upstream_url: "{{ learning_service_url }}/v1/org/member/suspend"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ suspendMember_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateMembership
    request_path: "{{ org_service_prefix }}/v1/member/update"
    upstream_url: "{{ learning_service_url }}/v1/org/member/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateMembership_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: echo
    request_path: "{{ echo_service_prefix }}"
    upstream_url: "{{ echo_service_url }}"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ echo_ACL | default(['echoUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createPageSection
    request_path: "{{ data_service_prefix }}/v1/page/section/create"
    upstream_url: "{{ lms_service_url }}/v1/page/section/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createPageSection_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updatePageSection
    request_path: "{{ data_service_prefix }}/v1/page/section/update"
    upstream_url: "{{ lms_service_url }}/v1/page/section/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updatePageSection_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listPageSections
    request_path: "{{ data_service_prefix }}/v1/page/section/list"
    upstream_url: "{{ lms_service_url }}/v1/page/section/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listPageSections_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readPageSection
    request_path: "{{ data_service_prefix }}/v1/page/section/read"
    upstream_url: "{{ lms_service_url }}/v1/page/section/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readPageSection_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readRoleMapping
    request_path: "{{ data_service_prefix }}/v1/role/read"
    upstream_url: "{{ learning_service_url }}/v1/role/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readRoleMapping_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateAssessment
    request_path: "{{ course_service_prefix }}/v1/assessment/update"
    upstream_url: "{{ learning_service_url }}/v1/assessment/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateAssessment_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readAssessmentResult
    request_path: "{{ course_service_prefix }}/v1/assessment/result/read"
    upstream_url: "{{ learning_service_url }}/v1/assessment/result/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readAssessmentResult_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateOrgStatus
    request_path: "{{ org_service_prefix }}/v1/status/update"
    upstream_url: "{{ learning_service_url }}/v1/org/status/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateOrgStatus_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readUserProfile
    request_path: "{{ user_service_prefix }}/v1/profile/read"
    upstream_url: "{{ learning_service_url }}/v1/user/getuser"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readUserProfile_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: registerMobileApp
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileApp_ACL | default(['mobileAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: registerMobileDevice
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileDevice_ACL | default(['mobileApp']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerMobileAppOpenRAP
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app_openrap/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app_openrap/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileAppOpenRAP_ACL | default(['mobileAdminOpenRAP']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerMobileDeviceOpenRAP
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device_openrap/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device_openrap/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileDeviceOpenRAP_ACL | default(['mobileAppOpenRAP']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: compositeSearch
    request_path: "{{ composite_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ compositeSearch_ACL | default(['appUpdate','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listTerms
    request_path: "{{ meta_service_prefix }}/v1/terms/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/terms/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listTerms_ACL | default(['configUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listResourceBundles
    request_path: "{{ meta_service_prefix }}/v1/resourcebundles/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/resourcebundles/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listResourceBundles_ACL | default(['configUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listOrdinals
    request_path: "{{ meta_service_prefix }}/v1/ordinals/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/ordinals/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listOrdinals_ACL | default(['configUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: telemetry
    request_path: "{{ data_service_prefix }}/v1/telemetry"
    upstream_url: "{{ telemetry_service_url }}/v1/telemetry"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ telemetry_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: flagContent
    request_path: "{{ content_prefix }}/v1/flag"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/flag"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ flagContent_ACL | default(['contentUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: acceptContentFlag
    request_path: "{{ content_prefix }}/v1/flag/accept"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/flag/accept"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ acceptContentFlag_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: rejectContentFlag
    request_path: "{{ content_prefix }}/v1/flag/reject"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/flag/reject"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ rejectContentFlag_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getOrgCreationDashboard
    request_path: "{{ dashboard_service_prefix }}/v1/creation/org"
    upstream_url: "{{ learning_service_url }}/v1/dashboard/creation/org"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getOrgCreationDashboard_ACL | default(['orgUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getOrgConsumptionDashboard
    request_path: "{{ dashboard_service_prefix }}/v1/consumption/org"
    upstream_url: "{{ learning_service_url }}/v1/dashboard/consumption/org"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getOrgConsumptionDashboard_ACL | default(['orgUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getCourseProgressDashboard
    request_path: "{{ dashboard_service_prefix }}/v1/progress/course"
    upstream_url: "{{ lms_service_url }}/v1/dashboard/progress/course"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getCourseProgressDashboard_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getCourseProgressDashboardV2
    request_path: "{{ dashboard_service_prefix }}/v2/progress/course"
    upstream_url: "{{ lms_service_url }}/v2/dashboard/progress/course"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getCourseProgressDashboardV2_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getCourseConsumptionDashboard
    request_path: "{{ dashboard_service_prefix }}/v1/consumption/course"
    upstream_url: "{{ lms_service_url }}/v1/dashboard/consumption/course"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getCourseConsumptionDashboard_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserCreationDashboard
    request_path: "{{ dashboard_service_prefix }}/v1/creation/user"
    upstream_url: "{{ learning_service_url }}/v1/dashboard/creation/user"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserCreationDashboard_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserConsumptionDasbhoard
    request_path: "{{ dashboard_service_prefix }}/v1/consumption/user"
    upstream_url: "{{ learning_service_url }}/v1/dashboard/consumption/user"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserConsumptionDasbhoard_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userBulkUpload
    request_path: "{{ user_service_prefix }}/v1/upload"
    upstream_url: "{{ learning_service_url }}/v1/user/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ userBulkUpload_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: orgBulkUpload
    request_path: "{{ org_service_prefix }}/v1/upload"
    upstream_url: "{{ learning_service_url }}/v1/org/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ orgBulkUpload_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: checkUploadJobStatus
    request_path: "{{ data_service_prefix }}/v1/upload/status"
    upstream_url: "{{ learning_service_url }}/v1/upload/status"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ checkUploadJobStatus_ACL | default(['appAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUploadJobStatusLink
    request_path: "{{ data_service_prefix }}/v1/upload/statusDownloadLink"
    upstream_url: "{{ learning_service_url }}/v1/upload/statusDownloadLink"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUploadJobStatusLink_ACL | default(['appAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createBatch
    request_path: "{{ course_service_prefix }}/v1/batch/create"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createBatch_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateBatch
    request_path: "{{ course_service_prefix }}/v1/batch/update"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateBatch_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: addUserToBatch
    request_path: "{{ course_service_prefix }}/v1/batch/user/add"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/users/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addUserToBatch_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: removeUserFromBatch
    request_path: "{{ course_service_prefix }}/v1/batch/user/remove"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/users/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ removeUserFromBatch_ACL | default(['courseUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getBatch
    request_path: "{{ course_service_prefix }}/v1/batch/read"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getBatch_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getParticipants
    request_path: "{{ course_service_prefix }}/v1/batch/participants/list"
    upstream_url: "{{ lms_service_url }}/v1/batch/participants/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getParticipants_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: assignRole
    request_path: "{{ user_service_prefix }}/v1/role/assign"
    upstream_url: "{{ learning_service_url }}/v1/user/assign/role"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ assignRole_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: indexSync
    request_path: "{{ data_service_prefix }}/v1/index/sync"
    upstream_url: "{{ learning_service_url }}/v1/data/sync"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ indexSync_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: blockUser
    request_path: "{{ user_service_prefix }}/v1/block"
    upstream_url: "{{ learning_service_url }}/v1/user/block"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ blockUser_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: unblockUser
    request_path: "{{ user_service_prefix }}/v1/unblock"
    upstream_url: "{{ learning_service_url }}/v1/user/unblock"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ unblockUser_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: uploadMedia
    request_path: "{{ content_prefix }}/v1/media/upload"
    upstream_url: "{{ learning_service_url }}/v1/file/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ uploadMedia_ACL | default(['contentUpdate','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: listCourseBatches
    request_path: "{{ course_service_prefix }}/v1/batch/list"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listCourseBatches_ACL | default(['courseUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: batchBulkEnrolment
    request_path: "{{ course_service_prefix }}/v1/batch/bulk/enrollment"
    upstream_url: "{{ lms_service_url }}/v1/batch/bulk/enrollment"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ batchBulkEnrolment_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: batchBulkUnEnrolment
    request_path: "{{ course_service_prefix }}/v1/batch/bulk/unenrollment"
    upstream_url: "{{ lms_service_url }}/v1/batch/bulk/unenrollment"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ batchBulkUnEnrolment_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getTenantInfo
    request_path: "{{ org_service_prefix }}/v1/tenant/info"
    upstream_url: "{{ player_service_url }}/v1/tenant/info"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getTenantInfo_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getContentUploadUrl
    request_path: "{{ content_prefix }}/v1/upload/url/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/upload/url"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getContentUploadUrl_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: rejectContent
    request_path: "{{ content_prefix }}/v1/reject"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/reject"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ rejectContent_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: deleteNote
    request_path: "{{ notes_service_prefix }}/v1/delete"
    upstream_url: "{{ learning_service_url }}/v1/note/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteNote_ACL | default(['noteAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: sendEmailNotification
    request_path: "{{ user_service_prefix }}/v1/notification/email"
    upstream_url: "{{ learning_service_url }}/v1/notification/email"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ sendEmailNotification_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: listAllBadges
    request_path: "{{ org_service_prefix }}/v1/badges/list"
    upstream_url: "{{ learning_service_url }}/v1/badges/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listAllBadges_ACL | default(['orgUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: addBadgeToUser
    request_path: "{{ user_service_prefix }}/v1/badges/add"
    upstream_url: "{{ learning_service_url }}/v1/user/badges/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addBadgeToUser_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: listOrgTypes
    request_path: "{{ org_service_prefix }}/v1/type/list"
    upstream_url: "{{ learning_service_url }}/v1/org/type/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listOrgTypes_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createOrgType
    request_path: "{{ org_service_prefix }}/v1/type/create"
    upstream_url: "{{ learning_service_url }}/v1/org/type/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createOrgType_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateOrgType
    request_path: "{{ org_service_prefix }}/v1/type/update"
    upstream_url: "{{ learning_service_url }}/v1/org/type/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateOrgType_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateUserloginTime
    request_path: "{{ user_service_prefix }}/v1/update/logintime"
    upstream_url: "{{ learning_service_url }}/v1/user/update/logintime"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateUserloginTime_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getMediaTypes
    request_path: "{{ user_service_prefix }}/v1/mediatype/list"
    upstream_url: "{{ learning_service_url }}/v1/user/mediatype/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getMediaTypes_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: DecryptData
    request_path: "{{ data_service_prefix }}/v1/user/decrypt"
    upstream_url: "{{ learning_service_url }}/v1/user/data/decrypt"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ DecryptData_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: encryptData
    request_path: "{{ data_service_prefix }}/v1/user/encrypt"
    upstream_url: "{{ learning_service_url }}/v1/user/data/encrypt"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ encryptData_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: searchAuditHistory
    request_path: "{{ data_service_prefix }}/v1/audit/history"
    upstream_url: "{{ learning_service_url }}/v1/audit/history"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchAuditHistory_ACL | default(['appAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: addUserSkill
    request_path: "{{ user_service_prefix }}/v1/skill/add"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addUserSkill_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getUserSkill
    request_path: "{{ user_service_prefix }}/v1/skill/read"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserSkill_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getSkills
    request_path: "{{ data_service_prefix }}/v1/skills"
    upstream_url: "{{ learning_service_url }}/v1/skills"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getSkills_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateUserSkill
    request_path: "{{ user_service_prefix }}/v1/skill/update"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateUserSkill_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: addUserSkillEndorsement
    request_path: "{{ user_service_prefix }}/v1/skill/endorse/add"
    upstream_url: "{{ learning_service_url }}/v1/user/skill/endorse/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addUserSkillEndorsement_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAllData
    request_path: "{{ data_service_prefix }}/v1/object/read/list"
    upstream_url: "{{ learning_service_url }}/v1/object/read/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAllData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getData
    request_path: "{{ data_service_prefix }}/v1/object/read"
    upstream_url: "{{ learning_service_url }}/v1/object/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createData
    request_path: "{{ data_service_prefix }}/v1/object/create"
    upstream_url: "{{ learning_service_url }}/v1/object/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ large_request_size_limit }}"

  - name: updateData
    request_path: "{{ data_service_prefix }}/v1/object/update"
    upstream_url: "{{ learning_service_url }}/v1/object/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: deleteData
    request_path: "{{ data_service_prefix }}/v1/object/delete"
    upstream_url: "{{ learning_service_url }}/v1/object/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteData_ACL | default(['dataAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: searchData
    request_path: "{{ data_service_prefix }}/v1/object/search"
    upstream_url: "{{ learning_service_url }}/v1/object/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAnnouncementDefinitions
    request_path: "{{announcement_service_prefix}}/v1/definitions"
    upstream_url: "{{ player_service_url }}/announcement/v1/definitions"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAnnouncementDefinitions_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createAnnouncement
    request_path: "{{announcement_service_prefix}}/v1/create"
    upstream_url: "{{ player_service_url }}/announcement/v1/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createAnnouncement_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: cancelAnnouncement
    request_path: "{{announcement_service_prefix}}/v1/cancel"
    upstream_url: "{{ player_service_url }}/announcement/v1/cancel"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ cancelAnnouncement_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getAnnouncementInbox
    request_path: "{{announcement_service_prefix}}/v1/user/inbox"
    upstream_url: "{{ player_service_url }}/announcement/v1/user/inbox"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAnnouncementInbox_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getAnnouncementOutbox
    request_path: "{{announcement_service_prefix}}/v1/user/outbox"
    upstream_url: "{{ player_service_url }}/announcement/v1/user/outbox"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAnnouncementOutbox_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getAnnouncement
    request_path: "{{announcement_service_prefix}}/v1/get"
    upstream_url: "{{ player_service_url }}/announcement/v1/get"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAnnouncement_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerClient
    request_path: "{{ data_service_prefix }}/v1/client/register"
    upstream_url: "{{ learning_service_url }}/v1/client/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerClient_ACL | default(['dataAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateClientKey
    request_path: "{{ data_service_prefix }}/v1/client/key/update"
    upstream_url: "{{ learning_service_url }}/v1/client/key/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateClientKey_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getClientKey
    request_path: "{{ data_service_prefix }}/v1/client/key/read"
    upstream_url: "{{ learning_service_url }}/v1/client/key/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getClientKey_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getTenantPreference
    request_path: "{{ org_service_prefix }}/v1/tc/read"
    upstream_url: "{{ learning_service_url }}/v1/org/tc/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getTenantPreference_ACL | default(['orgUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createTenantPreference
    request_path: "{{ org_service_prefix }}/v1/tc/create"
    upstream_url: "{{ learning_service_url }}/v1/org/tc/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createTenantPreference_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateTenantPreference
    request_path: "{{ org_service_prefix }}/v1/tc/update"
    upstream_url: "{{ learning_service_url }}/v1/org/tc/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateTenantPreference_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateUserTcStatus
    request_path: "{{ user_service_prefix }}/v1/tc/update"
    upstream_url: "{{ learning_service_url }}/v1/user/tc/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateUserTcStatus_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createLocation
    request_path: "{{ org_service_prefix }}/v1/location/create"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createLocation_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getLocation
    request_path: "{{ org_service_prefix }}/v1/location/read"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getLocation_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: deleteLocation
    request_path: "{{ org_service_prefix }}/v1/location/delete"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteLocation_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateLocation
    request_path: "{{ org_service_prefix }}/v1/location/update"
    upstream_url: "{{ learning_service_url }}/v1/notification/location/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateLocation_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: profileVisibility
    request_path: "{{ user_service_prefix }}/v1/profile/visibility"
    upstream_url: "{{ learning_service_url }}/v1/user/profile/visibility"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ profileVisibility_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: sendNotification
    request_path: "{{ data_service_prefix }}/v1/notification/send"
    upstream_url: "{{ learning_service_url }}/v1/notification/send"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ sendNotification_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: announcementResend
    request_path: "{{ announcement_service_prefix }}/v1/resend"
    upstream_url: "{{ player_service_url }}/announcement/v1/resend"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ announcementResend_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: announcementReceived
    request_path: "{{ announcement_service_prefix }}/v1/received"
    upstream_url: "{{ player_service_url }}/announcement/v1/received"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ announcementReceived_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: announcementRead
    request_path: "{{ announcement_service_prefix }}/v1/read"
    upstream_url: "{{ player_service_url }}/announcement/v1/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ announcementRead_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: metricsSearchData
    request_path: "{{ data_service_prefix }}/v1/object/metrics"
    upstream_url: "{{ learning_service_url }}/v1/object/metrics"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ metricsSearchData_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateSystemSettings
    request_path: "{{ data_service_prefix }}/v1/system/settings/list"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateSystemSettings_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getAudienceCount
    request_path: "{{ data_service_prefix }}/v1/notification/audience"
    upstream_url: "{{ learning_service_url }}/v1/notification/audience"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAudienceCount_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: generateDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/generate"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/generate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ generateDialcodes_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readDialcode_ACL | default(['dialcodeUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateDialcode_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listDialcodes_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ publishDialcode_ACL | default(['dialcodeAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchDialcodes
    request_path: "{{ dialcode_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchDialcodes_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: qrCodeBatchProcessStatus
    request_path: "{{ dialcode_service_prefix }}/v1/process/status"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/process/status"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ qrCodeBatchProcessStatus_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: qrCodeBatchProcessRetry
    request_path: "{{ dialcode_service_prefix }}/v1/process/retry"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/process/retry"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ qrCodeBatchProcessRetry_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createPublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createPublisher_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updatePublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updatePublisher_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readPublisher
    request_path: "{{ dialcode_service_prefix }}/v1/publisher/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/publisher/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readPublisher_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: linkDialcodeContent
    request_path: "{{ dialcode_service_prefix }}/v1/content/link"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/content/link"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ linkDialcodeContent_ACL | default(['dialcodeUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readChannel
    request_path: "{{ channel_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_large_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listChannel
    request_path: "{{ channel_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listChannel_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchChannel
    request_path: "{{ channel_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchChannel_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createChannel
    request_path: "{{ channel_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createChannel_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateChannel
    request_path: "{{ channel_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/channel/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateChannel_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readFramework
    request_path: "{{ framework_service_prefix }}/v1/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ premium_consumer_large_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listFramework
    request_path: "{{ framework_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listFramework_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createFramework
    request_path: "{{ framework_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createFramework_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateFramework
    request_path: "{{ framework_service_prefix }}/v1/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateFramework_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: copyFramework
    request_path: "{{ framework_service_prefix }}/v1/copy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/copy"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ copyFramework_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readFrameworkTerm_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ x_large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchFrameworkTerm_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createFrameworkTerm_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateFrameworkTerm
    request_path: "{{ framework_service_prefix }}/v1/term/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/term/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateFrameworkTerm_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readFrameworkCategory_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchFrameworkCategory_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createFrameworkCategory_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateFrameworkCategory
    request_path: "{{ framework_service_prefix }}/v1/category/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/category/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateFrameworkCategory_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateCourseHierarchy
    request_path: '{{ course_service_prefix }}/v1/hierarchy/update'
    upstream_url: '{{ knowledge_mw_service_url }}/v1/course/hierarchy/update'
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - '{{ statsd_pulgin }}'
    - name: acl
      config.whitelist: "{{ updateCourseHierarchy_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: '{{ medium_rate_limit_per_hour }}'
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: '{{ small_request_size_limit }}'

  - name: submitDatasetRequest
    request_path: "{{ data_service_prefix }}/v1/dataset/request/submit"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dataset/request/submit"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ submitDatasetRequest_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listDatasetRequest
    request_path: "{{ data_service_prefix }}/v1/dataset/request/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dataset/request/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listDatasetRequest_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readDatasetRequest
    request_path: "{{ data_service_prefix }}/v1/dataset/request/read"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dataset/request/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readDatasetRequest_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: channelDatasetRequest
    request_path: "{{ data_service_prefix }}/v1/dataset/request"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dataset/request"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ channelDatasetRequest_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createAssertion_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAssertion_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAssertionList
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/search"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAssertionList_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: revokeAssertion
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/assertion/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/assertion/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ revokeAssertion_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createBadgeClass_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getBadgeClass_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: searchBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/search"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchBadgeClass_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: deleteBadgeClass
    request_path: "{{ badge_service_prefix }}/v1/issuer/badge/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/badge/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteBadgeClass_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createissuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/create"
    upstream_url: "{{ learning_service_url }}/v1/issuer/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createissuer_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getIssuerDetails
    request_path: "{{ badge_service_prefix }}/v1/issuer/read"
    upstream_url: "{{ learning_service_url }}/v1/issuer/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getIssuerDetails_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: getAllIssuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/list"
    upstream_url: "{{ learning_service_url }}/v1/issuer/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getAllIssuer_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: deleteIssuer
    request_path: "{{ badge_service_prefix }}/v1/issuer/delete"
    upstream_url: "{{ learning_service_url }}/v1/issuer/delete"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ deleteIssuer_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createForm
    request_path: "{{ data_service_prefix }}/v1/form/create"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createForm_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateForm
    request_path: "{{ data_service_prefix }}/v1/form/update"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateForm_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: announcementtypeCreate
    request_path: "{{ announcement_service_prefix }}/v1/manage/announcement-type/create"
    upstream_url: "{{ player_service_url }}/announcement/v1/manage/announcement-type/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ announcementtypeCreate_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: announcementtypeUpdate
    request_path: "{{ announcement_service_prefix }}/v1/manage/announcement-type/update"
    upstream_url: "{{ player_service_url }}/announcement/v1/manage/announcement-type/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ announcementtypeUpdate_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: announcementtypeList
    request_path: "{{ announcement_service_prefix }}/v1/manage/announcement-type/list"
    upstream_url: "{{ player_service_url }}/announcement/v1/manage/announcement-type/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ announcementtypeList_ACL | default(['dataUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readForm
    request_path: "{{ data_service_prefix }}/v1/form/read"
    upstream_url: "{{ player_service_url }}/plugin/v1/form/read"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationCreate
    request_path: "{{ data_service_prefix }}/v1/location/create"
    upstream_url: "{{ learning_service_url }}/v1/location/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ masterLocationCreate_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationUpdate
    request_path: "{{ data_service_prefix }}/v1/location/update"
    upstream_url: "{{ learning_service_url }}/v1/location/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ masterLocationUpdate_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationSearch
    request_path: "{{ data_service_prefix }}/v1/location/search"
    upstream_url: "{{ learning_service_url }}/v1/location/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ masterLocationSearch_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: masterLocationUpload
    request_path: "{{ data_service_prefix }}/v1/bulk/location/upload"
    upstream_url: "{{ learning_service_url }}/v1/bulk/location/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ masterLocationUpload_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: copyContent
    request_path: "{{ content_prefix }}/v1/copy"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/copy"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ copyContent_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: fetchURLMetaInformation
    request_path: "{{ content_prefix }}/v1/fetchmeta"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/url/fetchmeta"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ fetchURLMetaInformation_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: publishFramework
    request_path: "{{ framework_service_prefix }}/v1/publish"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/framework/publish"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ publishFramework_ACL | default(['domainUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: pluginSearch
    request_path: "{{ plugin_service_prefix }}/v1/search"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/plugins/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ pluginSearch_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateCollaborators
    request_path: "{{ content_prefix }}/v1/collaborator/update"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/content/collaborator/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateCollaborators_ACL | default(['contentUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: reserveDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/reserve"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/reserve"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ reserveDialcode_ACL | default(['dialcodeAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: releaseDialcode
    request_path: "{{ dialcode_service_prefix }}/v1/release"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/dialcode/release"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ releaseDialcode_ACL | default(['dialcodeAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createLock
    request_path: "{{ lock_service_prefix }}/v1/create"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createLock_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: refreshLock
    request_path: "{{ lock_service_prefix }}/v1/refresh"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/refresh"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ refreshLock_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: retireLock
    request_path: "{{ lock_service_prefix }}/v1/retire"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/retire"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ retireLock_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listLock
    request_path: "{{ lock_service_prefix }}/v1/list"
    upstream_url: "{{ knowledge_mw_service_url }}/v1/lock/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listLock_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createSession
    request_path: "{{ sso_service_prefix }}/v1/create/session"
    upstream_url: "{{ player_service_url }}/v1/sso/create/session"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createSession_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  # Data pipeline

  - name: "datasetSubmitRequest"
    request_path: "{{ data_service_prefix }}/v3/dataset/request/submit"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/dataset/request/submit"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl', config.whitelist: "{{ datasetSubmitRequest_ACL | default(['publicUser']) }}" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "datasetReadRequest"
    request_path: "{{ data_service_prefix }}/v3/dataset/request/read"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/dataset/request/read"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ datasetReadRequest_ACL | default(['publicUser']) }}" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "datasetListRequest"
    request_path: "{{ data_service_prefix }}/v3/dataset/request/list"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/dataset/request/list"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ datasetListRequest_ACL | default(['publicUser']) }}" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "deviceRegister"
    request_path: "/v3/device/register"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/v1/device/register"
    strip_request_path: true
    plugins:
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "deviceProfile"
    request_path: "/v3/device/profile"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/v1/device/profile"
    strip_request_path: true
    plugins:
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }   

  - name: "channelSpecificTelemetryExhaust"
    request_path: "{{ data_service_prefix }}/v3/dataset/get"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/dataset/get"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ channelSpecificTelemetryExhaust_ACL | default(['publicUser']) }}" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }


  - name: "dataproductsCumulativeMetrics"
    request_path: "{{ data_service_prefix }}/v3/metrics"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/metrics"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ dataproductsCumulativeMetrics_ACL | default(['publicUser'])}}" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }
     

  - name: "experimentcreate"
    request_path: "{{ data_service_prefix }}/v1/experiement/create"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/experiment/create"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ experimentcreate_ACL | default(['publicUser'])}}" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }


  - name: "experimentread"
    request_path: "{{ data_service_prefix }}/v1/experiement/get"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/experiment/get"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ experimentread_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "configRefresh"
    request_path: "{{ config_service_prefix }}/v1/refresh"
    upstream_url: "{{ config_service_url }}/config-service/v1/refresh"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ configRefresh_ACL | default(['dataAdmin'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ small_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }


  - name: "getConfigByKey"
    request_path: "{{ config_service_prefix }}/v1/read"
    upstream_url: "{{ config_service_url }}/config-service/v1/read"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ getConfigByKey_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ large_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "addSystemSettings"
    request_path: "{{ data_service_prefix }}/v1/system/settings/set"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/set"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ addSystemSettings_ACL | default(['dataAdmin'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{  medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "getSystemSettings"
    request_path: "{{ data_service_prefix }}/v1/system/settings/get"
    upstream_url: "{{ learning_service_url }}/v1/system/settings/get"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{  medium_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }
     - name: acl
       config.whitelist: "{{ getSystemSettings_ACL | default(['publicUser','mobileApis']) }}"

  - name: "getConfigStatus"
    request_path: "{{ config_service_prefix }}/v1/status"
    upstream_url: "{{ config_service_url }}/config-service/v1/status"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ getConfigStatus_ACL | default(['dataAdmin'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ small_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "getConfigHealth"
    request_path: "{{ config_service_prefix }}/v1/health"
    upstream_url: "{{ config_service_url }}/config-service/v1/health"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ getConfigHealth_ACL | default(['dataAdmin'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ small_rate_limit_per_hour }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: onboardConsumer
    request_path: "{{ api_manager_perfix }}/v1/consumer/create/jwt"
    upstream_url: "{{ am_util_url }}/v1/consumer/create/jwt"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ onboardConsumer_ACL | default(['kongConsumer']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: KongConsumerApi
    request_path: "{{ api_manager_perfix }}/v1/consumer"
    upstream_url: "{{ am_util_url }}/v1/consumer"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ KongConsumerApi_ACL | default(['kongConsumer']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: uploadTOC
    request_path: "{{ textbook_service_prefix }}/v1/toc/upload"
    upstream_url: "{{ lms_service_url }}/v1/textbook/toc/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ uploadTOC_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: downloadTOC
    request_path: "{{ textbook_service_prefix }}/v1/toc/download"
    upstream_url: "{{ lms_service_url }}/v1/textbook/toc/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ downloadTOC_ACL | default(['contentAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: acceptTermsAndCondition
    request_path: "{{ user_service_prefix }}/v1/tnc/accept"
    upstream_url: "{{ learning_service_url }}/v1/user/tnc/accept"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ acceptTermsAndCondition_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: generateOtp
    request_path: "{{ otp_service_prefix }}/v1/generate"
    upstream_url: "{{ learning_service_url }}/v1/otp/generate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ generateOtp_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: verifyOtp
    request_path: "{{ otp_service_prefix }}/v1/verify"
    upstream_url: "{{ learning_service_url }}/v1/otp/verify"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ verifyOtp_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserByKey
    request_path: "{{ user_service_prefix  }}/v1/get"
    upstream_url: "{{ learning_service_url }}/v1/user/get"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserByKey_ACL | default(['appUpdate','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerMobileAppTeacherAid
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_app_teacheraid/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_app_teacheraid/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileAppTeacherAid_ACL | default(['mobileAdminTeacherAid']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"


  - name: registerMobileDeviceTeacherAid
    request_path: "{{ api_manager_perfix }}/v1/consumer/mobile_device_teacheraid/credential/register"
    upstream_url: "{{ am_util_url }}/v1/consumer/mobile_device_teacheraid/credential/register"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ registerMobileDeviceTeacherAid_ACL | default(['mobileAppTeacherAid']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: "contentBadgeLink"
    request_path: "{{ badge_service_prefix }}/v1/content/link"
    upstream_url: "{{ lms_service_url }}/v1/content/link"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ contentBadgeLink_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "contentBadgeUnLink"
    request_path: "{{ badge_service_prefix }}/v1/content/unlink"
    upstream_url: "{{ lms_service_url }}/v1/content/unlink"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ contentBadgeUnLink_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "privateUserUpdate"
    request_path: "{{ user_service_prefix }}/private/v1/update"
    upstream_url: "{{ learning_service_url }}/private/user/v1/update"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ privateUserUpdate_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "getUserType"
    request_path: "{{ user_service_prefix }}/v1/type/list"
    upstream_url: "{{ learning_service_url }}/v1/user/type/list"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ getUserType_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "masterLocationDelete"
    request_path: "{{data_service_prefix }}/v1/location/delete"
    upstream_url: "{{ learning_service_url }}/v1/location/delete"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ masterLocationDelete_ACL | default(['locationAdmin'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "privateUserRead"
    request_path: "{{ user_service_prefix }}/private/v1/read"
    upstream_url: "{{ learning_service_url }}/private/user/v1/read"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ privateUserRead_ACL | default(['publicUser'])}}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: privateUserAssignRole
    request_path: "{{ user_service_prefix }}/private/v1/assign/role"
    upstream_url: "{{ learning_service_url }}/private/user/v1/assign/role"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl', config.whitelist: "{{ privateUserAssignRole_ACL | default(['publicUser'])}}" }
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: createUserV3
    request_path: "{{ user_service_prefix }}/v1.3/create"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createUserV3_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: createUserVersion2V3
    request_path: "{{ user_service_prefix }}/v2.3/create"
    upstream_url: "{{ user_org_service_url }}/v2.3/user/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createUserVersion2V3_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserProfileV3
    request_path: "{{ user_service_prefix }}/v1.3/read"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserProfileV3_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserProfileV2V3
    request_path: "{{ user_service_prefix }}/v2.3/read"
    upstream_url: "{{ user_org_service_url }}/v2.3/user/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserProfileV2V3_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readUserProfileV3
    request_path: "{{ user_service_prefix }}/v1.3/profile/read"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/getuser"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readUserProfileV3_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserByKeyV3
    request_path: "{{ user_service_prefix  }}/v1.3/get"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/get"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getUserByKeyV3_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchUserV3
    request_path: "{{ user_service_prefix }}/v1.3/search"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/search"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ searchUserV3_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getMediaTypesV3
    request_path: "{{ user_service_prefix }}/v1.3/mediatype/list"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/mediatype/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ getMediaTypesV3_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: profileVisibilityV3
    request_path: "{{ user_service_prefix }}/v1.3/profile/visibility"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/profile/visibility"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ profileVisibilityV3_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: getUserTypeV3
    request_path: "{{ user_service_prefix }}/v1.3/type/list"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/type/list"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl', config.whitelist: "{{ getUserTypeV3_ACL | default(['publicUser']) }}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: blockUserV3
    request_path: "{{ user_service_prefix }}/v1.3/block"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/block"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ blockUserV3_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: unblockUserV3
    request_path: "{{ user_service_prefix }}/v1.3/unblock"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/unblock"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ unblockUserV3_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readRoleMappingV3
    request_path: "{{ data_service_prefix }}/v1.3/role/read"
    upstream_url: "{{ user_org_service_url }}/v1.3/role/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readRoleMappingV3_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: assignRoleV3
    request_path: "{{ user_service_prefix }}/v1.3/role/assign"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/assign/role"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ assignRoleV3_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: "privateUserAssignRoleV3"
    request_path: "{{ user_service_prefix }}/private/v1.3/assign/role"
    upstream_url: "{{ user_org_service_url }}/private/user/v1.3/assign/role"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ privateUserAssignRoleV3_ACL | default(['publicUser']) }}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: updateUserV3
    request_path: "{{ user_service_prefix }}/v1.3/update"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateUserV3_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: "privateUserUpdateV3"
    request_path: "{{ user_service_prefix }}/private/v1.3/update"
    upstream_url: "{{ user_org_service_url }}/private/user/v1.3/update"
    strip_request_path: true
    plugins:
     - {name: 'jwt'}
     - {name: 'cors'}
     - "{{ statsd_pulgin }}"
     - {name: 'acl',config.whitelist: "{{ privateUserUpdateV3_ACL | default(['publicUser']) }}"}
     - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
     - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: updateUserloginTimeV3
    request_path: "{{ user_service_prefix }}/v1.3/update/logintime"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/update/logintime"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateUserloginTimeV3_ACL | default(['userUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: acceptTermsAndConditionV3
    request_path: "{{ user_service_prefix }}/v1.3/tnc/accept"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/tnc/accept"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ acceptTermsAndConditionV3_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: DecryptDataV3
    request_path: "{{ data_service_prefix }}/v1.3/user/decrypt"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/data/decrypt"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ DecryptDataV3_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: encryptDataV3
    request_path: "{{ data_service_prefix }}/v1.3/user/encrypt"
    upstream_url: "{{ user_org_service_url }}/v1.3/user/data/encrypt"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ encryptDataV3_ACL | default(['appUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createOrgV3
    request_path: "{{ org_service_prefix }}/v1.3/create"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createOrgV3_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateOrgV3
    request_path: "{{ org_service_prefix }}/v1.3/update"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateOrgV3_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: readOrgV3
    request_path: "{{ org_service_prefix }}/v1.3/read"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/read"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ readOrgV3_ACL | default(['orgUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: searchOrgV3
    request_path: "{{ org_service_prefix }}/v1.3/search"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/search"
    strip_request_path: true
    plugins:
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: ip
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: addMemberV3
    request_path: "{{ org_service_prefix }}/v1.3/member/add"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/member/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addMemberV3_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: removeMemberV3
    request_path: "{{ org_service_prefix }}/v1.3/member/remove"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/member/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ removeMemberV3_ACL | default(['orgAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateOrgStatusV3
    request_path: "{{ org_service_prefix }}/v1.3/status/update"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/status/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateOrgStatusV3_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: listOrgTypesV3
    request_path: "{{ org_service_prefix }}/v1.3/type/list"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/type/list"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ listOrgTypesV3_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: createOrgTypeV3
    request_path: "{{ org_service_prefix }}/v1.3/type/create"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/type/create"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ createOrgTypeV3_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateOrgTypeV3
    request_path: "{{ org_service_prefix }}/v1.3/type/update"
    upstream_url: "{{ user_org_service_url }}/v1.3/org/type/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateOrgTypeV3_ACL | default(['orgUpdate']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: "telemetryErrorLogging"
    request_path: "/data/v1/client/logs"
    upstream_url: "{{ sunbird_analytics_api_base_url }}/data/v1/client/logs"
    strip_request_path: true
    plugins:
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: generateCertificate
    request_path: "{{ cert_service_prefix }}/v1/certs/generate"
    upstream_url: "{{ cert_service_url }}/v1/certs/generate"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ generateCertificate_ACL | default(['orgUpdate']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: "certValidation"
    request_path: "{{ user_service_prefix }}/v1/certs/validate"
    upstream_url: "{{ learning_service_url }}/private/user/v1/certs/validate"
    strip_request_path: true
    plugins:
    - {name: 'jwt'}
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'acl',config.whitelist: "{{ certValidation_ACL | default(['userUpdate']) }}"}
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: createCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/create"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/create"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ createCertTemplate_ACL | default(['orgUpdate']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: updateCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/update"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/update"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ updateCertTemplate_ACL | default(['orgUpdate']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: readCertTemplate
    request_path: "{{ cert_service_prefix }}/v1/template/read"
    upstream_url: "{{ cert_service_url }}/cert/v1/template/read"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ readCertTemplate_ACL | default(['orgUpdate']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: "orgAssignKeys"
    request_path: "{{ org_service_prefix }}/v1/assign/key"
    upstream_url: "{{ learning_service_url }}/v1/org/assign/key"
    strip_request_path: true
    plugins:
    - {name: 'jwt'}
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'acl',config.whitelist: "{{ orgAssignKeys_ACL | default(['orgAdmin']) }}"}
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: "mergeUserAccounts"
    request_path: "{{ user_service_prefix }}/v1/account/merge"
    upstream_url: "{{ learning_service_url }}/private/user/v1/account/merge"
    strip_request_path: true
    plugins:
    - {name: 'jwt'}
    - {name: 'cors'}
    - "{{ statsd_pulgin }}"
    - {name: 'acl',config.whitelist: "{{ mergeUserAccounts_ACL | default(['publicUser']) }}"}
    - {name: 'rate-limiting', config.policy: "local", config.hour: "{{ medium_rate_limit_per_hour  }}"}
    - {name: 'request-size-limiting', config.allowed_payload_size: "{{ small_request_size_limit }}" }

  - name: qrCodeDownload
    request_path: "{{ course_service_prefix }}/v1/qrcode/download"
    upstream_url: "{{ lms_service_url }}/v1/course/qrcode/download"
    strip_request_path: true
    plugins:
      - name: jwt
      - name: cors
      - "{{ statsd_pulgin }}"
      - name: acl
        config.whitelist: "{{ qrCodeDownload_ACL | default(['courseUser']) }}"
      - name: rate-limiting
        config.policy: local
        config.hour: "{{ medium_rate_limit_per_hour }}"
        config.limit_by: credential
      - name: request-size-limiting
        config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseIssueCertificate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/issue"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/issue"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseIssueCertificate_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseBatchAddCertificateTemplate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/template/add"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/template/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseBatchAddCertificateTemplate_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: courseBatchRemoveCertificateTemplate
    request_path: "{{ course_service_prefix }}/batch/cert/v1/template/remove"
    upstream_url: "{{ lms_service_url }}/v1/course/batch/cert/template/remove"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ courseBatchRemoveCertificateTemplate_ACL | default(['courseUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: downloadCertificate
    request_path: "{{ user_service_prefix }}/v1/certs/download"
    upstream_url: "{{ learning_service_url }}/v1/user/certs/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ downloadCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: UserBulkUploadv2
    request_path: "{{ user_service_prefix }}/v2/bulk/upload"
    upstream_url: "{{ learning_service_url }}/v2/bulk/user/upload"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ UserBulkUploadv2_ACL | default(['userAdmin']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ small_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ medium_request_size_limit }}"

  - name: downloadRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/download"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/download"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ downloadRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: validateRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/validate"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/validate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ validateRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: addRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/add"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/add"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ addRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userMigrate
    request_path: "{{ user_service_prefix }}/v1/migrate"
    upstream_url: "{{ learning_service_url }}/v1/user/migrate"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ userMigrate_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: verifyRegCertificate
    request_path: "{{ cert_registry_service_prefix }}/v1/certs/verify"
    upstream_url: "{{ cert_registry_service_url }}/certs/v1/registry/verify"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ verifyRegCertificate_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: updateDesktopApp
    request_path: "{{ desktop_app_prefix }}/v1/update"
    upstream_url: "{{ player_service_url }}/v1/desktop/update"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ updateDesktopApp_ACL | default(['contentUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ large_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: userFeed
    request_path: "{{ user_service_prefix }}/v1/feed"
    upstream_url: "{{ learning_service_url }}/v1/user/feed"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ userFeed_ACL | default(['publicUser','mobileApis']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: freshDesk
    request_path: "/tickets/v1/create"
    upstream_url: "{{ freshDesk_url }}/api/v2/tickets"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - name: request-transformer
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ freshDesk_ACL | default(['publicUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"
    - name: request-transformer
      config.replace.headers: "Authorization: Basic {{ freshDesk_token }}"

  - name: LicenseAPI
    request_path: "{{ license_api_prefix }}/v3"
    upstream_url: "{{ content_service_url }}/license/v3"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ LicenseAPI_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"

  - name: AltAPI
    request_path: "alt/v3"
    upstream_url: "{{ content_service_url }}/alt/v3"
    strip_request_path: true
    plugins:
    - name: jwt
    - name: cors
    - "{{ statsd_pulgin }}"
    - name: acl
      config.whitelist: "{{ AltAPI_ACL | default(['domainUser']) }}"
    - name: rate-limiting
      config.policy: local
      config.hour: "{{ medium_rate_limit_per_hour }}"
      config.limit_by: credential
    - name: request-size-limiting
      config.allowed_payload_size: "{{ small_request_size_limit }}"
