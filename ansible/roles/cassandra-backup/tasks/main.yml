- name: Make sure backup dir is empty
  file: path="{{ cassandra_backup_dir }}" state=absent
  ignore_errors: true

- name: Create the directory
  become: true
  file: path=/data/cassandra/backup state=directory recurse=yes

- name: copy the backup script
  become: true
  template:
    src: ../../../../deploy/cassandra_backup.py
    dest: /data/cassandra/backup/cassandra_backup.py
    mode: 0755

- set_fact:
    cassandra_backup_folder_name: "cassandra-backup-{{ lookup('pipe', 'date +%Y%m%d') }}-{{ ansible_hostname }}-new"

- name: run the backup script
  become: true
  shell: python3 cassandra_backup.py --snapshotname "{{ cassandra_backup_folder_name }}" --snapshotdirectory "{{ cassandra_backup_folder_name }}" "{{additional_arguments|d('')}}"
  args:
    chdir: /data/cassandra/backup
  async: 14400
  poll: 30

- name: Check doc_root path
  shell: ls -all /data/cassandra/backup/
  register: doc_data

- name: print doc_root to console
  debug:
    var: doc_data

- name: upload file to azure storage using azcopy
  include_role:
    name: azure-cloud-storage
    tasks_from: upload-using-azcopy.yml
  vars:
    blob_container_name: "{{ cloud_storage_cassandrabackup_bucketname }}"
    container_public_access: "off"
    blob_container_folder_path: ""
    local_file_or_folder_path: "/data/cassandra/backup/{{ cassandra_backup_folder_name }}"
    storage_account_name: "{{ cloud_management_storage_accountname }}"
    storage_account_sas_token: "{{ azure_management_storage_account_sas }}"
  when: cloud_service_provider == "azure"

- name: upload backup to S3
  include_role:
    name: aws-cloud-storage
    tasks_from: upload-folder.yml
  vars:
    local_file_or_folder_path: "/data/cassandra/backup/{{ cassandra_backup_folder_name }}"
    s3_bucket_name: "{{ aws_management_s3_bucket_name }}"
    s3_path: "{{ cassandra_backup_storage }}"
    aws_default_region: "{{ aws_region }}"
    aws_access_key_id: "{{ aws_management_bucket_access_key }}"
    aws_secret_access_key: "{{ aws_management_bucket_secret_access_key }}"
  when: cloud_service_provider == "aws"
  
- name: upload file to gcloud storage
  include_role:
    name: gcp-cloud-storage
    tasks_from: upload-batch.yml
  vars:
    gcp_bucket_name: "{{ gcloud_management_bucket_name }}"
    dest_folder_name: "{{ cassandra_backup_storage }}"
    dest_folder_path: ""
    local_file_or_folder_path: "/data/cassandra/backup/{{ cassandra_backup_folder_name }}"
  when: cloud_service_provider == "gcloud"
  
- name: clean up backup dir after upload
  file: path="{{ cassandra_backup_dir }}" state=absent

