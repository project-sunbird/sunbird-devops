- name: Cassandra | Update the cassandra env configuration
  become: yes
  template:
    src: cassandra-env.sh
    dest: /etc/cassandra
    backup: true
  tags:
    - provision

- name: getting the server hostname
  command: hostname
  register: hostnameOfCql

- name: add entry in hosts file
  become: yes
  lineinfile:
    line: "127.0.0.1 {{hostnameOfCql.stdout}}"
    path: /etc/hosts

- name: debian | Adding Cassandra Debian Repo Key
  apt_key:
    url: "{{ cassandra_repo_key }}"
    state: "present"

- name: debian | Adding Cassandra Debian Repo
  apt_repository:
    repo: "{{ cassandra_repo }}"
    state: "present"

- name: debian | Installing Cassandra
  apt:
    name: "cassandra"
    state: "present"

- name: Make sure cassandra home is present
  file:
    name: "{{ cassandra_home_directory }}"
    state: directory
    owner: cassandra
    group: cassandra

- name: copying the rack and datacenter config file if we are having cluster
  template:
    src: "cassandra-rackdc.properties.j2"
    dest: "{{ cassandra_root_dir }}/cassandra-rackdc.properties"
    owner: "root"
    group: "root"
    mode: "0644"
    backup: true
  when: ( cassandra_cluster_size | int ) > 1

- name: copying the customized logback file
  template:
    src: "logback.j2"
    dest: "{{ cassandra_root_dir }}/logback.xml"
    owner: "root"
    group: "root"
    mode: "0644"
    backup: true

- name: config | Configuring Cassandra
  template:
    src: "cassandra.yaml.j2"
    dest: "{{ cassandra_root_dir }}/cassandra.yaml"
    owner: "root"
    group: "root"
    mode: 0644
    backup: true

- name: Stop cassandra nodes if started
  service:
    name: cassandra
    state: stopped

- name: Wait for cassandra to stop
  wait_for:
    state: stopped
    port: 9042
    delay: 10
    sleep: 5

- name: Restart Cassandra seeds
  service:
    name: cassandra
    state: restarted
  delegate_to: "{{ item }}"
  # ansible won't throw index out of bound exception.
  with_items: "{{ groups['cassandra'][:2] }}"
  run_once: true

- name: Wait for cassandra seeds to start
  wait_for:
    state: started
    port: 9042
    delay: 10
    sleep: 5
  delegate_to: "{{ item }}"
  # ansible won't throw index out of bound exception.
  with_items: "{{ groups['cassandra'][:2] }}"
  run_once: true

- name: Restart Cassandra nodes
  service:
    name: cassandra
    state: restarted
  delegate_to: "{{ item }}"
  with_items: "{{ groups['cassandra'][2:] }}"
  when: groups['cassandra'] | length > 2
  run_once: true

- name: wait for cassandra to be up and running
  wait_for:
    host: "{{inventory_hostname}}"
    port: 9042
    delay: 30
