#!/bin/bash
### BEGIN INIT INFO
# Provides:          keycloak
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Should-Start:      $all
# Should-Stop:       $all
# Default-Start:     3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

keycloakuser=keycloak
keycloakpath=/opt/keycloak/bin

# Normal output log
LOGOUT=/var/log/keycloak.out.log
# Error output log
LOGERR=/var/log/keycloak.err.log
 
## script start here
 

function echo_failure() { echo -en "\n[FAILED]"; }
function echo_success() { echo -en "\n[OK]"; }
[ -f /etc/rc.d/init.d/functions ] && source /etc/rc.d/init.d/functions
 
FINDPID="pgrep -u $keycloakuser -n -f standalone.sh";
function _is_running() {
    $FINDPID 1>/dev/null
    return $?
}
 
function stop_keycloak() {
    _is_running
    if [ $? -ne 0 ]; then
        echo -n "$0 is not running, cannot stop."
        echo_failure
        echo
        return 1
    else
        echo -n "Stopping $0..."
        
        $FINDPID | xargs ps h -o pid --ppid | xargs kill
        sleep 1
        _is_running
        if [ $? -eq 0 ]; then
            echo_failure
            echo
            return 1
        else
            echo_success
            echo
            return 0
        fi
    fi
 
}
 
function status() {
    _is_running
    if [ $? -eq 0 ]; then
        echo -n "$0 is running."
        echo_success
        echo
        return 0
    else
        echo -n "$0 does not run."
     #   echo_failure
     #   echo
     #   return 1
    fi
}
 
function start_keycloak() {
    _is_running
    if [ $? -eq 0 ]; then
        echo -n "$0 already running."
        echo_failure
        echo
        return 1
    else
        echo -n "Starting $0..."
        # Make sure log files exist and are writable by $PDIUSER first
        touch $LOGOUT $LOGERR
        chown $keycloakuser:$keycloakuser $LOGOUT $LOGERR
        su - $keycloakuser -c "cd $keycloakpath && (nohup sh ./standalone.sh -b 0.0.0.0 -bprivate=$(hostname -i) --server-config standalone-ha.xml 0<&- 1>>$LOGOUT 2>>$LOGERR &)"
        sleep 1
        _is_running
        if [ $? -eq 0 ]; then
            echo_success
            echo
            return 0
        else
            echo_failure
            echo
            return 1
        fi
    fi
}
 
case "$1" in
    start)
        start_keycloak
        exit $?
        ;;
    stop)
        stop_keycloak
        exit $?
        ;;
    reload|force-reload|restart|force-restart)
        stop_keycloak
        if [ $? -eq 0 ]; then
            start_keycloak
            exit $?
        else
            exit 1
        fi
        ;;
    status)
       status
       exit $?
       ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 2
esac
exit 0
