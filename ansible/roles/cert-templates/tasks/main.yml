---
- name: copy the ansible template file with updated vars
  template:
    src: "{{item}}.j2"
    dest: "{{cert_location}}/cert-templates/certUtilScripts/{{item}}"
    mode: '0755'
  with_items:
    - setVars.sh
    - generateVars.sh

- name: Execute npm module and initializing of vars for initial setup
  command: bash -lc "bash generateVars.sh"
  args:
    chdir: "{{cert_location}}/cert-templates/certUtilScripts/"

- name: create badge
  command: bash -lc "node createBadge.js"
  args:
    chdir: "{{cert_location}}/cert-templates/certUtilScripts/"
  when: createBadge is defined

- name: create Issuer
  command: bash -lc "node createIssuer.js"
  args:
    chdir: "{{cert_location}}/cert-templates/certUtilScripts/"
  when: createIssuer is defined

- name: create PublicKey
  command: bash -lc "node createPublicKey.js"
  args:
    chdir: "{{cert_location}}/cert-templates/certUtilScripts/"
  when: createPublicKey is defined

- name: upload batch of files to azure storage
  include_role:
    name: azure-cloud-storage
    tasks_from: blob-upload-batch.yml
  vars:
    blob_container_name: "{{ cert_service_storage }}"
    container_public_access: "off"
    blob_container_folder_path: ""
    local_file_or_folder_path: "{{ cert_location }}/cert-templates/certUtilScripts/out"
    storage_account_name: "{{ cloud_private_storage_accountname }}"
    storage_account_key: "{{ cloud_private_storage_secret }}"
  when: cloud_service_provider == "azure"

- name: upload batch of files to aws s3
  include_role:
    name: aws-cloud-storage
    tasks_from: upload-folder.yml
  vars:
    s3_bucket_name: "{{ aws_private_s3_bucket_name }}"
    aws_access_key_id: "{{ aws_private_bucket_access_key }}"
    aws_secret_access_key: "{{ aws_private_bucket_secret_access_key }}"
    aws_default_region: "{{ aws_region }}"
    local_file_or_folder_path: "{{ cert_location }}/cert-templates/certUtilScripts/out"
    s3_path: "{{ cert_service_storage }}"
  when: cloud_service_provider == "aws"
  
- name: upload batch of files to gcloud storage
  include_role:
    name: gcp-cloud-storage
    tasks_from: upload-batch.yml
  vars:
    dest_folder_name: "{{ cert_service_storage }}"
    dest_folder_path: ""
    local_file_or_folder_path: "{{ cert_location }}/cert-templates/certUtilScripts/out"
    gcp_bucket_name: "{{ gcloud_private_bucket_name }}"
  when: cloud_service_provider == "gcloud"
