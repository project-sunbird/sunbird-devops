ENV=prod
DATABASE_DEBUG=true

#Hasura
HASURA_GRAPHQL_ADMIN_SECRET={{hasura_graphql_admin_secret}}
HASURA_GRAPHQL_DATABASE_URL=postgres://{{uci_postgres_user}}:{{uci_postgres_password}}@{{uci_postgres_host}}:5432/{{uci_bot_postgres_database}}
HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
HASURA_GRAPHQL_ENABLE_CONSOLE=true

#Kafka
KAFKA_HOST={{sunbird_processing_kafka_host}}
KAFKA_PASS=""
KAFKA_PORT=9092
KAFKA_USER=""

#Postgres
POSTGRES_DB={{uci_bot_postgres_database}}
POSTGRES_PASSWORD={{uci_postgres_password}}
POSTGRES_USER={{uci_postgres_user}}
POSTGRES_HOST={{uci_postgres_host}}
PSQL_DB_URL_DEV=postgres://{{uci_postgres_host}}:5432/{{uci_bot_postgres_database}}?user={{uci_postgres_user}}&password={{uci_postgres_password}}&sslmode=require

#Redis
REDIS_HOST={{sunbird_redis_host}}
REDIS_PASS=""
REDIS_PORT=6379

#Inbound Service
UCI_CORE_BASE_URL=http://inbound-service.{{namespace}}.svc.cluster.local:8085

#FusionAuth
# API Key for Fusionauth. More details on how to generate this here -> https://fusionauth.io/docs/v1/tech/apis/authentication/#api-key-authentication
# Note - You will need access to UI to generate this the first time.
FUSIONAUTH_KEY={{fusionauth_service_admin_key}}
FUSIONAUTH_URL=http://fusionauth-service.{{namespace}}.svc.cluster.local:9011/

# AES Encryption Key for UCI (Base64). To generate this the first time take any string of 16 chars and use the 
# method here -> https://github.com/samagra-comms/utils/blob/b67d0d15e699d76c2f24792643562fee5435676f/src/main/java/com/uci/utils/encryption/AESWrapper.java#L32
# Should be generated once for each env.
ENCRYPTION_KEY={{uci_encryption_key_base64}}
ADMIN_TOKEN={{uci_api_admin_token}}

GRAPHQL_BASE_URL=http://gql-service.{{namespace}}.svc.cluster.local:8080

ODK_SERVICE=http://odk-service.{{namespace}}.svc.cluster.local:8080
ODK_USERNAME={{uci_odk_user}}
ODK_PASSWORD={{uci_odk_password}}

TRANSFORMER_BASE_URL=http://transformer-service.{{namespace}}.svc.cluster.local:9091/odk/updateAll

TELEMETRY_BASE_URL=http://telemetry-service:9001
KAFKA_TELEMETRY_TOPIC={{env_name}}.uci.telemetry