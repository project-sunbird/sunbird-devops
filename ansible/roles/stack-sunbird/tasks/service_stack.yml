---
- name: Remove stack file
  file: path=/home/deployer/stack/stack_{{service_name}}.yml state=absent

- name: Save stack file
  template: src="stack_{{service_name}}.yml" dest="/home/deployer/stack/stack_{{service_name}}.yml" mode=0644

- name: Remove cdn config file
  file: path=/home/deployer/config/index_cdn.ejs state=absent
  ignore_errors: true

- name: remove player stack
  shell: "docker stack rm player"
  become: yes

- name: Remove the existing CDN config
  shell: docker config rm index_cdn.ejs
  ignore_errors: true

- name: Save cdn config file
  copy: src="{{cdn_file_path}}" dest="/home/deployer/config/index_cdn.ejs" mode=0644
  when: sunbird_portal_cdn_url is not none and cdn_file_path is not none

- name: Deploy stack
  shell: "docker stack deploy -c stack_{{service_name}}.yml {{service_name}} --with-registry-auth"
  args:
    chdir: /home/deployer/stack

- name: Create the new index_cdn.ejs file as a config
  shell: "docker config create index_cdn.ejs /home/deployer/config/index_cdn.ejs"
  when: sunbird_portal_cdn_url is not none and cdn_file_path is not none

- name: Deploy Player with updated player config
  shell: docker service update --config-add source=index_cdn.ejs,target=/home/sunbird/app_dist/dist/index_cdn.ejs player_player
  when: sunbird_portal_cdn_url is not none and cdn_file_path is not none

- name: sleep for 40 seconds for portal docker image to be up and running
  pause:
    seconds: 40

- name: Getting the list of proxy services host details
  shell: "getent ahostsv4 $(docker service ps proxy_proxy | grep Runn | awk '{print $4}') | cut -d \" \" -f1 | uniq"
  register: proxy_details

- name: reload proxy containers configurations
  shell: "docker ps | grep proxy_proxy | awk '{print $1}' | xargs -I % docker exec % nginx -s reload;"
  delegate_to: "{{item}}"
  with_items: "{{(proxy_details.stdout_lines)|list}}"
  register: proxy_out

- name: Getting the list of kong services host details
  shell: "getent ahostsv4 $(docker service ps api-manager_kong | grep Runn | awk '{print $4}') | cut -d \" \" -f1 | uniq"
  register: kong_details

- name: reload kong container configurations
  shell: "docker ps | grep api-manager_kong | awk '{print $1}' | xargs -I % docker exec % kong reload;"
  delegate_to: "{{item}}"
  with_items: "{{(kong_details.stdout_lines)|list}}"
  register: kong_out
