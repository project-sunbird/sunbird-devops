---
- include: debian.yml
  when: ansible_os_family == "Debian"

- include: redhat.yml
  when: ansible_os_family == "RedHat"

- name: Copy /etc/elasticsearch/elasticsearch.yml
  template: src=elasticsearch.yml dest=/etc/elasticsearch/elasticsearch.yml
  tags: update_es_config
  notify: Restart elasticsearch

- name: Creates data directory
  file:
    path={{ es_etc_path_data }}
    state=directory
    mode=755
    owner={{ es_user }}
    group={{ es_user }}

- name: Creates scripts directory
  file:
    path={{ elasticsearch_config }}/scripts
    state=directory
    mode=755
    owner={{ es_user }}
    group={{ es_user }}

- name: Copy logger file
  template: src=logging.yml dest={{ elasticsearch_config }}/logging.yml
  become: yes
  tags: update_es_config
  notify: Restart elasticsearch

- name: Start ES service
  service: name=elasticsearch state=started

- name: Set elasticsearch service to start on boot
  service: name=elasticsearch state=started

- name: Remove plugins
  command: bin/plugin remove {{item.name}}
  args:
    chdir: "{{ es_home }}"
  with_items: "{{ es_plugins }}"
  ignore_errors: yes
  notify: Restart elasticsearch

- name: Install plugins
  command: bin/plugin install {{item.name}} {%if item.url is defined %} url {{item.url}}{% endif %}
  args:
    chdir: "{{ es_home }}"
    creates: "{{ es_home }}/plugins/{{ item.plugin_file | default(item.name) }}"
  with_items: "{{ es_plugins }}"
  ignore_errors: yes
  notify: Restart elasticsearch

- name: Configure /etc/security/limits.conf
  lineinfile: >
    dest=/etc/security/limits.conf
    line="{{ item.line }}"
    state=present
  with_items:
    - { line: 'elasticsearch - nofile {{ es_default_max_open_files }}' }
    - { line: 'elasticsearch - memlock unlimited' }
    - { line: 'root - memlock unlimited' }
  become: yes
  notify: Restart elasticsearch

- name: Start Elasticsearch
  service: name=elasticsearch state=started 
  become: yes
