#!/bin/bash
sunbird_custodian_tenant_channel="{{sunbird_custodian_tenant_channel}}"

# Mandatory validation for user configured fields
validateConfigFields() {
        validateField "sunbird_custodian_tenant_channel" "$sunbird_custodian_tenant_channel";
}

validateField() {
        fieldName="$1";
        fieldValue="$2";
        if [ -z "$fieldValue" ];
        then
                echo "Mandatory field - ""$fieldName"" - is not configured. Exiting System Initialisation Program...";
                exit 1;
        fi
}

# fetches org id with the configured channel, if exists, from sunbird.organisation table
# org id will be set in sunbird_custodian_tenant_id variable
getExistingCustodianTenantId() {
        sunbird_custodian_tenant_id=$(cqlsh -e "select id from sunbird.organisation where isrootorg=true and channel='""$sunbird_custodian_tenant_channel""' allow filtering;" | awk 'FNR == 4 {print}' | sed 's/ //g')
}

# fetches value from system_settings table for a given id
getValueFromSystemSettings() {
        system_settings_id="$1";
        system_settings_value=$(cqlsh -e "select value from sunbird.system_settings where id='""$system_settings_id""';" | awk 'FNR == 4 {print}' | sed 's/ //g')
}

# sets value and field in system_settings table for a given id
setValueInSystemSettings() {
        system_settings_id="$1";
        system_settings_value="$2";
        cqlsh -e "update sunbird.system_settings set value='""$system_settings_value""',field='""$system_settings_id""' where id='""$system_settings_id""';"
}

# Check whether all mandatory fields are configured
validateConfigFields;

# 1. Fetch systemInitialisationStatus from cassandra sunbird.system_settings table
# 2. If systemInitialisationStatus is empty, set it to SYSTEM_UNINITIALISED
# 3. Fetch systemInitialisationStatus again from cassandra
# 4. if systemInitialisationStatus is still empty, then throw cassandra connection error
getValueFromSystemSettings "systemInitialisationStatus";
if [ -z "$system_settings_value" ];
then
        echo "Adding systemInitialisationStatus field to System Settings table...";
        setValueInSystemSettings "systemInitialisationStatus" "SYSTEM_UNINITIALISED";
fi
getValueFromSystemSettings "systemInitialisationStatus";
if [ -z "$system_settings_value" ];
then
        echo "Unable to connect to Cassandra. Exiting program...";
        exit 1;
fi

# Exit gracefully if the system is already initialised
if [ "$system_settings_value" = "SYSTEM_INITIALISED" ];
then
        echo "System already Initialised. Exiting program...";
        exit 0;
fi

# Start of system initialisation process
# 1. Fetch org id for the configured channel from cassandra - sunbird.organisation table
# 2. If org id does not exists, exit the program with error status
# 3. If org id exists, set the org id and configured channel in system_settings table
# 4. Update systemInitialisationStatus to SYSTEM_INITIALISED value in system_settings table
getExistingCustodianTenantId;
if [ -z "$sunbird_custodian_tenant_id" ];
then
        echo "No Root Organisation found for the configured channel - ""$sunbird_custodian_tenant_channel"" . Exiting System Initialisation Program...";
        exit 1;
else
        echo "Root Organisation with id - ""$sunbird_custodian_tenant_id"" - found for the configured channel - ""$sunbird_custodian_tenant_channel";
        setValueInSystemSettings "custodianOrgId" "$sunbird_custodian_tenant_id";
        setValueInSystemSettings "custodianOrgChannel" "$sunbird_custodian_tenant_channel";
        setValueInSystemSettings "systemInitialisationStatus" "SYSTEM_INITIALISED";
        echo "System Initialisation Completed Successfully..."
fi
# End of system initialisation process