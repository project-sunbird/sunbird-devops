---
- name: Remove badger service
  shell: "docker service rm badger-service"
  ignore_errors: yes

- name: Save configurations into an env file
  template: src=settings_local.py dest=/home/deployer/config/settings_local.py mode=0644

- name: Remove old settings_local.py docker config
  shell: "docker config rm settings_local.py"
  ignore_errors: yes

- name: Save as docker config
  shell: "docker config create settings_local.py /home/deployer/config/settings_local.py"

- debug: 
    msg: "Image details= {{hub_org}}:{{image_name}}:{{image_tag}}"

- name: Deploy badger service
  shell: "docker service create --replicas {{ badger_replicas }} -p 8004:8004 --name badger-service --hostname badger-service --reserve-memory {{ badger_reservation_memory }} --limit-memory {{ badger_limit_memory }}  --network application_default --config source=settings_local.py,target=/badger/code/apps/mainsite/settings_local.py,mode=0644 {{hub_org}}/{{image_name}}:{{image_tag}}" 
  args:
    chdir: /home/deployer/stack

- name: Checking for the badger containter
  shell: "docker service ps badger-service| grep Running | head -n1 | awk '{print $4}'"
  register: server

- name: Waiting for the container to come up
  shell: "docker inspect -f '{{'{{'}}.State.Running{{'}}'}}' $(docker ps | grep badger| head -n1 | awk '{print $1}')"
  register: container
  until: container.rc == 0
  retries: 20
  delay: 10

- name: Copying user creation script to remote machine
  hosts: "{{server.stdout}}"
  template:
    src: files/user.sh
    dest: /tmp/user.sh
    mode: 0755

- name: Copying user creation script to docker
  hosts: "{{server.stdout}}"
  shell: docker cp /tmp/user.sh $(docker ps | grep badger | awk '{print $1}' | head -n1):/tmp/user.sh 

- name: Creating superuser
  hosts: "{{server.stdout}}"
  shell: "docker exec $(docker ps | grep badger | awk '{print $1}' | head -n1) /tmp/user.sh"

- name: Getting auth token
  hosts: "{{server.stdout}}"
  shell: curl -X POST 'http://localhost:8004/api-auth/token' -d "username="{{badger_admin_user}}"&password={{badger_admin_password}}"
  register: curl

- name: Copy the script
  connection: local
  copy: content="{{curl.stdout}}" dest="/home/{{ansible_ssh_user}}/badger_token.txt"

- debug:
    var: curl.stdout
