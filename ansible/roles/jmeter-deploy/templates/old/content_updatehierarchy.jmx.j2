<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Update_Hierarchy" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="threadNum" elementType="Argument">
            <stringProp name="Argument.name">threadNum</stringProp>
            <stringProp name="Argument.value">THREADS_COUNT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampUpTime" elementType="Argument">
            <stringProp name="Argument.name">rampUpTime</stringProp>
            <stringProp name="Argument.value">RAMPUP_TIME</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">internal-SANDBOX-LP-ELB-229261891.ap-south-1.elb.amazonaws.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TXN_ID" elementType="Argument">
            <stringProp name="Argument.name">TXN_ID</stringProp>
            <stringProp name="Argument.value">TXN_${__counter(false)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Content Update Hierarchy" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">CTRL_LOOPS</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threadNum}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampUpTime}</stringProp>
        <longProp name="ThreadGroup.start_time">1476265242000</longProp>
        <longProp name="ThreadGroup.end_time">1476265242000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateHierarchy_Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;request&quot;: {&#xd;
    &quot;data&quot;: {&#xd;
    &quot;nodesModified&quot;: {&#xd;
        &quot;textbook1&quot;: {&#xd;
            &quot;metadata&quot;: {&#xd;
                &quot;name&quot;: &quot;LP_PT_Textbook&quot;,&#xd;
                &quot;contentType&quot;: &quot;TextBook&quot;,&#xd;
                &quot;code&quot;: &quot;textbook1&quot;,&#xd;
                &quot;concepts&quot;: [{&quot;identifier&quot;: &quot;LO1&quot;}],&#xd;
                &quot;mimeType&quot;: &quot;application/vnd.ekstep.content-collection&quot;&#xd;
            },&#xd;
            &quot;root&quot;: true, &#xd;
            &quot;isNew&quot;: true&#xd;
        },&#xd;
         &quot;textbookunit1&quot;: {&#xd;
            &quot;metadata&quot;: {&#xd;
                &quot;name&quot;: &quot;LP_PT_Textbook Unit 1&quot;,&#xd;
                &quot;contentType&quot;: &quot;TextBookUnit&quot;,&#xd;
                &quot;code&quot;: &quot;textbookunit1&quot;,&#xd;
                &quot;mimeType&quot;: &quot;application/vnd.ekstep.content-collection&quot;&#xd;
            },&#xd;
            &quot;isNew&quot;: true&#xd;
        },&#xd;
        &quot;textbookunit2&quot;: {&#xd;
            &quot;metadata&quot;: {&#xd;
                &quot;name&quot;: &quot;LP_PT_Textbook Unit 2&quot;,&#xd;
                &quot;contentType&quot;: &quot;TextBookUnit&quot;,&#xd;
                &quot;code&quot;: &quot;textbookunit2&quot;,&#xd;
                &quot;mimeType&quot;: &quot;application/vnd.ekstep.content-collection&quot;&#xd;
            },&#xd;
            &quot;isNew&quot;: true&#xd;
        },&#xd;
         &quot;textbookunit2.1&quot;: {&#xd;
            &quot;metadata&quot;: {&#xd;
                &quot;name&quot;: &quot;LP_PT_Textbook Unit 2.1&quot;,&#xd;
                &quot;contentType&quot;: &quot;TextBookUnit&quot;,&#xd;
                &quot;code&quot;: &quot;textbookunit2.1&quot;,&#xd;
                &quot;mimeType&quot;: &quot;application/vnd.ekstep.content-collection&quot;&#xd;
            },&#xd;
            &quot;isNew&quot;: true&#xd;
        },&#xd;
        &quot;textbookunit2.2&quot;: {&#xd;
            &quot;metadata&quot;: {&#xd;
                &quot;name&quot;: &quot;LP_PT_Textbook Unit 2.2&quot;,&#xd;
                &quot;contentType&quot;: &quot;TextBookUnit&quot;,&#xd;
                &quot;code&quot;: &quot;textbookunit2.2&quot;,&#xd;
                &quot;mimeType&quot;: &quot;application/vnd.ekstep.content-collection&quot;&#xd;
            },&#xd;
            &quot;root&quot;: false, &#xd;
            &quot;isNew&quot;: true&#xd;
        }&#xd;
    },&#xd;
    &quot;hierarchy&quot;: {&#xd;
        &quot;textbook1&quot;: { &#xd;
            &quot;children&quot;: [&#xd;
                &quot;textbookunit1&quot;,&#xd;
                &quot;textbookunit2&quot;&#xd;
            ],&#xd;
            &quot;root&quot;: true&#xd;
        },&#xd;
        &quot;textbookunit1&quot;: { &#xd;
            &quot;children&quot;: [&#xd;
            	&quot;do_11228762110033100813&quot;&#xd;
            ],&#xd;
            &quot;root&quot;: true&#xd;
        },&#xd;
        &quot;textbookunit2&quot;: { &#xd;
            &quot;children&quot;: [&#xd;
            	&quot;textbookunit2.1&quot;, &quot;textbookunit2.2&quot;&#xd;
            ]&#xd;
        },&#xd;
        &quot;textbookunit2.1&quot;: { &#xd;
            &quot;children&quot;: [&#xd;
            ]&#xd;
        }&#xd;
    },&#xd;
    &quot;mutations&quot;: {}&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/learning-service/v2/content/hierarchy/update</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">THREAD_ID</stringProp>
              <stringProp name="Header.value">${__threadNum()}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">TXN_ID</stringProp>
              <stringProp name="Header.value">TXN_${__counter(false)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">user-id</stringProp>
              <stringProp name="Header.value">ilimi</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">create_input_data.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">identifier</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
