---
- name: Ensure env directory exists
  file:
    path: /home/deployer/env
    state: directory
    owner: root
    group: root

- name: Ensure stack directory exists
  file:
    path: /home/deployer/stack
    state: directory
    owner: root
    group: root

- name: Ensure config directory exists
  file:
    path: /home/deployer/config
    state: directory
    owner: root
    group: root

- name: Save configurations into an env file
  template: src=proxy.env dest=/home/deployer/env/proxy.env mode=0644

- name: Save stack file
  template: src=stack-proxy.yml dest=/home/deployer/stack/proxy.yml mode=0644

- name: Save nginx.conf
  template: src=nginx.conf dest=/home/deployer/config/nginx.conf mode=0644

- name: Save proxy-default.conf
  template: src=proxy-default.conf dest=/home/deployer/config/proxy-default.conf mode=0644

- name: Remove old style proxy stack
  shell: "docker stack rm {{image_name}}-{{env}}"
  ignore_errors: yes

- name: Remove stack
  shell: "docker stack rm proxy"
  ignore_errors: yes

- name: Ensure network exists
  shell: "docker network create --driver overlay proxy_default"
  ignore_errors: true

  # Ignoring ssl certs while proto=https mode
- name: Remove docker secrets {{ item.name }}
  shell: "docker secret rm {{ item.name }}"
  with_items: "{{ proxy_secrets }}"
  ignore_errors: true
  no_log: true

- name: Create docker secrets {{ item.name }}
  shell: "echo '{{item.value}}' | docker secret create {{item.name}} -"
  with_items: "{{ proxy_secrets }}"
  no_log: true

- name: Remove old nginx.conf docker config
  shell: "docker config rm nginx.conf"
  ignore_errors: yes

- name: Remove old proxy-default.conf docker config
  shell: "docker config rm proxy-default.conf"
  ignore_errors: yes

- name: Save nginx.conf as docker config
  shell: "docker config create nginx.conf /home/deployer/config/nginx.conf"

- name: Save proxy-default.conf as docker config
  shell: "docker config create proxy-default.conf /home/deployer/config/proxy-default.conf"

- debug: msg="Image details= {{hub_org}}:{{image_name}}:{{image_tag}}"

- debug: msg="server name= {{proxy_server_name}}"

- name: Deploy stack
  shell: "docker stack deploy -c proxy.yml proxy"
  args:
    chdir: /home/deployer/stack
