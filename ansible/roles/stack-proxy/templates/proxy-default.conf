{% if env != 'dev' %} 
server {
   listen 80 default_server;
   server_name _; # This is just an invalid value which will never trigger on a real hostname.
   server_name_in_redirect off;
   return 403;
}
{% endif %}
{% if proto=='https' %} 
{% if env != 'dev' %} 
server {
   listen 443 default_server ssl;
   server_name _; # This is just an invalid value which will never trigger on a real hostname.
   ssl_certificate       /run/secrets/site.crt;
   ssl_certificate_key   /run/secrets/site.key;
   server_name_in_redirect off;
   return 403;
}
{% endif %}
server {
  listen 80;
  listen [::]:80;
  server_name {{ proxy_server_name }};

  return 301 https://{{ proxy_server_name }}$request_uri;
}
{% endif %}
server {
{% if proto=='http' %}
  listen                80;
  listen    [::]:80;
{% else %}
  listen                443 ssl;
  ssl_certificate       /run/secrets/site.crt;
  ssl_certificate_key   /run/secrets/site.key;
{% endif  %}
  server_name           {{ proxy_server_name }};

  proxy_set_header    Host              $host;
  proxy_set_header    X-Real-IP         $remote_addr;
  proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header    X-Forwarded-SSL   on;
  proxy_set_header    X-Forwarded-Proto $scheme;

  ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
  resolver 127.0.0.11 valid=5s;

  location ~* ^/auth/realms/(.+)/token/introspect/ {
        return 301 {{proto}}://$host/api/auth/v1/realms/$1/token/introspect;
  }
  location ~* ^/auth/realms/(.+)/token/ {
    return 301  {{proto}}://$host/api/auth/v1/realms/$1/token/;
  }
  location ~* ^/auth/realms/(.+)/userinfo/ {
    return 301 {{proto}}://$host/api/auth/v1/realms/$1/userinfo/;
  }
  location ~* ^/auth/realms/(.+)/logout/ {
    return 301 {{proto}}://$host/api/auth/v1/realms/$1/logout/;
  }
  location ~* ^/auth/realms/(.+)/certs/ {
    return 301 {{proto}}://$host/api/auth/v1/realms/$1/certs/;
  }
  location ~* ^/auth/realms/(.+)/clients-registrations/ {
    return 301 {{proto}}://$host/api/auth/v1/realms/$1/clients-registrations/;
  }

  location /auth/ {
    set $target {{ keycloak_url }};
    rewrite ^/auth/(.*) /auth/$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
 location /registry/ {
    set $target http://registry_registry:8080;
    rewrite ^/registry/(.*) /$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;
    proxy_set_header    X-Forwarded-Proto $scheme;
    # root   /usr/share/nginx/www;
  }
  location /api/ {
    set $target http://api-manager_kong:8000;
    rewrite ^/api/(.*) /$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 60;
  }

  location /dashboard/ {
    set $target http://logger_oauth:4111;
    rewrite ^/dashboard/(.*) /$1 break;
    proxy_pass $target;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;

    sub_filter '</footer>' '</footer><script>document.getElementsByName("rd")[0] && document.getElementsByName("rd")[0].value.indexOf("/") === 0 && (document.getElementsByName("rd")[0].value = "/dashboard")</script>';
    sub_filter_once on;
  }

  location /grafana/ {
    set $target http://monitor_grafana:3000;
    rewrite ^/grafana/(.*) /$1 break;
    proxy_pass $target;
  }

  location /oauth2/ {
    set $target http://logger_oauth:4111;
    proxy_pass $target;
  }

{% if proxy_prometheus==true %}
  location /{{prometheus_alertmanager_route_prefix}}/ {
    set $target http://monitor_alertmanager:9093;
    rewrite ^/{{prometheus_alertmanager_route_prefix}}/(.*) /{{prometheus_alertmanager_route_prefix}}/$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;

    auth_basic           "Prometheus Alert manager";
    auth_basic_user_file /run/secrets/prom_admin_creds;
  }

  location /{{prometheus_route_prefix}}/ {
    set $target http://monitor_prometheus:9090;
    rewrite ^/(.*) /$1 break;
    proxy_pass $target;
  }
{% endif %}

 location /encryption/ {
    set $target http://encryption-service:8013;
    rewrite ^/encryption/(.*) /$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;
    proxy_set_header    X-Forwarded-Proto $scheme;
    # root   /usr/share/nginx/www;
  }
  

  location /badging/ {
    set $target http://badger-service:8004;
    rewrite ^/badging/(.*) /$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;
    proxy_set_header    X-Forwarded-Proto $scheme;

}

    location ~* ^/assets/public/(.*) {
        # Enabling cache for Response code 200
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";

        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/javascript;

        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" ;
                add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                # add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
        }

    set $s3_bucket        "ekstep-public-{{ekstep_s3_env}}.s3-ap-south-1.amazonaws.com";
    set $url_full         '$1';
    proxy_http_version     1.1;
    proxy_set_header       Host $s3_bucket;
    proxy_set_header       Authorization '';
        proxy_hide_header      Access-Control-Allow-Origin;
        proxy_hide_header      Access-Control-Allow-Methods;
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      Set-Cookie;
    proxy_ignore_headers   "Set-Cookie";
    proxy_buffering        off;
    proxy_intercept_errors on;
        add_header             Access-Control-Allow-Origin "*";
        add_header             Access-Control-Allow-Methods GET;
    proxy_pass             https://$s3_bucket/$url_full;
}

location ~* ^/content/preview/(.*) {
        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;

        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" ;
                add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                # add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
        }

    set $s3_bucket        "ekstep-public-{{ekstep_s3_env}}.s3-ap-south-1.amazonaws.com";
    set $url_full         '$1';
    proxy_http_version     1.1;
    proxy_set_header       Host $s3_bucket;
    proxy_set_header       Authorization '';
    proxy_hide_header      Access-Control-Allow-Origin;
    proxy_hide_header      Access-Control-Allow-Methods;
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      Set-Cookie;
    proxy_ignore_headers   "Set-Cookie";
    proxy_buffering        off;
    proxy_intercept_errors on;
    add_header             Access-Control-Allow-Origin "*" ;
    add_header             Access-Control-Allow-Methods GET;
    proxy_pass             https://$s3_bucket/v3/preview/$url_full;
}

location ~* ^/content-plugins/(.*) {
        # Enabling cache for Response code 200
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";

        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;

        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*" ;
                add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                # add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
        }
       set $s3_bucket        "ekstep-public-{{ekstep_s3_env}}.s3-ap-south-1.amazonaws.com";

       set $url_full         '$1';
       proxy_http_version     1.1;
       proxy_set_header       Host $s3_bucket;
       proxy_set_header       Authorization '';
       proxy_hide_header      Access-Control-Allow-Origin;
       proxy_hide_header      Access-Control-Allow-Methods;
       proxy_hide_header      x-amz-id-2;
       proxy_hide_header      x-amz-request-id;
       proxy_hide_header      Set-Cookie;
       proxy_ignore_headers   "Set-Cookie";
       proxy_buffering        off;
       proxy_intercept_errors on;
       add_header             Access-Control-Allow-Origin "*";
       add_header             Access-Control-Allow-Methods GET;
       proxy_pass             https://$s3_bucket/content-plugins/$url_full;
}

  location /thirdparty {
        # Enabling cache for Response code 200
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";

        # Enabling compression
        gzip            on;
        gzip_min_length 100000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types application/javascript application/x-javascript text/css text/javascript;

    set $target http://player_player:3000;
    rewrite ^/(.*) /$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 60;
    proxy_set_header    X-Forwarded-Proto $scheme;
    # root   /usr/share/nginx/www;
  }

  location / {
    set $target http://player_player:3000;
    rewrite ^/(.*) /$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 60;
    proxy_set_header    X-Forwarded-Proto $scheme;
    # root   /usr/share/nginx/www;
  }
  {# Including custom configuration #}
  {{ proxy_custom_config }}
  client_max_body_size 60M;
}
