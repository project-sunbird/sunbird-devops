server {
  listen 80;
  listen [::]:80;
  server_name {{ merge_proxy_server_name }};
  # Limitting open connection per ip
  limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
  return 301 https://{{ merge_proxy_server_name }}$request_uri;
}
server {
  listen                443 ssl;
  ssl_certificate       /run/secrets/sitemerge.crt;
  ssl_certificate_key   /run/secrets/sitemerge.key;
  server_name           {{ merge_proxy_server_name }};
  # Limitting open connection per ip
  limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
  proxy_set_header    Host              $host;
  proxy_set_header    X-Real-IP         $remote_addr;
  proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header    X-Forwarded-SSL   on;
  proxy_set_header    X-Forwarded-Proto $scheme;
  ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
  resolver 127.0.0.11 valid=5s;
  location ~* ^/auth/realms/(.+)/token/introspect/ {
        return 301 {{proto}}://$host/api/auth/v1/realms/$1/token/introspect;
  }
  location ~* ^/auth/realms/(.+)/token/ {
    return 301  {{proto}}://$host/api/auth/v1/realms/$1/token/;
  }
  location ~* ^/auth/realms/(.+)/userinfo/ {
    return 301 {{proto}}://$host/api/auth/v1/realms/$1/userinfo/;
  }
  location ~* ^/auth/realms/(.+)/logout/ {
    return 301 {{proto}}://$host/api/auth/v1/realms/$1/logout/;
  }
  location ~* ^/auth/realms/(.+)/certs/ {
    return 301 {{proto}}://$host/api/auth/v1/realms/$1/certs/;
  }
  location ~* ^/auth/realms/(.+)/clients-registrations/ {
    return 301 {{proto}}://$host/api/auth/v1/realms/$1/clients-registrations/;
  }
  location ~* ^/auth/v1/refresh/token  {
    set $target http://player:3000;
    rewrite ^/auth/(.*) /auth/$1 break;
    proxy_pass $target;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
 
  location ~* ^/auth/admin/master/console/ {
    return 301 {{proto}}://{{ merge_proxy_server_name }};
  }
  location /auth/ {
    set $target {{ keycloak_url }};
    rewrite ^/auth/(.*) /auth/$1 break;
    proxy_pass $target;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  location / {
    rewrite ^/(.*) /$1 break;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_pass http://player;
  }
}

