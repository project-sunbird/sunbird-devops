---
- name: ensure backup dir exists
  file:
    path: "{{ grafana_backup_dir }}"
    state: directory


- name: ensure backup dir is empty
  shell: "rm -rf {{ grafana_backup_dir }}/*"

- set_fact:
    grafana_backup_gzip_file_name: "grafana_db_{{ lookup('pipe', 'date +%Z-%Y-%m-%d-%H-%M-%S') }}.tar.gz"

- set_fact:
    grafana_backup_gzip_file_path: "{{ grafana_backup_dir }}/{{ grafana_backup_gzip_file_name }}"

- name: Save backup
  shell: "tar -czf {{ grafana_backup_gzip_file_path }} {{ grafana_data_dir }}"
  async: 3600
  poll: 10

- name: upload file to azure storage
  include_role:
    name: azure-cloud-storage
    tasks_from: blob-upload.yml
  vars:
    blob_container_name: "{{ grafana_backup_storage }}"
    container_public_access: "off"
    blob_file_name: "{{ grafana_backup_gzip_file_name }}"
    local_file_or_folder_path: "{{ grafana_backup_gzip_file_path }}"
    storage_account_name: "{{ cloud_management_storage_accountname }}"
    storage_account_key: "{{ cloud_management_storage_secret }}"
  when: cloud_service_provider == "azure"

- name: upload file to aws s3
  include_role:
    name: aws-cloud-storage
    tasks_from: upload.yml
  vars:
    s3_bucket_name: "{{ aws_management_s3_bucket_name }}"
    aws_access_key_id: "{{ aws_management_bucket_access_key }}"
    aws_secret_access_key: "{{ aws_management_bucket_secret_access_key }}"
    aws_default_region: "{{ aws_region }}"
    local_file_or_folder_path: "{{ grafana_backup_gzip_file_path }}"
    s3_path: "{{ grafana_backup_storage }}/{{ grafana_backup_gzip_file_name }}"
  when: cloud_service_provider == "aws"

- name: upload file to gcloud storage
  include_role:
    name: gcp-cloud-storage
    tasks_from: upload.yml
  vars:
    gcp_bucket_name: "{{ gcloud_management_bucket_name }}"
    dest_folder_name: "{{ grafana_backup_storage }}"
    dest_file_name: "{{ grafana_backup_gzip_file_name }}"
    local_file_or_folder_path: "{{ grafana_backup_gzip_file_path }}"
  when: cloud_service_provider == "gcloud"

- name: clean up backup dir after upload
  file: path="{{ grafana_backup_dir }}" state=absent
