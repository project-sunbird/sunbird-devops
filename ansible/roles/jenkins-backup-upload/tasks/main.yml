- name: ensure backup base directory exists
  file: path={{ jenkins_backup_base_dir }} state=directory owner={{ jenkins_user }} group={{ jenkins_group }}

- name: Find latest directory
  shell: ls -dt */ | head -n 1 | cut -d'/' -f1
  args:
    chdir: "{{ jenkins_backup_base_dir }}"
  register: LATEST_BACKUP_DIR

- debug: msg={{ LATEST_BACKUP_DIR.stdout }}

- name: Create archive of backup directory
  archive: path="{{ jenkins_backup_base_dir }}/{{ LATEST_BACKUP_DIR.stdout }}" dest="/tmp/{{ LATEST_BACKUP_DIR.stdout }}.zip" format=zip

- name: upload file to azure storage
  include_role:
    name: azure-cloud-storage
    tasks_from: blob-upload.yml
  vars:
    blob_container_name: "{{ cloud_storage_jenkinsbackup_foldername }}"
    container_public_access: "off"
    blob_file_name: "{{ LATEST_BACKUP_DIR.stdout }}.zip"
    local_file_or_folder_path: "/tmp/{{ LATEST_BACKUP_DIR.stdout }}.zip"
    storage_account_name: "{{ cloud_management_storage_accountname }}"
    storage_account_key: "{{ cloud_management_storage_secret }}"
  when: cloud_service_provider == "azure"

- name: upload file to aws s3
  include_role:
    name: aws-cloud-storage
    tasks_from: upload.yml
  vars:
    s3_bucket_name: "{{ cloud_storage_jenkinsbackup_bucketname }}"
    aws_access_key_id: "{{ cloud_management_storage_accountname }}"
    aws_secret_access_key: "{{ cloud_management_storage_secret }}"
    aws_default_region: "{{ cloud_public_storage_region }}"
    local_file_or_folder_path: "/tmp/{{ LATEST_BACKUP_DIR.stdout }}.zip"
    s3_path: "{{ cloud_storage_jenkinsbackup_foldername }}/{{ LATEST_BACKUP_DIR.stdout }}.zip"
  when: cloud_service_provider == "aws"
  
- name: upload file to gcloud storage
  include_role:
    name: gcp-cloud-storage
    tasks_from: upload.yml
  vars:
    gcp_bucket_name: "{{ cloud_storage_jenkinsbackup_bucketname }}"
    gcp_path: "{{ cloud_storage_jenkinsbackup_foldername  }}/{{ LATEST_BACKUP_DIR.stdout }}.zip"
    local_file_or_folder_path: "/tmp/{{ LATEST_BACKUP_DIR.stdout }}.zip"
  when: cloud_service_provider == "gcloud"

