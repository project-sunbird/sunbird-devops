- name: Ensure azure blob storage container exists
  command: az storage container create  --name {{offline_installer_container_name}} --public-access off
  environment:
    AZURE_STORAGE_ACCOUNT: "{{sunbird_offline_azure_storage_account}}"
    AZURE_STORAGE_KEY: "{{sunbird_offline_azure_storage_key}}"

- name: Upload to azure blob storage
  command: az storage blob upload-batch --destination {{offline_installer_container_name}} --source "offline_artifacts"
  args:
    chdir: "{{offline_repo_location}}/offline-installer-repo/"
  environment:
    AZURE_STORAGE_ACCOUNT: "{{sunbird_offline_azure_storage_account}}"
    AZURE_STORAGE_KEY: "{{sunbird_offline_azure_storage_key}}"
  async: 60
  poll: 10

- name: get the directory name
  shell: "ls {{offline_repo_location}}/offline-installer-repo/offline_artifacts/"
  register: folderName

- debug:
    msg: "{{folderName.stdout}}"

- name: Upload to azure blob storage
  command: az storage blob upload-batch --destination "{{offline_installer_container_name}}/latest" --source "{{folderName.stdout}}"
  args:
    chdir: "{{offline_repo_location}}/offline-installer-repo/offline_artifacts/"
  environment:
    AZURE_STORAGE_ACCOUNT: "{{sunbird_offline_azure_storage_account}}"
    AZURE_STORAGE_KEY: "{{sunbird_offline_azure_storage_key}}"
  async: 60
  poll: 10

- name: Upload to latest.json file to blob
  command: az storage blob upload-batch --destination "{{offline_installer_container_name}}/latest" --source "{{folderName.stdout}}"
  args:
    chdir: "{{offline_repo_location}}/offline-installer-repo/offline_artifacts/"
  environment:
    AZURE_STORAGE_ACCOUNT: "{{sunbird_offline_azure_storage_account}}"
    AZURE_STORAGE_KEY: "{{sunbird_offline_azure_storage_key}}"
  async: 60
  poll: 10

- name: Create a zip of the folder to archieve the artifact
  archive:
    path:
    - "{{offline_repo_location}}/offline-installer-repo/offline_artifacts/{{folderName.stdout}}"
    dest: "{{offline_repo_location}}/{{offline_installer_type}}.zip"
    format: zip
