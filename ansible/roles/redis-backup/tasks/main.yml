- name: Create the directory
  file: path={{ redis_backup_dir }} state=directory recurse=yes

- set_fact:
    redis_backup_file_name: "redis-backup-{{ lookup('pipe', 'date +%Y-%m-%d-%T') }}.rdb"
 
- set_fact:
    redis_backup_file_path: "{{ redis_backup_dir }}/{{ redis_backup_file_name }}"

- name: copy dump.rdb file
  copy:
    src: /home/learning/redis-stable/dump.rdb
    dest: "{{ redis_backup_dir }}/{{ redis_backup_file_name }}"
    remote_src: yes

- name: upload file to azure storage
  include_role:
    name: azure-cloud-storage
    tasks_from: blob-upload.yml
  vars:
    blob_container_name: "{{ nodebb_redis_backup_storage }}"
    container_public_access: "off"
    blob_file_name: "{{ redis_backup_file_name }}"
    local_file_or_folder_path: "{{ redis_backup_file_path }}"
    storage_account_name: "{{ cloud_management_storage_accountname }}"
    storage_account_key: "{{ azure_management_storage_account_key }}"
  when: cloud_service_provider == "azure"

- name: upload file to aws s3
  include_role:
    name: aws-cloud-storage
    tasks_from: upload.yml
  vars:
    s3_bucket_name: "{{ aws_management_s3_bucket_name }}"
    aws_access_key_id: "{{ aws_management_bucket_access_key }}"
    aws_secret_access_key: "{{ aws_management_bucket_secret_access_key }}"
    aws_default_region: "{{ aws_region }}"
    local_file_or_folder_path: "{{ redis_backup_file_path }}"
    s3_path: "{{ nodebb_redis_backup_storage }}/{{ redis_backup_file_name }}"
  when: cloud_service_provider == "aws"
   
- name: upload file to gcloud storage
  include_role:
    name: gcp-cloud-storage
    tasks_from: upload.yml
  vars:
    gcp_bucket_name: "{{ cloud_storage_redisbackup_bucketname }}"
    gcp_path: "{{ cloud_storage_redisbackup_foldername }}/{{ redis_backup_file_name }}"
    local_file_or_folder_path: "{{ redis_backup_file_path }}"
  when: cloud_service_provider == "gcloud"

- name: clean up backup dir after upload
  file: path={{ redis_backup_dir }} state=absent

- name: Keyspace info
  shell: "echo info keyspace | ./src/redis-cli"
  register: restoreinfo
  args:
    chdir: "/home/learning/redis-stable/"

- debug: var=restoreinfo.stdout_lines

