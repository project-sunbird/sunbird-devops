- hosts: log-es
  become: yes
  vars_files:
    - ['{{inventory_dir}}/secrets.yml']
  pre_tasks:
    - name: Registering node name
      set_fact:
        es_instance_name: "{% for servername in play_hosts %}{% if inventory_hostname==servername %}log-es-{{ loop.index }}{% endif %}{% endfor %}"
      when: es_instance_name is not defined
  roles:
    - openjdk
    - { role: log-es6,
        es_config: {
          cluster.name: "{{ log_es_etc_cluster_name }}",
          discovery.zen.ping.unicast.hosts: "{{ groups['log-es'] }}",
          http.port: 9200,
          transport.tcp.port: 9300,
          node.data: "{{ es_etc_node_data | default('true') }}",
          node.master: "{{ es_etc_node_master | default('true') }}",
          bootstrap.memory_lock: true,
        },
        es_etc_discovery_zen_ping_unicast_hosts: "{{ groups['log-es'] }}",
        es_etc_cluster_name: "{{ node_name }}"
      }
  post_tasks:
    # This will make some performance tuning
    # Ref: https://aws.amazon.com/premiumsupport/knowledge-center/elasticsearch-indexing-performance/
    #
    # Number of replicas: 0  # this is make sure that there is no backup and hence, no disk write. Good for logging indices
    # refresh_interval: 60s  # Refresh interval is the setting which make sure the latest indexed data will be available for search.
    #                        # But refresh is a heavy resource intensive operation, which can be run once in a minute than once in a second
    #                        # https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-update-settings.html
    #
    - name: Changing log es index replica to zero
      uri:
        url: "http://{{groups['log-es'][0]}}:9200/_template/logstash"
        body: |-
          {
            "index_patterns": [
              "{{log_es_index_pattern|d('logstash-*')}}"
            ],
            "settings": {
              "number_of_shards": 5,
              "number_of_replicas": 0,
              "refresh_interval" : "60s"
            }
           }
        body_format: json
        headers: 
          Content-Type: application/json
        http_agent: ansible-httpget
        method: PUT
        return_content: true
        timeout: 30
        retries: 3
        delay: 10
