---

# This script will migrate kong .9x to .10.3
#
# Prerequisites
#
# 1. remove api-manager_kong `docker service rm api-manager_kong`
# 2. Create api_manager backup `pg_dump --host=<host> --port=5432 --username=<username> -F p <db_name> > api-manager.sql`
# 3. Create new database out of the backup
# 4. Add new database to kong_postgres_database variable in common.yml
#
# you can pass the inventory from where all docker related args will get scraped
# Image name, you'll have to pass it as extra args
# eg:
# ansible-playbook -i /path/to/inventory --vault-password-file /path/to/vault/password -e kong_image=sunbird.azure.io/kong:2.0.0 kong_migration.yml

- hosts: swarm-bootstrap-manager
  gather_facts: false
  become: yes
  run_once: true
  vars_files:
    - ['{{ inventory_dir }}/secrets.yml']
  tasks:
  - name: Installing deps
    pip:
      name: docker-py
      state: present
  - name: login to registry
    docker_login:
      registry: "{{ vault_docker_registry_url }}"
      username: "{{ vault_docker_registry_user }}"
      password: "{{ vault_docker_registry_password }}"
  - name: templating migration_api-manager env
    template:
      src: static-files/api-manager.env
      dest: /home/deployer/env/migration_api-manager.env
  - name: checking for api-manager_kong
    shell: docker service ps api-manager_kong
    register: service_status 
    changed_when: false
    failed_when: false
  - name: failing if api-manager running
    fail:
      msg: api manager is still running. Please remove the service and run again !!!
    when: service_status.rc == 0
  - name: Creating  migration_api-manager with kong image version to .10.3
    shell: "docker service create --env-file /home/deployer/env/migration_api-manager.env --with-registry-auth  --name migration_api-manager {{ kong_image }} kong migrations up"
