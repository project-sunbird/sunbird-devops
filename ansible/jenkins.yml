---
- name: Setup Jenkins Master
  hosts: jenkins-master
  vars_files:
    - ['{{inventory_dir}}/secrets.yml', 'secrets/{{env}}.yml']
  become: yes
  pre_tasks:
    - name: Ensure backup directory exists
      file: dest=/jenkins-backup state=directory owner=jenkins group=jenkins
    - name: Ensure zip is installed
      apt: name=zip
    - name: Ensure secrets directory exists
      file: dest=/run/secrets state=directory owner=jenkins group=jenkins
    - name: Install vault password
      copy: dest=/run/secrets/vault-pass content={{ vault_pass }} owner=jenkins group=jenkins
      no_log: true
    - name: Install deployer-ssh-key
      copy: dest=/run/secrets/deployer-ssh-key content={{ deployer_ssh_key }} owner=jenkins group=jenkins mode=0600
      no_log: true
    - name: Install environments vault passwords
      copy: dest=/run/secrets/vault-pass-{{ item.name }} content={{ item.value }} owner=jenkins group=jenkins
      with_items: "{{ environments_vault_passwords | default([]) }}"
      no_log: true
    - name: Install environments ops keys
      copy: dest=/run/secrets/ops-key-{{ item.name }} content={{ item.value }} owner=jenkins group=jenkins mode=0600
      with_items: "{{ environments_ops_keys | default([]) }}"
      no_log: true
  roles:
    - openjdk
    - git
    - ansible
    - azure-cli
    - jenkins
  tags:
    - jenkins-master

- name: Setup CI proxy
  hosts: ci-proxy
  vars_files:
    - ['{{inventory_dir}}/secrets.yml', 'secrets/{{env}}.yml']
  become: yes
  pre_tasks:
    - name: Ensure {{ ci_proxy_nginx_ssl_dir }} exists
      file: path={{ ci_proxy_nginx_ssl_dir }} state=directory
      notify: restart nginx

    - name: Ensure {{ ci_proxy_nginx_ssl_cert_file }} exists
      copy: dest={{ ci_proxy_nginx_ssl_cert_file }} content={{ vault_ci_proxy_nginx_ssl_cert }}  mode=0600
      notify: restart nginx

    - name: Ensure {{ ci_proxy_nginx_ssl_key_file }} exists
      copy: dest={{ ci_proxy_nginx_ssl_key_file }} content={{ vault_ci_proxy_nginx_ssl_key }} mode=0600
      notify: restart nginx
  roles:
    - role: nginx
      nginx_configs:
        ssl:
          - ssl_certificate_key {{ ci_proxy_nginx_ssl_key_file }}
          - ssl_certificate     {{ ci_proxy_nginx_ssl_cert_file }}
      nginx_sites:
        jenkins:
            - listen {{ ci_proxy_ssl_port }} ssl
            - location /jenkins/ { proxy_pass http://{{ groups['jenkins-master'][0] }}:{{ jenkins_http_port}}{{ jenkins_url_prefix }}/; }
            - location / { return 301 https://$host/jenkins; }
        jenkins_http_redirect:
            - listen 80
            - return 301 https://$host$request_uri
  tags:
    - ci-proxy
