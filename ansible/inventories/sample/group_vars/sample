# ENVIRONMENT CONFIGURATION
env: "{{env}}"  #Name of the environment, e.g. dev, staging or production.
proxy_server_name: "{{dns_name}}"  #Domain on which the portal will be accessed. e.g. staging.{implementation-name}.org
proxy_site_key: "{{lookup('file',key_path) if key_path else ''}}"   #SSL certificate's site.key file path. More details in this wiki: https://github.com/project-sunbird/sunbird-devops/wiki/Updating-SSL-certificates-in-Sunbird-Proxy-service
proxy_site_crt: "{{lookup('file',cert_path) if cert_path else ''}}"  #SSL certificate's site.crt file path. More details in this wiki: https://github.com/project-sunbird/sunbird-devops/wiki/Updating-SSL-certificates-in-Sunbird-Proxy-service
sunbird_private_key_path: 
hub_org: sunbird
sunbird_external_content_whitelisted_domains:
learner_limit_cpu: 1
learner_reservation_cpu: 1
sunbird_default_channel:
sunbird_cs_base_url:
sunbird_content_service_whitelisted_channels:
# DB CONFIGURATION
## Below passwords are used by DB install scripts when creating databases. Please use strong passwords.
application_postgres_password: "{{postgres_app_password if postgres_app_password else database_password}}"
keycloak_postgres_password: "{{postgres_keycloak_password if postgres_keycloak_password else database_password}}"
kong_postgres_password: "{{postgres_kong_password if postgres_kong_password else database_password}}"
badger_postgres_password: "{{postgres_badger_password if postgres_badger_password else database_password}}"

## Postgres configuration
swarm_address_space: "{{app_address_space}}" #Application server address space (e.g. 10.3.0.0/24), also the agentpublicSubnet if using Azure scripts provided

## Cassandra configuration
keystore_password: "{{cassandra_password if cassandra_password else database_password}}"   #Password to use for encrypting cassandra keystore. Use a strong password.
truststore_password: "{{cassandra_password if cassandra_password else database_password}}"  #Password to use for encrypting cassandra truststore. Use a strong password.
cassandra_listen_address: "{{ groups['cassandra'][0]|default(database_host) }}"
cassandra_seeds: "{{ groups['cassandra'][0]|default(database_host) }}"
cassandra_broadcast_rpc_address: "{{ groups['cassandra'][0]|default(database_host) }}"
cassandra_broadcast_address: "{{ groups['cassandra'][0]|default(database_host) }}"
cassandra_listen_interface: ''
cassandra_log_dir: '/var/log/cassandra'
cassandra_root_dir: '/etc/cassandra'
cassandra_version: '3.9'
cassandra_port: 9042
cassandra_rpc_address: 0.0.0.0
cassandra_restore_dir: /home/deployer/
cassandra_server_private_ip: "{{groups['cassandra'][0]|default(database_host)}}"


# APPLICATION CONFIGURATION

kong_host: api-manager_kong # Private IP of the application server
keycloak_url: "http://{{ groups['keycloak'][0] | default(application_host) }}:8080" #Internal url of keycloak. Example: http://<key_cloak_server_ip>:8080

## DB address
application_postgres_host: "{{ groups['postgresql-master'][0] | default(database_host) }}"   #Private IP of Postgres server
keycloak_postgres_host: "{{ groups['postgresql-master'][0] | default(database_host) }}"   #Private IP of Postgres server
kong_postgres_host: "{{ groups['postgresql-master'][0] | default(database_host) }}"  #Private IP of Postgres server
sunbird_cassandra_host: "{{ groups['cassandra'][0] | default(database_host) }}"  #Private IP of Cassandra server
sunbird_es_host: "{{ groups['es-1'][0] | default(database_host) }}" #Private IP of Elastic Search server. If ES cluster has multiple nodes then add all nodes by separating them with comma. e.g. 10.2.0.1,10.2.0.2,10.2.0.3

## Application server configurations
sunbird_ekstep_api_base_url: "{{ekstep_api_base_url}}"    #API base URL of the Ekstep environment. Use `https://qa.ekstep.in/api` for non-prod deployments, and use `https://api.ekstep.in/` for prod deployment.
sunbird_ekstep_proxy_base_url: "{{ekstep_proxy_base_url}}"  #Base URL of the Ekstep environment. Use `https://qa.ekstep.in/` for non-prod deployments, and `https://community.ekstep.in/` for prod deployment.
sunbird_env: qa  #Ekstep environment to connect to. Use `qa` for non-prod deployments, and `prod` for prod deployment.
sunbird_mail_server_host: "{{ mail_server_host }}" #SMTP server IP. Could be ignored if not mails are to be sent.
sunbird_mail_server_port: "{{ mail_server_port }}" #SMTP port. Could be ignored if not mails are to be sent.
sunbird_mail_server_username: "{{ mail_server_username }}" #SMTP username. Could be ignored if not mails are to be sent.
sunbird_mail_server_password: "{{ mail_server_password }}" #SMTP server pasword. Could be ignored if not mails are to be sent.
sunbird_mail_server_from_email: "{{alerts_mailing_list}}" #Email ID that should be as from address in mails

#player_tenant_dir:     #Configure if customising the image, path in which volume should be mounted.
sunbird_background_actor_host: actor-service
sunbird_actor_system_name: BackGroundRemoteMiddlewareActorSystem


## Keycloak (auth server) login details
sunbird_sso_username: user-manager
sunbird_sso_password: "{{sso_password}}"
sunbird_sso_publickey: 
keycloak_password: "{{keycloak_admin_password}}" #admin password for the keycloak_auth login
keycloak_theme_path:  #path to the keycloak theme files

## Keycloak bootstrap
keycloak_realm_json_file_path: "roles/keycloak/files/python-keycloak-0.12.0/keycloak-realm.json"
keycloak_user_manager_roles_json_file_path: "roles/keycloak/files/python-keycloak-0.12.0/roles.json"
keycloak_api_management_username: "{{sunbird_sso_username}}"
keycloak_api_management_user_email: ""
keycloak_api_management_user_first_name: "user"
keycloak_api_management_user_last_name: "manager"
keycloak_api_management_user_password: "{{sso_password}}"

## Content Repo configuration
sunbird_api_auth_token: #Authorization key (JWT) to access Sunbird APIs. This will be in the output of deploy-apis.sh script, extracting it out is documented in the deployment wiki.
sunbird_ekstep_api_key: "{{ekstep_api_key}}" #Authorization key (JWT) to access Ekstep APIs. Steps to generate this are documented on https://github.com/project-sunbird/sunbird-commons/wiki/Obtaining-API-token-for-accessing-ekstep-APIs
sunbird_trampoline_secret: "{{trampoline_secret}}"


# ADVANCED CONFIGURATIONS
keycloak_auth_server_url: "{{proto}}://{{proxy_server_name}}/auth"
keycloak_realm: sunbird
sunbird_content_player_url: "{{proto}}://{{proxy_server_name}}/api/"
sunbird_learner_player_url: "{{proto}}://{{proxy_server_name}}/api/"
sunbird_sso_url: "{{proto}}://{{proxy_server_name}}/auth"
sunbird_sso_client_id: admin-cli
sunbird_portal_realm: sunbird
sunbird_portal_auth_server_client: portal
sunbird_trampoline_client_id: trampoline
sunbird_default_tenant: sunbird
sunbird_echo_api_url: "{{proto}}://{{proxy_server_name}}/api/echo"
sunbird_pg_host: "{{ application_postgres_host }}"
sunbird_pg_port: 5432
sunbird_pg_db: quartz
sunbird_pg_user: quartz
sunbird_pg_password: "{{ application_postgres_password }}"
sunbird_installation: sunbird
sunbird_account_name: "{{sunbird_azure_storage_account}}"
sunbird_account_key: "{{sunbird_azure_storage_key}}"
sunbird_sunbird_quartz_mode: cluster  #Use `embedded` to run Quartz without any database, use any other value to use Postgres as database
sunbird_cassandra_urls: "{{groups['cassandra'][0]|default(database_host)}}:{{ cassandra_port }}"
sunbird_session_store_type: cassandra
sunbird_portal_title_name: portal
sunbird_keycloak_client_id: 'portal'
sunbird_msg_91_auth:
sunbird_keycloak_public: true
sunbird_msg_sender:
project: sunbird
application_postgres_database: quartz
application_postgres_user: quartz
keycloak_postgres_database: keycloak
keycloak_postgres_user: keycloak
sunbird_dataservice_url: "{{proto}}://{{proxy_server_name}}/api"
sunbird_azure_storage_account: "{sunbird_azure_storage_account}}"
sunbird_azure_storage_key: "{{sunbird_azure_storage_key}}"
sunbird_container_name: portal
sunbird_telemetry_packet_size: 200
sunbird_image_storage_url: "{{sunbird_image_storage_url}}"
sunbird_telemetry_sync_batch_size: 200
sunbird_installation_email: "{{sunbird_installation_email}}"
sunbird_telemetry_pdata_id: "{{sunbird_telemetry_pdata_id}}"
sunbird_environment: "{{env}}"
sunbird_instance: "{{implementation_name}}"


## elasticsearch configurations

es_heap_size: 1500m
es_etc_cluster_name: sunbird-sample
es_etc_discovery_zen_minimum_master_nodes: 1

## Cassandra download URI
cassandra_repo: 'deb http://www.apache.org/dist/cassandra/debian 39x main'
cassandra_repo_key: 'https://www.apache.org/dist/cassandra/KEYS'

#API Manager
kong_postgres_port: 5432
kong_postgres_user: "api_manager"
kong_postgres_database: "api_manager"



## PostgreSQL config
postgresql_hba_entries:
  - { type: local, database: all, user: postgres, auth_method: peer }
  - { type: local, database: all, user: all, auth_method: peer }
  - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
  - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }
  - { type: host, database: all, user: all, address: '{{ swarm_address_space }}', auth_method: md5 }

postgresql_users:
  - name: "{{kong_postgres_user}}"
    password: "{{postgres_kong_password if postgres_kong_password else database_password}}"
    db: "{{kong_postgres_database}}"
    priv: "ALL"
  - name: "{{keycloak_postgres_user}}"
    password: "{{postgres_keycloak_password if postgres_keycloak_password else database_password}}"
    db: "{{keycloak_postgres_database}}"
    priv: "ALL"
  - name: "{{application_postgres_user}}"
    password: "{{postgres_app_password if postgres_app_password else database_password}}"
    db: "{{application_postgres_database}}"
    priv: "ALL"
  - name: "{{badger_postgres_user}}"
    password: "{{postgres_badger_password if postgres_badger_password else database_password}}"
    db: "{{badger_postgres_database}}"
    priv: "ALL"


proxy_replicas: 1
proxy_reservation_memory: 64M
proxy_limit_memory: 128M
kong_replicas: 1
kong_reservation_memory: 120M
kong_limit_memory: 256M
echo_service_replicas: 1
echo_service_reservation_memory: 16M
echo_service_limit_memory: 32M
adminutil_replicas: 1
adminutil_reservation_memory: 512M
adminutil_limit_memory: 1024M

actor_replicas: 1
actor_reservation_memory: 500M
actor_limit_memory: 1024M

learner_replicas: 1
learner_reservation_memory: 1500M
learner_limit_memory: 1500M

player_replicas: 1
player_reservation_memory: 256M
player_limit_memory: 512M

content_replicas: 1
content_reservation_memory: 125M
content_limit_memory: 256M


#badger
badger_postgres_user: badger
badger_postgres_database: badger
badger_host: "{{ groups['postgresql-master'][0]|default(database_host)}}"
badger_replicas: 1
badger_reservation_memory: 500MB
badger_limit_memory: 500MB
badger_file_storage: storages.backends.azure_storage.AzureStorage
badger_url: http://azureaccountname.blob.core.windows.net/
badger_container: badgr
badger_admin_user: admin
badger_admin_password: "{{badger_admin_password}}"
badger_admin_email: "{{badger_admin_email}}"
sunbird_http_orgin: "https://{{proxy_server_name}}/badging"


#Logging
kibana_oauth_redirect_url: "{{proto}}://{{proxy_server_name}}/oauth2/callback"
monitor_alerts_slack_channel: "sunbird-{{env}}-alert"
google_client_id: "{{vault_google_client_id}}"
google_client_secret: "{{vault_google_client_secret}}"
cookie_secret: "{{vault_cookie_secret}}"
syslog:
    host: "{{application_host}}"
    port: 51415
logger_es_host: "{{ groups['log-es'][0] }}"
logger_es_port: 9200
swarm_load_balancer: "{{application_host}}"
filebeat_logtsash_host: "{{ application_host }}"
expected_minimum_logs_per_minute: 30
#kibana_oauth_authenticated_email_domains: 
#  - optit.co 
#kibana_oauth_authenticated_email_ids: 
#  - smy.altamash@gmail.com



#Monitoring
monitor_alerts_mail_from_email: "alerts@{{proxy_server_name}}"
monitor_alerts_mail_server_host: "{{ mail_server_host }}"
monitor_alerts_mail_server_port: "{{ mail_server_port }}"
monitor_alerts_mail_server_username: "{{ mail_server_username }}"
monitor_alerts_mail_server_password: "{{ mail_server_password }}"
grafana_url: "{{proto}}://{{proxy_server_name}}/grafana"
grafana_editor_username: editor
app_alerts_mailing_list: "{{alerts_mailing_list}}"
site_alerts_mailing_list: "{{alerts_mailing_list}}"
keycloak_alerts_mailing_list: "{{alerts_mailing_list}}"
api_manager_alerts_mailing_list: "{{alerts_mailing_list}}"
monitor_es_host: "{{ groups['es'][0] }}"
alertmanager_host: "{{ groups['swarm-agent-for-alertmanager'][0]||default(application_host) }}"
prometheus_host: "{{ groups['swarm-agent-for-prometheus'][0]|default(application_host) }}"
postgres_exporter_postgres_port: 5432
postgres_exporter_user: postgres_exporter
postgres_exporter_password: "{{ vault_postgres_exporter_password }}"
api__host: "{{proxy_server_name}}"
kong__test_jwt: "{{kong__test_jwt}}" 
prometheus_storage_retention_time: 72h0m0s
sunbird_android_app_url: sunbird.org

sunbird_user_bulk_upload_size: 1001
sunbird_installation_display_name: 

telemetry_proxy_url: https://dev.ekstep.in/api/data/v3/telemetry
