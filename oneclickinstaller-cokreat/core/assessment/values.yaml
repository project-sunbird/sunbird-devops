graph_passport_key: jd5ECm/o0BXwQCe8PfZY1NoUkB9HN41QjA80p22MKyRIcP5RW4qHw8sZztC
inquiry_schema_path: https://stagingdock.blob.core.windows.net/content-service/schemas
inquiry_cassandra_connection: cassandra.lern.svc.cluster.local:9042
inquiry_redis_host: redis.lern.svc.cluster.local
graph_passport_key: jd5ECm/o0BXwQCe8PfZY1NoUkB9HN41QjA80p22MKyRIcP5RW4qHw8sZztC
learning_neo4j_bolt_url: bolt://neo4j.lern.svc.cluster.local:7687
learning_write_elb_url: bolt://neo4j.lern.svc.cluster.local:7687
learning_read_elb_url: bolt://neo4j.lern.svc.cluster.local:7687
language_neo4j_bolt_url: bolt://neo4j.lern.svc.cluster.local:8687
language_write_elb_url: bolt://neo4j.lern.svc.cluster.local:8687
language_read_elb_url: bolt://neo4j.lern.svc.cluster.local:8687
mw_shard_id: 1
inquiry_kafka_urls: kafka.obsrv.svc.cluster.local:9092 
inquiry_assessment_publish_kafka_topic_name: dev.assessment.publish.request
inquiry_search_service_base_url: http://search-service.staging.svc.cluster.local:9000/v3/search
inquiry_assessment_import_kafka_topic_name: dev.object.import.request
master_category_validation_enabled: yes
cloud_storage_content_bucketname: sunbird-content-dock
cloudstorage_replace_absolute_path: true
cloudstorage_metadata_list: '["appIcon", "artifactUrl", "posterImage", "previewUrl", "thumbnail", "assetsMap", "certTemplate", "itemSetPreviewUrl", "grayScaleAppIcon", "sourceURL", "variants", "downloadUrl", "streamingUrl", "toc_url", "data", "question", "solutions", "editorState", "media", "pdfUrl", "transcripts"]'
cloudstorage_relative_path_prefix: CONTENT_STORAGE_BASE_PATH
cloudstorage_base_path: "http://obj.public.com"
valid_cloudstorage_base_urls: '["http://obj.public.com","http://obj.public.com"]'

image:
  registry: sunbirded.azurecr.io
  repository: assessment-service
  tag: release-5.2.0_RC3_1ad40fd_3

replicaCount: 1

strategy:
  maxSurge: 25%
  maxUnavailable: 25%

imagePullSecrets: ""

javaOptions: -Xmx600m

resources:
  requests:
    cpu: 100m
    memory: 100M
  limits:
    cpu: 1
    memory: 1G

network:
  port: 9003
  targetport: 9000

livenessProbe:
  failureThreshold: 2
  httpGet:
      path: /service/health
      port: 9000
  initialDelaySeconds: 15
  periodSeconds: 15
  timeoutSeconds: 5

readinessProbe:
  failureThreshold: 2
  httpGet:
      path: /service/health
      port: 9000
  initialDelaySeconds: 15
  periodSeconds: 15
  timeoutSeconds: 5