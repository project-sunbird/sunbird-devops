apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
     rollingUpdate:
        maxSurge: {{ .Values.strategy.maxsurge }}
        maxUnavailable: {{ .Values.strategy.maxunavailable }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.repository }}:{{ .Values.image_tag }}"
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTIONS
          value: -Dconfig.file=/usr/local/tomcat/config/application.conf
        envFrom:
        - configMapRef:
            name: {{ .Chart.Name }}-config
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.network.port }}
        {{- if .Values.healthcheck }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
        {{- end }}
        volumeMounts:
          - name: {{ .Chart.Name }}-config
            mountPath: /usr/local/tomcat/config/application.conf
            subPath: learning-service_application.conf
      volumes:
      - name: {{ .Chart.Name }}-config
        configMap:
          name: {{ .Chart.Name }}-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  ports:
    - name: http-{{ .Chart.Name }}
      protocol: TCP
      port: {{ .Values.network.targetport }}
  selector:
    app: {{ .Chart.Name }}