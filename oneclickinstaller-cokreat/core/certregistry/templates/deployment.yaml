---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
     rollingUpdate:
        maxSurge: {{ .Values.strategy.maxsurge }}
        maxUnavailable: {{ .Values.strategy.maxunavailable }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
{{- if .Values.imagepullsecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagepullsecrets }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTIONS
          value: {{ .Values.javaOptions | quote }}
        - name: _JAVA_OPTIONS
          value: -Dlog4j2.formatMsgNoLookups=true
        envFrom:
        - configMapRef:
            name: {{ .Chart.Name }}-config
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.port }}
        {{- if .Values.healthcheck }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
        {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: cert-registry-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  ports:
  - name: http-{{ .Chart.Name }}
    protocol: TCP
    port: {{ .Values.targetPort }}
  selector:
    app: {{ .Chart.Name }}
