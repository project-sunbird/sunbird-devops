<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.36">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>badal</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
        <entry>
          <com.sonyericsson.rebuild.RebuildCause plugin="rebuild@1.31">
            <upstreamProject>Build/KnowledgePlatform/KnowledgePlatform</upstreamProject>
            <upstreamUrl>job/Build/job/KnowledgePlatform/job/KnowledgePlatform/</upstreamUrl>
            <upstreamBuild>1</upstreamBuild>
            <upstreamCauses>
              <hudson.model.Cause_-UserIdCause>
                <userId>badal</userId>
              </hudson.model.Cause_-UserIdCause>
            </upstreamCauses>
          </com.sonyericsson.rebuild.RebuildCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>github_release_tag</name>
          <description>&lt;font color=red size=2&gt;&lt;b&gt;CAUTION: If the value is blank, latest code will be built. Specify github tag name to build from a tag.&lt;/b&gt;&lt;/font&gt;</description>
          <value>release-2.8.1</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>profile_id</name>
          <description>&lt;font color=dimgray size=2&gt;&lt;b&gt;Select the profile id. Default is platform-services which will build all artifacts.&lt;/b&gt;&lt;/font&gt;</description>
          <value>platform-services</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>github_release_tag</string>
        <string>profile_id</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.0.0">
      <buildsByBranchName>
        <entry>
          <string>release-2.8.1</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.0.0">
              <sha1>6f28bde906764970be91b90c88469af30038f70e</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>release-2.8.1</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>2</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/project-sunbird/sunbird-learning-platform.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@4.0.0">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>release-2.8.1</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/lib/jenkins/workspace/Build/KnowledgePlatform/KnowledgePlatform@script</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.9">
      <revisionStates>
        <entry>
          <string>git https://github.com/project-sunbird/sunbird-devops.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
        <entry>
          <string>git https://github.com/project-sunbird/sunbird-learning-platform.git</string>
          <hudson.scm.SCMRevisionState_-None reference="../../entry/hudson.scm.SCMRevisionState_-None"/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.15">
      <libraries>
        <org.jenkinsci.plugins.workflow.libs.LibraryRecord>
          <name>deploy-conf</name>
          <version>release-2.7.0-shared-lib</version>
          <variables class="sorted-set">
            <string>ansible_playbook_run</string>
            <string>artifact_download</string>
            <string>copy_file_to_wksp</string>
            <string>deployed_versions</string>
            <string>docker_params</string>
            <string>email_notify</string>
            <string>lp_dp_params</string>
            <string>slack_notify</string>
          </variables>
          <trusted>true</trusted>
          <changelog>true</changelog>
        </org.jenkinsci.plugins.workflow.libs.LibraryRecord>
      </libraries>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.0.0">
      <buildsByBranchName>
        <entry>
          <string>shared-lib</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.0.0">
              <sha1>a2a7abc2e0e90512c671fd04bdc7846e645927d2</sha1>
              <branches class="singleton-set">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>shared-lib</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>2</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/project-sunbird/sunbird-devops.git</string>
      </remoteUrls>
      <index>2</index>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.jacoco.JacocoBuildAction plugin="jacoco@3.0.4">
      <clazz>
        <missed>417</missed>
        <covered>0</covered>
        <initialized>true</initialized>
      </clazz>
      <method>
        <missed>2481</missed>
        <covered>0</covered>
        <initialized>true</initialized>
      </method>
      <line>
        <missed>21624</missed>
        <covered>0</covered>
        <initialized>true</initialized>
      </line>
      <complexity>
        <missed>7024</missed>
        <covered>0</covered>
        <initialized>true</initialized>
      </complexity>
      <instruction>
        <missed>115821</missed>
        <covered>0</covered>
        <initialized>true</initialized>
      </instruction>
      <branch>
        <missed>8983</missed>
        <covered>0</covered>
        <initialized>true</initialized>
      </branch>
      <maxClazz>1</maxClazz>
      <maxMethod>1</maxMethod>
      <maxLine>1</maxLine>
      <maxComplexity>1</maxComplexity>
      <maxInstruction>1</maxInstruction>
      <maxBranch>1</maxBranch>
      <failed>false</failed>
      <inclusions>
        <string></string>
      </inclusions>
      <exclusions>
        <string>**/common/**</string>
        <string>**/dto/**</string>
        <string>**/enums/**</string>
        <string>**/pipeline/**</string>
        <string>**/servlet/**</string>
        <string>**/interceptor/**</string>
        <string>**/batch/**</string>
        <string>**/models/**</string>
        <string>**/model/**</string>
        <string>**/EnrichActor*.class</string>
        <string>**/language/controller/**</string>
        <string>**/wordchain/**</string>
        <string>**/importer/**</string>
        <string>**/Base**</string>
        <string>**/ControllerUtil**</string>
        <string>**/Indowordnet**</string>
        <string>**/Import**</string>
      </exclusions>
      <thresholds>
        <minClass>0</minClass>
        <maxClass>0</maxClass>
        <minMethod>0</minMethod>
        <maxMethod>0</maxMethod>
        <minLine>0</minLine>
        <maxLine>0</maxLine>
        <minBranch>0</minBranch>
        <maxBranch>0</maxBranch>
        <minInstruction>0</minInstruction>
        <maxInstruction>0</maxInstruction>
        <minComplexity>0</minComplexity>
        <maxComplexity>0</maxComplexity>
      </thresholds>
    </hudson.plugins.jacoco.JacocoBuildAction>
    <hudson.tasks.Fingerprinter_-FingerprintAction>
      <record>
        <entry>
          <string>lp_artifacts.zip:release-2.8.1</string>
          <string>582bfbba0391cdc4ef9ab3eb5539befc</string>
        </entry>
      </record>
    </hudson.tasks.Fingerprinter_-FingerprintAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.75">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.ansicolor.ColorizedAction plugin="ansicolor@0.6.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.ColorizedAction>
    <com.sonyericsson.rebuild.RebuildAction plugin="rebuild@1.31"/>
  </actions>
  <queueId>192</queueId>
  <timestamp>1587168272831</timestamp>
  <startTime>1587168274007</startTime>
  <result>SUCCESS</result>
  <description>Artifact: release-2.8.1, Public: release-2.8.1</description>
  <duration>256422</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>@Library(&apos;deploy-conf&apos;) _
node() {
    try {
        String ANSI_GREEN = &quot;\u001B[32m&quot;
        String ANSI_NORMAL = &quot;\u001B[0m&quot;
        String ANSI_BOLD = &quot;\u001B[1m&quot;
        String ANSI_RED = &quot;\u001B[31m&quot;
        String ANSI_YELLOW = &quot;\u001B[33m&quot;
        
        ansiColor(&apos;xterm&apos;) {
            stage(&apos;Checkout&apos;) {
                cleanWs()
                if(params.github_release_tag == &quot;&quot;){
                    checkout scm
                    commit_hash = sh(script: &apos;git rev-parse --short HEAD&apos;, returnStdout: true).trim()
                    branch_name = sh(script: &apos;git name-rev --name-only HEAD | rev | cut -d &quot;/&quot; -f1| rev&apos;, returnStdout: true).trim()
                    artifact_version = branch_name + &quot;_&quot; + commit_hash
                    println(ANSI_BOLD + ANSI_YELLOW + &quot;github_release_tag not specified, using the latest commit hash: &quot; + commit_hash + ANSI_NORMAL)
                }
                else {
                    def scmVars = checkout scm
                    checkout scm: [$class: &apos;GitSCM&apos;, branches: [[name: &quot;refs/tags/${params.github_release_tag}&quot;]],  userRemoteConfigs: [[url: scmVars.GIT_URL]]]
                    artifact_version = params.github_release_tag
                    println(ANSI_BOLD + ANSI_YELLOW + &quot;github_release_tag specified, building from github_release_tag: &quot; + params.github_release_tag + ANSI_NORMAL)
                }
                echo &quot;artifact_version: &quot;+ artifact_version
            }
        }

        stage(&apos;Pre-Build&apos;) {
            sh &quot;&quot;&quot;
                java -version
                rm -rf /data/logs/*
                rm -rf /data/graphDB/*
                rm -rf /data/testgraphDB/*
                rm -rf /data/testGraphDB/*
                vim -esnc &apos;%s/dialcode.es_conn_info=&quot;localhost:9200&quot;/dialcode.es_conn_info=&quot;10.6.0.11:9200&quot;/g|:wq&apos; platform-core/unit-tests/src/test/resources/application.conf
                vim -esnc &apos;%s/search.es_conn_info=&quot;localhost:9200&quot;/search.es_conn_info=&quot;10.6.0.11:9200&quot;/g|:wq&apos; platform-core/unit-tests/src/test/resources/application.conf
                vim -esnc &apos;%s/search.es_conn_info=&quot;localhost:9200&quot;/search.es_conn_info=&quot;10.6.0.11:9200&quot;/g|:wq&apos; searchIndex-platform/module/search-api/search-manager/conf/application.conf
                &quot;&quot;&quot;
        }

        stage(&apos;Build&apos;) {
            sh &apos;mvn clean install -DskipTests -P ${profile_id} -T10&apos;
        }

        stage(&apos;Post-Build&apos;) {
            sh &quot;&quot;&quot;
                        cd searchIndex-platform/module/search-api/search-manager
                        mvn play2:dist
                     &quot;&quot;&quot;
        }

        stage(&apos;Post_Build-Action&apos;) {
            jacoco exclusionPattern: &apos;**/common/**,**/dto/**,**/enums/**,**/pipeline/**,**/servlet/**,**/interceptor/**,**/batch/**,**/models/**,**/model/**,**/EnrichActor*.class,**/language/controller/**,**/wordchain/**,**/importer/**,**/Base**,**/ControllerUtil**,**/Indowordnet**,**/Import**&apos;

        }

        stage(&apos;Archive artifacts&apos;){
            if(params.profile_id == &quot;platform-services&quot;){
                 sh &quot;&quot;&quot;
                        mkdir lp_artifacts
                        cp platform-modules/service/target/learning-service.war lp_artifacts
                        cp searchIndex-platform/module/search-api/search-manager/target/search-manager*.zip lp_artifacts
                        cp platform-tools/spikes/sync-tool/target/sync-tool*.jar lp_artifacts
                        cp platform-tools/spikes/content-tool/target/content-tool-*.jar lp_artifacts
                        zip -j lp_artifacts.zip:${artifact_version} lp_artifacts/*
                    &quot;&quot;&quot;
            }        
            else {
                 sh &quot;&quot;&quot;
                        mkdir lp_artifacts
                        cp platform-modules/service/target/learning-service.war lp_artifacts
                        cp searchIndex-platform/module/search-api/search-manager/target/search-manager*.zip lp_artifacts
                        zip -j lp_artifacts.zip:${artifact_version} lp_artifacts/*
                    &quot;&quot;&quot;
              }
                 
            archiveArtifacts artifacts: &quot;lp_artifacts.zip:${artifact_version}&quot;, fingerprint: true, onlyIfSuccessful: true
            sh &quot;&quot;&quot;echo {\\&quot;artifact_name\\&quot; : \\&quot;lp_artifacts.zip\\&quot;, \\&quot;artifact_version\\&quot; : \\&quot;${artifact_version}\\&quot;, \\&quot;node_name\\&quot; : \\&quot;${env.NODE_NAME}\\&quot;} &gt; metadata.json&quot;&quot;&quot;
            archiveArtifacts artifacts: &apos;metadata.json&apos;, onlyIfSuccessful: true
            currentBuild.result = &quot;SUCCESS&quot;
            currentBuild.description = &quot;Artifact: ${artifact_version}, Public: ${params.github_release_tag}&quot;
        }
    }
    catch (err) {
        currentBuild.result = &quot;FAILURE&quot;
        throw err
    }
    finally {
        slack_notify(currentBuild.result)
        email_notify()
    }
}
</script>
    <loadedScripts class="map">
      <entry>
        <string>Script1</string>
        <string>BUILD_NOTIFY_SLACK_CHANNEL</string>
      </entry>
      <entry>
        <string>Script2</string>
        <string>BUILD_EMAIL_GROUP</string>
      </entry>
    </loadedScripts>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>5002047971</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>588589056</long>
      </entry>
      <entry>
        <string>run</string>
        <long>20227874453</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>19351379335</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>14135765479</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>70</iota>
    <head>1:70</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/project-sunbird/sunbird-learning-platform.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>${github_release_tag}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>true</shallow>
            <noTags>false</noTags>
            <reference></reference>
            <depth>0</depth>
            <honorRefspec>false</honorRefspec>
          </hudson.plugins.git.extensions.impl.CloneOption>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Build/KnowledgePlatform/KnowledgePlatform@script</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Build/jobs/KnowledgePlatform/jobs/KnowledgePlatform/builds/2/changelog3137080411774727156.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
            <url>https://github.com/project-sunbird/sunbird-devops.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>shared-lib</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <jenkins.plugins.git.GitSCMSourceDefaults>
            <includeTags>false</includeTags>
          </jenkins.plugins.git.GitSCMSourceDefaults>
          <hudson.plugins.git.extensions.impl.BuildChooserSetting>
            <buildChooser class="jenkins.plugins.git.AbstractGitSCMSource$SpecificRevisionBuildChooser">
              <revision reference="../../../../../../../actions/hudson.plugins.git.util.BuildData[2]/buildsByBranchName/entry/hudson.plugins.git.util.Build/marked"/>
            </buildChooser>
          </hudson.plugins.git.extensions.impl.BuildChooserSetting>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Build/KnowledgePlatform/KnowledgePlatform@libs/deploy-conf</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Build/jobs/KnowledgePlatform/jobs/KnowledgePlatform/builds/2/changelog2953696663928955781.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Build/KnowledgePlatform/KnowledgePlatform</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Build/jobs/KnowledgePlatform/jobs/KnowledgePlatform/builds/2/changelog8416268540276805283.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/project-sunbird/sunbird-learning-platform.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>refs/tags/release-2.8.1</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Build/KnowledgePlatform/KnowledgePlatform</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Build/jobs/KnowledgePlatform/jobs/KnowledgePlatform/builds/2/changelog3357524895619815168.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>