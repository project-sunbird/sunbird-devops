<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.36">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>absolute_job_path</name>
          <description>&lt;font color=dimgray size=2&gt;&lt;b&gt;Do not change this value! The metadata.json will be copied from this job.&lt;/b&gt;&lt;/font&gt;</description>
          <value>ArtifactUpload/dev/DataPipeline/CoreDataProducts</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>artifact_source</name>
          <description>&lt;font color=dimgray size=2&gt;&lt;b&gt;
ArtifactRepo - Download the artifact from azure blob, JenkinsJob - Use the atrifact from Jenkins job.&lt;/b&gt;&lt;/font&gt;</description>
          <value>JenkinsJob</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>build_number</name>
          <description></description>
          <value>lastSuccessfulBuild</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>artifact_version</name>
          <description></description>
          <value></value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>private_branch</name>
          <description></description>
          <value>release-2.8.0</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>branch_or_tag</name>
          <description></description>
          <value>release-2.8.0</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>module</name>
          <description>&lt;font color=dimgray size=2&gt;&lt;b&gt;It will deploy only lpa_core_dp_artifacts(batch-models &amp; job-manager) jar.&lt;/b&gt;&lt;/font&gt;</description>
          <value>dataproducts</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>absolute_job_path</string>
        <string>artifact_source</string>
        <string>build_number</string>
        <string>artifact_version</string>
        <string>private_branch</string>
        <string>branch_or_tag</string>
        <string>module</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>badal</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.0.0">
      <buildsByBranchName>
        <entry>
          <string>origin/release-2.8.0</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.0.0">
              <sha1>50811ef954b1be639671720158fbaabe26940470</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/release-2.8.0</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/project-sunbird/sunbird-data-pipeline.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@4.0.0">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>origin/release-2.8.0</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/lib/jenkins/workspace/Deploy/dev/DataPipeline/CoreDataProducts@script</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.9">
      <revisionStates>
        <entry>
          <string>git https://github.com/project-sunbird/sunbird-devops.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
        <entry>
          <string>git https://github.com/badaltechiepi/ansible_repo.git</string>
          <hudson.scm.SCMRevisionState_-None reference="../../entry/hudson.scm.SCMRevisionState_-None"/>
        </entry>
        <entry>
          <string>git https://github.com/project-sunbird/sunbird-data-pipeline.git</string>
          <hudson.scm.SCMRevisionState_-None reference="../../entry/hudson.scm.SCMRevisionState_-None"/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.15">
      <libraries>
        <org.jenkinsci.plugins.workflow.libs.LibraryRecord>
          <name>deploy-conf</name>
          <version>release-2.7.0-shared-lib</version>
          <variables class="sorted-set">
            <string>ansible_playbook_run</string>
            <string>artifact_download</string>
            <string>copy_file_to_wksp</string>
            <string>deployed_versions</string>
            <string>docker_params</string>
            <string>email_notify</string>
            <string>lp_dp_params</string>
            <string>slack_notify</string>
          </variables>
          <trusted>true</trusted>
          <changelog>true</changelog>
        </org.jenkinsci.plugins.workflow.libs.LibraryRecord>
      </libraries>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.0.0">
      <buildsByBranchName>
        <entry>
          <string>shared-lib</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.0.0">
              <sha1>a2a7abc2e0e90512c671fd04bdc7846e645927d2</sha1>
              <branches class="singleton-set">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>shared-lib</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/project-sunbird/sunbird-devops.git</string>
      </remoteUrls>
      <index>2</index>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.75">
      <env class="tree-map">
        <entry>
          <string>private_repo_branch</string>
          <string>release-2.8.0</string>
        </entry>
      </env>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.copyartifact.CopyArtifact_-EnvAction plugin="copyartifact@1.43"/>
    <hudson.tasks.Fingerprinter_-FingerprintAction>
      <record>
        <entry>
          <string>metadata.json</string>
          <string>a57e0b83fee5e53671f1ca586fb2bd80</string>
        </entry>
        <entry>
          <string>lpa_core_dp_artifacts.zip:release-2.8.0_8a244a1</string>
          <string>fb03ff2fab166150982229dccf8b88b9</string>
        </entry>
      </record>
    </hudson.tasks.Fingerprinter_-FingerprintAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.0.0">
      <buildsByBranchName>
        <entry>
          <string>origin/release-2.8.0</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.0.0">
              <sha1>f6d6050e39ab0106a30751aa1f75a7daa1748a2d</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/release-2.8.0</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/badaltechiepi/ansible_repo.git</string>
      </remoteUrls>
      <index>3</index>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.ansicolor.ColorizedAction plugin="ansicolor@0.6.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.ColorizedAction>
    <com.sonyericsson.rebuild.RebuildAction plugin="rebuild@1.31"/>
  </actions>
  <queueId>4156</queueId>
  <timestamp>1590059698517</timestamp>
  <startTime>1590059698528</startTime>
  <result>SUCCESS</result>
  <description>Artifact: release-2.8.0_8a244a1, Private: release-2.8.0, Public: release-2.8.0</description>
  <duration>72427</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>@Library(&apos;deploy-conf&apos;) _
node() {
    try {
        String ANSI_GREEN = &quot;\u001B[32m&quot;
        String ANSI_NORMAL = &quot;\u001B[0m&quot;
        String ANSI_BOLD = &quot;\u001B[1m&quot;
        String ANSI_RED = &quot;\u001B[31m&quot;
        String ANSI_YELLOW = &quot;\u001B[33m&quot;

        stage(&apos;checkout public repo&apos;) {
            cleanWs()
            checkout scm
        }
       
            ansiColor(&apos;xterm&apos;) {
                 values = lp_dp_params()
                stage(&apos;get artifact&apos;) {
                    currentWs = sh(returnStdout: true, script: &apos;pwd&apos;).trim()
                    artifact = values.artifact_name + &quot;:&quot; + values.artifact_version
                    values.put(&apos;currentWs&apos;, currentWs)
                    values.put(&apos;artifact&apos;, artifact)
                    artifact_download(values)
                }
                stage(&apos;deploy artifact&apos;){
                    sh &quot;&quot;&quot;
                       unzip ${artifact}
                      
                       if [ -f batch-models-2.0.jar ]; then
                            echo &quot;batch-models-2.0.jar exist&quot;
                            mv batch-models-2.0.jar ansible
                       fi
                       if [ -f job-manager-2.0.jar ]; then
                            echo &quot;job-manager-2.0.jar exist&quot;
                            mv job-manager-2.0.jar ansible
                       fi
                       if [ -f analytics-framework-2.0.jar ]; then
                            echo &quot;analytics-framework-2.0.jar exist&quot;
                            mv analytics-framework-2.0.jar ansible
                       fi
                    &quot;&quot;&quot;
                    ansiblePlaybook = &quot;${currentWs}/ansible/lpa_data-products_deploy.yml&quot;
                    ansibleExtraArgs = &quot; --tags ${params.module} --vault-password-file /var/lib/jenkins/secrets/vault-pass&quot;
                    values.put(&apos;ansiblePlaybook&apos;, ansiblePlaybook)
                    values.put(&apos;ansibleExtraArgs&apos;, ansibleExtraArgs)
                    println values
                    ansible_playbook_run(values)
                    currentBuild.result = &quot;SUCCESS&quot;
                    currentBuild.description = &quot;Artifact: ${values.artifact_version}, Private: ${params.private_branch}, Public: ${params.branch_or_tag}&quot;
                    archiveArtifacts artifacts: &quot;${artifact}&quot;, fingerprint: true, onlyIfSuccessful: true
                    archiveArtifacts artifacts: &apos;metadata.json&apos;, onlyIfSuccessful: true
                }
            }
    }
    catch (err) {
        currentBuild.result = &quot;FAILURE&quot;
        throw err
    }
    finally {
        slack_notify(currentBuild.result)
        email_notify()
    }
}
</script>
    <loadedScripts class="map">
      <entry>
        <string>Script1</string>
        <string>DEV_NOTIFY_SLACK_CHANNEL</string>
      </entry>
      <entry>
        <string>Script2</string>
        <string>DEV_EMAIL_GROUP</string>
      </entry>
    </loadedScripts>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>1283601705</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>366275728</long>
      </entry>
      <entry>
        <string>run</string>
        <long>2409292138</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>21796612888</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>116117216</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>89</iota>
    <head>1:89</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/project-sunbird/sunbird-data-pipeline.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>${branch_or_tag}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>true</shallow>
            <noTags>false</noTags>
            <reference></reference>
            <depth>0</depth>
            <honorRefspec>false</honorRefspec>
          </hudson.plugins.git.extensions.impl.CloneOption>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Deploy/dev/DataPipeline/CoreDataProducts@script</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Deploy/jobs/dev/jobs/DataPipeline/jobs/CoreDataProducts/builds/1/changelog4105324527131992287.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
            <url>https://github.com/project-sunbird/sunbird-devops.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>shared-lib</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <jenkins.plugins.git.GitSCMSourceDefaults>
            <includeTags>false</includeTags>
          </jenkins.plugins.git.GitSCMSourceDefaults>
          <hudson.plugins.git.extensions.impl.BuildChooserSetting>
            <buildChooser class="jenkins.plugins.git.AbstractGitSCMSource$SpecificRevisionBuildChooser">
              <revision reference="../../../../../../../actions/hudson.plugins.git.util.BuildData[2]/buildsByBranchName/entry/hudson.plugins.git.util.Build/marked"/>
            </buildChooser>
          </hudson.plugins.git.extensions.impl.BuildChooserSetting>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Deploy/dev/DataPipeline/CoreDataProducts@libs/deploy-conf</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Deploy/jobs/dev/jobs/DataPipeline/jobs/CoreDataProducts/builds/1/changelog4574852175990571316.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Deploy/dev/DataPipeline/CoreDataProducts</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Deploy/jobs/dev/jobs/DataPipeline/jobs/CoreDataProducts/builds/1/changelog6562677081399970438.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/badaltechiepi/ansible_repo.git</url>
            <credentialsId>private-repo-creds</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>release-2.8.0</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>true</shallow>
            <noTags>true</noTags>
            <reference></reference>
            <depth>1</depth>
            <honorRefspec>false</honorRefspec>
          </hudson.plugins.git.extensions.impl.CloneOption>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Deploy/dev/DataPipeline/CoreDataProducts/private</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Deploy/jobs/dev/jobs/DataPipeline/jobs/CoreDataProducts/builds/1/changelog861948553446738004.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>