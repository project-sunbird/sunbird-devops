<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.36">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>badal</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
        <entry>
          <com.sonyericsson.rebuild.RebuildCause plugin="rebuild@1.31">
            <upstreamProject>Deploy/dev/Core/PlayerCDN</upstreamProject>
            <upstreamUrl>job/Deploy/job/dev/job/Core/job/PlayerCDN/</upstreamUrl>
            <upstreamBuild>1</upstreamBuild>
            <upstreamCauses>
              <hudson.model.Cause_-UserIdCause>
                <userId>badal</userId>
              </hudson.model.Cause_-UserIdCause>
            </upstreamCauses>
          </com.sonyericsson.rebuild.RebuildCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>absolute_job_path</name>
          <description>&lt;font color=dimgray size=2&gt;&lt;b&gt;Do not change this value! The metadata.json will be copied from this job.&lt;/b&gt;&lt;/font&gt;</description>
          <value>ArtifactUpload/dev/Core/Player</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>image_tag</name>
          <description>&lt;font color=red size=2&gt;&lt;b&gt;CAUTION: If the value is blank, image tag will be taken from the latest metadata.json.&lt;/b&gt;&lt;/font&gt;</description>
          <value></value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>private_branch</name>
          <description></description>
          <value>release-2.8.0</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>branch_or_tag</name>
          <description></description>
          <value>release-2.8.0</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>cdn_enable</name>
          <description>&lt;font color=dimgray size=2&gt;&lt;b&gt;Select true to enable CDN build, false to disable CDN build&lt;/b&gt;&lt;/font&gt;</description>
          <value>false</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>absolute_job_path</string>
        <string>image_tag</string>
        <string>private_branch</string>
        <string>branch_or_tag</string>
        <string>cdn_enable</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.0.0">
      <buildsByBranchName>
        <entry>
          <string>origin/release-2.8.0</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.0.0">
              <sha1>a186a72edc7ce93acf4973716caca606a74e8dc9</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/release-2.8.0</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>2</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/project-sunbird/sunbird-devops.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@4.0.0">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>origin/release-2.8.0</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/lib/jenkins/workspace/Deploy/dev/Core/PlayerCDN@script</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.9">
      <revisionStates>
        <entry>
          <string>git https://github.com/project-sunbird/sunbird-devops.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.15">
      <libraries>
        <org.jenkinsci.plugins.workflow.libs.LibraryRecord>
          <name>deploy-conf</name>
          <version>release-2.7.0-shared-lib</version>
          <variables class="sorted-set">
            <string>ansible_playbook_run</string>
            <string>artifact_download</string>
            <string>copy_file_to_wksp</string>
            <string>deployed_versions</string>
            <string>docker_params</string>
            <string>email_notify</string>
            <string>lp_dp_params</string>
            <string>slack_notify</string>
          </variables>
          <trusted>true</trusted>
          <changelog>true</changelog>
        </org.jenkinsci.plugins.workflow.libs.LibraryRecord>
      </libraries>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.0.0">
      <buildsByBranchName>
        <entry>
          <string>origin/release-2.8.0</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.0.0">
              <sha1>9d5f488664a2a61f4b50bb434e23d817e082786c</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/release-2.8.0</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.0.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>shared-lib</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.0.0">
              <sha1>a2a7abc2e0e90512c671fd04bdc7846e645927d2</sha1>
              <branches class="singleton-set">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>shared-lib</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>2</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry[2]/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/project-sunbird/sunbird-devops.git</string>
      </remoteUrls>
      <index>2</index>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.copyartifact.CopyArtifact_-EnvAction plugin="copyartifact@1.43"/>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.75">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.ansicolor.ColorizedAction plugin="ansicolor@0.6.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.ColorizedAction>
    <com.sonyericsson.rebuild.RebuildAction plugin="rebuild@1.31"/>
  </actions>
  <queueId>1346</queueId>
  <timestamp>1588052617602</timestamp>
  <startTime>1588052617614</startTime>
  <result>SUCCESS</result>
  <description>ImageTag: release-2.8.0_3, PrivateRepo: release-2.8.0, BranchOrTag: release-2.8.0</description>
  <duration>15573</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>@Library(&apos;deploy-conf&apos;) _
node() {
    try {
     timestamps {
        ansiColor(&apos;xterm&apos;) {
            String ANSI_GREEN = &quot;\u001B[32m&quot;
            String ANSI_NORMAL = &quot;\u001B[0m&quot;
            String ANSI_BOLD = &quot;\u001B[1m&quot;
            String ANSI_RED = &quot;\u001B[31m&quot;
	

            if (params.cdn_enable == &quot;true&quot;) {
                stage(&apos;Initialize repos&apos;) {
//                    cleanWs()
                    checkout scm
                    values = docker_params()
                    currentWs = sh(returnStdout: true, script: &apos;pwd&apos;).trim()
                    ansiblePlaybook = &quot;$currentWs/ansible/assets-upload.yml&quot;
                    ansibleExtraArgs = &quot;--syntax-check&quot;
                    values.put(&apos;currentWs&apos;, currentWs)
                    values.put(&apos;ansiblePlaybook&apos;, ansiblePlaybook)
                    values.put(&apos;ansibleExtraArgs&apos;, ansibleExtraArgs)
                    ansible_playbook_run(values)
                }

                stage(&apos;Deploy CDN&apos;) {
                    def filePath = &quot;$WORKSPACE/ansible/inventory/env/common.yml&quot;
                    cdnUrl = sh(script: &quot;&quot;&quot;grep sunbird_portal_cdn_url $filePath | grep -v &apos;^#&apos; | grep --only-matching --perl-regexp &apos;http(s?):\\/\\/[^ \&quot;\\(\\)\\&lt;\\&gt;]*&apos; || true&quot;&quot;&quot;, returnStdout: true).trim()
                    if (cdnUrl == &apos;&apos;) {
                        println(ANSI_BOLD + ANSI_RED + &quot;Uh oh! cdn_enable variable is true, But no sunbird_portal_cdn_url in $filePath&quot; + ANSI_NORMAL)
                        error &apos;Error: sunbird_portal_cdn_url is not set&apos;
                    }
                    else {
                        println cdnUrl
                        commitHash = sh(script: &quot;jq -r &apos;.commit_hash&apos; metadata.json&quot;, returnStdout: true).trim()
                        dir(&apos;sunbird-portal&apos;) {
                            checkout changelog: false, poll: false, scm: [$class: &apos;GitSCM&apos;, branches: [[name: commitHash]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: &apos;https://github.com/Sunbird-Ed/SunbirdEd-portal.git&apos;]]]
                            sh &quot;./build-cdn.sh ${cdnUrl} ${commitHash}&quot;
                        }
                        ansibleExtraArgs = &quot;--extra-vars assets=$currentWs/sunbird-portal/src/app/dist --extra-vars cdn_file_path=$currentWs/sunbird-portal/src/app/dist/index_cdn.ejs --vault-password-file /var/lib/jenkins/secrets/vault-pass&quot;
                        values.put(&apos;ansibleExtraArgs&apos;, ansibleExtraArgs)
                        ansible_playbook_run(values)
                        currentBuild.result = &apos;SUCCESS&apos;
                        archiveArtifacts &apos;metadata.json, sunbird-portal/src/app/dist/index_cdn.ejs&apos;
                        currentBuild.description = &quot;Image: &quot; + values.image_tag + &quot;, CDNHash: &quot; + commitHash + &quot;Private: ${params.private_branch}, Public: ${params.branch_or_tag}&quot;
                    }
                }
            }
            else {
                copyArtifacts projectName: params.absolute_job_path, flatten: true
                archiveArtifacts &apos;metadata.json&apos;
                image_tag = sh(returnStdout: true, script: &apos;jq -r .image_tag metadata.json&apos;).trim()
                currentBuild.description = &quot;ImageTag: ${image_tag}, PrivateRepo: ${params.private_branch}, BranchOrTag: ${params.branch_or_tag}&quot;
            }
        }
    }
}
    catch (err) {
        currentBuild.result = &quot;FAILURE&quot;
        throw err
    }
    finally {
        slack_notify(currentBuild.result)
        email_notify()
    }
}
</script>
    <loadedScripts class="map">
      <entry>
        <string>Script1</string>
        <string>DEV_NOTIFY_SLACK_CHANNEL</string>
      </entry>
      <entry>
        <string>Script2</string>
        <string>DEV_EMAIL_GROUP</string>
      </entry>
    </loadedScripts>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>484062583</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>901155020</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1225999953</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>7356221055</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>38298931</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>40</iota>
    <head>1:40</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/project-sunbird/sunbird-devops.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>${branch_or_tag}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>true</shallow>
            <noTags>false</noTags>
            <reference></reference>
            <depth>0</depth>
            <honorRefspec>false</honorRefspec>
          </hudson.plugins.git.extensions.impl.CloneOption>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Deploy/dev/Core/PlayerCDN@script</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Deploy/jobs/dev/jobs/Core/jobs/PlayerCDN/builds/2/changelog5509182549517687212.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.0.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
            <url>https://github.com/project-sunbird/sunbird-devops.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>shared-lib</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <jenkins.plugins.git.GitSCMSourceDefaults>
            <includeTags>false</includeTags>
          </jenkins.plugins.git.GitSCMSourceDefaults>
          <hudson.plugins.git.extensions.impl.BuildChooserSetting>
            <buildChooser class="jenkins.plugins.git.AbstractGitSCMSource$SpecificRevisionBuildChooser">
              <revision reference="../../../../../../../actions/hudson.plugins.git.util.BuildData[2]/buildsByBranchName/entry[2]/hudson.plugins.git.util.Build/marked"/>
            </buildChooser>
          </hudson.plugins.git.extensions.impl.BuildChooserSetting>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Deploy/dev/Core/PlayerCDN@libs/deploy-conf</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Deploy/jobs/dev/jobs/Core/jobs/PlayerCDN/builds/2/changelog335550769595591473.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>