#Logging   (mandatory fields if logging is required)
vault_google_client_id:       #google oauth client id 
vault_google_client_secret:    #google oauth client secret
vault_cookie_secret:           #google oauth cookie secret
kibana_access_domain_list:     #kibana access for all the users with this domain
kibana_access_mail_list:       #kibana access for the mentioned users


#Aplication and Monitoring 
mail_server_host: #mail server host ex: smtp.sendgrid.net
mail_server_port: #mail server host ex: 587
mail_server_username: #username
mail_server_password: #password

#Monitoring (mandatory fields if monitoring is required)
vault_postgres_exporter_password: #password for the postgres exporter password
grafana_admin_password:  #grafana admin password
backup_storage_name: #storage_name
backup_storage_key:  #backup storage key 
monitor_alerts_slack_url: #slack webhook url 
monitor_alerts_slack_channel: #slack channel for alerts
alerts_mailing_list:  #list of user mail id's who need alerts.
kong__test_jwt:  #kong test jwt token 
vault_proxy_prometheus_admin_creds: 


## Keycloak (auth server) login details
sunbird_env:   #ekstep env which we connecting 

##APP
ekstep_api_base_url:


#List of application and database hosts
elasticsearch_host:
cassandra_host:
postgres_master_host:
postgres_slave_host:
swarm_manager_host:
swarm_node_host:
keycloak_host:
log_es_host:

#es config:
es_etc_discovery_zen_minimum_master_nodes:
es_etc_node_datagroups['es']:
es_api_host: "{{elasticsearch_host if elasticsearch_host else database_host}}"
backup_storage_name:
backup_storage_key:
es_heap_size: 1500m
es_etc_cluster_name: 
es_etc_discovery_zen_minimum_master_nodes: 2
es_snapshot_host: "{{ groups['es'][0] }}"
es_restore_host: "{{ groups['es'][0] }}"
snapshot_base_path: application


# Consumers to be on-boarded
kong_consumers:
  - username: api-management-test-user
    groups: "{{ kong_all_consumer_groups }}"
    state: present
  - username: add-any-consumer-to-be-deleted
    state: absent
  - username: player
    groups: "{{ kong_all_consumer_groups }}"
    state: present
    rate_limits: "{{ premium_consumer_rate_limits }}"
  - username: mobile_admin
    groups: "{{ mobile_admin_groups }}"
    print_credentials: true
    state: present
  - username: mobile_app
    groups: "{{ mobile_app_groups }}"
    state: present
  - username: mobile_device
    groups: "{{ mobile_device_groups }}"
    state: present


  