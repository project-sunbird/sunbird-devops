---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    role: alert-rules
    app: {{ .Values.prometheus_rule_selector_app }}
    release: {{ .Values.prometheus_rule_selector_release }}
  name: {{ .Values.fullnameOverride }}-secor-lag-rules
  namespace: {{ .Values.namespace }}
spec:
  groups:
  - name: alertrules.kafkalag
    rules:
    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.assess.raw group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.assess.raw", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_assess_raw_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.assess.raw consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.assess.raw
        lag: {{`({{ humanize $value }})`}}
        job_id: assess-raw-events-backup
        alertname: SecorJobsLag
    
    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.denorm.backup group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.denorm.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_denorm_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.denorm.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.denorm.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: denorm-events-backup
        alertname: SecorJobsLag
    
    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.derived.unique.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.derived.unique.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_derived_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.derived.unique.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.derived.unique.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: derived-telemetry-backup
        alertname: SecorJobsLag
     
    - alert: secor {{ .Values.kafka_topic_prefix }}.extractor.duplicate.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.extractor.duplicate.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_extractor_duplicate_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.extractor.duplicate.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.extractor.duplicate.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: extractor.duplicate.backup
        alertname: SecorJobsLag
    
    - alert: secor {{ .Values.kafka_topic_prefix }}.extractor.failed.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.extractor.failed.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_extractor_failed_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.extractor.failed.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.extractor.failed.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: extractor.failed.backup
        alertname: SecorJobsLag
    
    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.failed.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.failed.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_failed_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.failed.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.failed.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: failed-telemetry-backup
        alertname: SecorJobsLag
    
    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.raw.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.raw.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_raw_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.raw.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.raw.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: raw-telemetry-backup
        alertname: SecorJobsLag
    
    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.duplicate.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.duplicate.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_duplicate_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.duplicate.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.duplicate.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: telemetry.duplicate.backup
        alertname: SecorJobsLag
    
    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.unique.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.unique.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_unique_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.unique.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.unique.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: unique-telemetry-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.events.device.profile.backup group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.events.device.profile.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_events_deviceprofile_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.events.device.profile.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.events.device.profile.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: device-profile-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.failed.learning.events.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.failed.learning.events.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_learning_failed_events_backup }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.failed.learning.events.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.failed.learning.events.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: learning-failed-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.learning.graph.events.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.learning.graph.events.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_graph_events_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.learning.graph.events.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.learning.graph.events.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: learning-events-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.assess.events.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.assess.events.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_assess_backup }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.assess consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.assess.events.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: assess-events-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.ingestion.events.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.ingestion.events.backup", job="processing-kafka-exporter"}) > {{ .Values.kafka_telemetry_ingestion_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.ingestion.events.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.ingestion.events.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: ingestion-cluster-telemetry-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.events.device.profile.backup group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.events.device.profile.backup", job="ingestion-kafka-exporter"}) > {{ .Values.kafka_events_deviceprofile_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.events.device.profile.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.events.device.profile.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: device-profile-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.failed.learning.events.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.failed.learning.events.backup", job="ingestion-kafka-exporter"}) > {{ .Values.kafka_learning_failed_events_backup }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.failed.learning.events.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.failed.learning.events.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: learning-failed-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.learning.graph.events.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.learning.graph.events.backup", job="ingestion-kafka-exporter"}) > {{ .Values.kafka_graph_events_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.learning.graph.events.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.learning.graph.events.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: learning-events-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.assess.events.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.assess.events.backup", job="ingestion-kafka-exporter"}) > {{ .Values.kafka_telemetry_assess_backup }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.assess consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.assess.events.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: assess-events-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.telemetry.ingestion.events.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.telemetry.ingestion.events.backup", job="ingestion-kafka-exporter"}) > {{ .Values.kafka_telemetry_ingestion_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.telemetry.ingestion.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.telemetry.ingestion.events.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: ingestion-cluster-telemetry-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.coursebatch.job.request.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.coursebatch.job.request.backup", job="ingestion-kafka-exporter"}) > {{ .Values.content_consumption_events_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.coursebatch.job.request.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.coursebatch.job.request.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: content-consumption-events-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.summary.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.summary.backup", job="processing-kafka-exporter"}) > {{ .Values.summary_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.summary.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.summary.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: derived-denorm-events-backup
        alertname: SecorJobsLag

    - alert: secor {{ .Values.kafka_topic_prefix }}.summary.channel.backup consumer group lag
      expr: sum without(partition) (kafka_consumergroupzookeeper_lag_zookeeper{consumergroup="{{ .Values.kafka_topic_prefix }}.summary.channel.backup", job="processing-kafka-exporter"}) > {{ .Values.summary_channel_backup_threshold }}
      for: 30m
      labels:
        severity: critical
        module: dp_lag
        alerttype: lag
      annotations:
        message: {{ .Values.kafka_topic_prefix }}.summary.channel.backup consumer group lag is above threshold.
        summary: secor consumer group lag is more for {{ .Values.kafka_topic_prefix }}.summary.channel.backup
        lag: {{`({{ humanize $value }})`}}
        job_id: channel-summary-backup
        alertname: SecorJobsLag
