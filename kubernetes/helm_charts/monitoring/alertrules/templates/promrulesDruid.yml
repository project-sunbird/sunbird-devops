---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    role: alert-rules
    app: {{ .Values.prometheus_rule_selector_app }}
    release: {{ .Values.prometheus_rule_selector_release }}
  name: {{ .Values.fullnameOverride }}-druid-rules
  namespace: {{ .Values.namespace }}
spec:
  groups:
  - name: alertrules.process
    rules:
    {{- if .Values.raw_druid_datasource }}
    ## druid segment unavailable count alert
    {{ range $key := .Values.raw_druid_datasource }}
    - alert: druid_segment_unavailable_count
      expr: druid_segment_unavailable_count{exported_job={{ . | quote }}} > 0
      for: 5m
      labels:
        severity: critical
        module: dp_lag
      annotations:
        message: The druid segment unavailable count for the datasource {{ . }} is greater than 0.
        lag: {{`({{ humanize $value }})`}}
        job_id: Druid
        alertname: DruidSegmentUnavailable
    {{- end }}
     ### kafka druid ingest lag
    {{ range $key := .Values.raw_druid_datasource }}
    - alert: druid_ingest_kafka_lag
      expr: druid_ingest_kafka_lag{exported_job={{ . | quote }}} > {{ $.Values.druid_raw_ingestion_threshold }}
      for: 5m
      labels:
        severity: critical
        module: dp_lag
      annotations:
        message: The druid ingestion lag for datasource {{ . }} is greater than threshold {{ $.Values.druid_raw_ingestion_threshold | int }}
        lag: {{`({{ humanize $value }})`}}
        job_id: Druid
        alertname: DruidKafkaIngestionLag
    {{- end }}
     ### druid ingest handoff failed alert rules
    {{ range $key := .Values.raw_druid_datasource }}
    - alert: druid_ingest_handoff_failed
      expr: druid_ingest_handoff_failed{exported_job={{ . | quote }}} > 0
      for: 5m
      labels:
        severity: critical
        module: dp_lag
      annotations:
        message: The druid ingest handoff failed count for datasource {{ . }} is greater than 0.
        lag: {{`({{ humanize $value }})`}}
        job_id: Druid
        alertname: DruidIngestHandoffFailed
    {{- end }}
    {{- end }}

    {{- if .Values.rollup_druid_datasource }}
    ## druid segment unavailable count alert
    {{ range $key := .Values.rollup_druid_datasource }}
    - alert: druid_segment_unavailable_count
      expr: druid_segment_unavailable_count{exported_job={{ . | quote }}} > 0
      for: 5m
      labels:
        severity: critical
        module: dp_lag
      annotations:
        message: The druid segment unavailable count for the datasource {{ . }} is greater than 0.
        lag: {{`({{ humanize $value }})`}}
        job_id: Druid
        alertname: DruidSegmentUnavailable
    {{- end }}
     ### kafka druid ingest lag
    {{ range $key := .Values.rollup_druid_datasource }}
    - alert: druid_ingest_kafka_lag
      expr: druid_ingest_kafka_lag{exported_job={{ . | quote }}} > {{ $.Values.druid_rollup_ingestion_threshold }}
      for: 5m
      labels:
        severity: critical
        module: dp_lag
      annotations:
        message: The druid ingestion lag for datasource {{ . }} is greater than {{ $.Values.druid_rollup_ingestion_threshold | int }}
        lag: {{`({{ humanize $value }})`}}
        job_id: Druid
        alertname: DruidKafkaIngestionLag
    {{- end }}
     ### druid ingest handoff failed alert rules
    {{ range $key := .Values.rollup_druid_datasource }}
    - alert: druid_ingest_handoff_failed
      expr: druid_ingest_handoff_failed{exported_job={{ . | quote }}} > 0
      for: 5m
      labels:
        severity: critical
        module: dp_lag
      annotations:
        message: The druid ingest handoff failed count for datasource {{ . }} is greater than 0.
        lag: {{`({{ humanize $value }})`}}
        job_id: Druid
        alertname: DruidIngestHandoffFailed
    {{- end }}
    {{- end }} 
