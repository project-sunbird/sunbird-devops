---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
     rollingUpdate:
        maxSurge: {{ .Values.strategy.maxsurge }}
        maxUnavailable: {{ .Values.strategy.maxunavailable }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
{{- if .Values.imagepullsecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagepullsecrets }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.dockerhub }}/{{ .Values.repository }}:{{ .Values.image_tag }}"
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTIONS
          value: {{ .Values.env.javaoptions | quote }}
        - name: _JAVA_OPTIONS
          value: -Dlog4j2.formatMsgNoLookups=true
        envFrom:
        - configMapRef:
            name: {{ .Chart.Name }}-config
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.network.port }}
        {{- if .Values.healthcheck }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: {{ .Chart.Name }}-xml-config
          mountPath: /home/sunbird/service-1.0.0-SNAPSHOT/config/logback.xml
          subPath: cert-registry_logback.xml
{{- if .Values.certregistry_opa_enabled }}
      - args:
        - envoy
        - --config-path
        - /config/envoy-config.yaml
        env:
        - name: ENVOY_UID
          value: "1111"
        image: envoyproxy/envoy:v1.20.0
        imagePullPolicy: IfNotPresent
        name: envoy
        {{- if .Values.envoy_healthcheck }}
        livenessProbe:
{{ toYaml .Values.envoy_livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.envoy_readinessProbe | indent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.envoy_resources | indent 10 }}
        volumeMounts:
        - mountPath: /config
          name: envoy-config
          readOnly: true
      - args:
        - run
        - --server
        - /bundle
        - --addr=localhost:8181
        - --diagnostic-addr=0.0.0.0:8282
        - --set=plugins.envoy_ext_authz_grpc.addr=:9191
        - --set=plugins.envoy_ext_authz_grpc.path=main/allow
        - --set=decision_logs.plugin=print_decision_logs_on_failure
        - --set=plugins.print_decision_logs_on_failure.stdout=true
        - --log-level=error
        - --ignore=.*
        image: sunbird/opa:0.34.2-envoy
        imagePullPolicy: IfNotPresent
        name: opa
        {{- if .Values.opa_healthcheck }}
        livenessProbe:
{{ toYaml .Values.opa_livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.opa_readinessProbe | indent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.opa_resources | indent 10 }}
        volumeMounts:
        - mountPath: /bundle
          name: opa-policy
          readOnly: true
      initContainers:
      - args:
        - -p
        - "9999"
        - -u
        - "1111"
        - -w
        - "8282,10000"
        image: openpolicyagent/proxy_init:v5
        imagePullPolicy: IfNotPresent
        name: proxy-init
        resources:
{{ toYaml .Values.initcontainer_resources | indent 10 }}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsNonRoot: false
          runAsUser: 0
{{- end }}
      volumes:
      - name: {{ .Chart.Name }}-xml-config
        configMap:
          name: {{ .Chart.Name }}-xml-config
{{- if .Values.certregistry_opa_enabled }}
      - name: envoy-config
        configMap:
          name: {{ .Chart.Name }}-envoy-config
      - name: opa-policy
        configMap:
          name: {{ .Chart.Name }}-opa-policy
{{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: cert-registry-service
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  ports:
  - name: http-{{ .Chart.Name }}
    protocol: TCP
    port: {{ .Values.network.targetport }}
{{- if .Values.certregistry_opa_enabled }}
  - name: opa-metrics
    port: 8181
    protocol: TCP
    targetPort: 8181
  - name: envoy-metrics
    port: 10000
    protocol: TCP
    targetPort: 10000
{{- end }}
  selector:
    app: {{ .Chart.Name }}