# This name is used to define the 
# additionalScrapeConfigs name
# {{ fullnameOverride }}-prometheus-scrape-confg
# If you change this, make sure to update the value in 
# additionalScrapeConfigs/defautls/main.yaml
#}

fullnameOverride: "sunbird-monitoring"

scrapeconfig:
  - job_name: 'Druid'
    metrics_path: /metrics/druid
    static_configs:
      - targets: ["{{analyticsapi_ip}}:9000"]
        labels:
          "service_name": "druid"

  - job_name: 'vm-node-exporter'
    static_configs:
      - targets: ["{{ groups['node-exporter'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:9100') | list | join("\", \"") }}"]

  - job_name: 'process-exporter'
    metrics_path: /metrics
    static_configs:
      - targets: ["{{ groups['process-exporter'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:1111' ) | list | join("\", \"") }}"]

  - job_name: 'cassandra-exporter'
    metrics_path: /metrics
    static_configs:
      - targets:  ["{{ groups['cassandra'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:8080' ) | list | join("\", \"") }}"] 
      
  - job_name: 'helm-exporter'
    static_configs:
      - targets: ['helm-exporter.monitoring.svc.cluster.local:9571']
  # Istio metrics
  - job_name: istio-mesh
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - istio-system
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      separator: ;
      regex: istio-telemetry;prometheus
      replacement: $1
      action: keep
  - job_name: envoy-stats
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /stats/prometheus
    scheme: http
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_container_port_name]
      separator: ;
      regex: .*-envoy-prom
      replacement: $1
      action: keep
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      separator: ;
      regex: ([^:]+)(?::\d+)?;(\d+)
      target_label: __address__
      replacement: $1:15090
      action: replace
    - separator: ;
      regex: __meta_kubernetes_pod_label_(.+)
      replacement: $1
      action: labelmap
    - source_labels: [__meta_kubernetes_namespace]
      separator: ;
      regex: (.*)
      target_label: namespace
      replacement: $1
      action: replace
    - source_labels: [__meta_kubernetes_pod_name]
      separator: ;
      regex: (.*)
      target_label: pod_name
      replacement: $1
      action: replace
  - job_name: istio-policy
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - istio-system
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      separator: ;
      regex: istio-policy;http-monitoring
      replacement: $1
      action: keep
  - job_name: istio-telemetry
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - istio-system
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      separator: ;
      regex: istio-telemetry;http-monitoring
      replacement: $1
      action: keep
  - job_name: pilot
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - istio-system
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      separator: ;
      regex: istio-pilot;http-monitoring
      replacement: $1
      action: keep
  - job_name: galley
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - istio-system
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      separator: ;
      regex: istio-galley;http-monitoring
      replacement: $1
      action: keep
  - job_name: citadel
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - istio-system
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      separator: ;
      regex: istio-citadel;http-monitoring
      replacement: $1
      action: keep

  - job_name: 'redis_exporter_targets'
    static_configs:
      - targets: ["{{ groups['redis-exporter-targets'] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:6379') | list | join("\", \"") }}"]
    metrics_path: /scrape
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: redis-exporter:9121

  {% for item in service_blackbox_checks %}
  # This empty line ensures indentation is correct after ansible jinja2 template is materialized
  - job_name: 'availability_{{ item.service_name }}'
    metrics_path: /metrics
    params:
      module: [{{ item.probe_module }}]
    static_configs:
    - targets: {{ item.targets | to_json }}
      labels:
        "service_name": "{{ item.service_name }}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter-prometheus-blackbox-exporter:9115
  {% endfor %}
