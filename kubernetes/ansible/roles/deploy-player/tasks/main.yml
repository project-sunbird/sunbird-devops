- name: Create a directory if it does not exist
  file:
    path: /var/lib/jenkins/player_config
    state: directory

- name: Remove existing index_cdn.ejs
  file: path=/var/lib/jenkins/player_config/index_cdn.ejs state=absent
  ignore_errors: true

- name: check if cdn file exists
  stat:
    path: "{{workspace}}/index_cdn.ejs"
  register: stat_result

- debug: var=stat_result

- name: copy new index file
  copy: src="{{cdn_file_path}}" dest="/var/lib/jenkins/player_config/index_cdn.ejs" mode=0644
  when: stat_result.stat.exists

- name: remove whitespaces in index file
  shell: 'sed -i s/\\s\\+$//e /var/lib/jenkins/player_config/index_cdn.ejs'
  when: stat_result.stat.exists

- name: Remove the existing CDN config
  shell: "kubectl delete configmap player-cdn-config --namespace={{namespace}}"
  ignore_errors: true

- name: Create player-cdn configmap
  shell: "kubectl create configmap player-cdn-config --from-file=/var/lib/jenkins/player_config/index_cdn.ejs --namespace={{namespace}}"
  when: stat_result.stat.exists

- name: rename template
  template:
    src: "{{ chart_path }}/values.j2"
    dest: "{{ chart_path }}/values.yaml"

- name: Create env data dir
  file:
    path: "/var/lib/jenkins/env"
    state: directory
    mode: 0755

- name: copy env file from swarm role
  template:
    src: "{{service_env[release_name]}}"
    dest: "{{role_path}}/templates/{{ release_name }}.env"

- name: template vars
  template:
    src: "{{ release_name }}.env"
    dest: "/var/lib/jenkins/env/{{ release_name }}.env"

- name: create configmap
  shell: "kubectl create configmap player-config --from-env-file=/var/lib/jenkins/env/{{ release_name }}.env -n {{namespace}} --dry-run -o=yaml | kubectl apply -f -"

- name: helm install and upgrade
  shell: helm upgrade --install --force --cleanup-on-fail {{ release_name }} {{ chart_path }} -n {{namespace}}

