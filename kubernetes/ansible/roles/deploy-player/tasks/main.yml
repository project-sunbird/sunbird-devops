- name: Create a directory if it does not exist
  file:
    path: /var/lib/jenkins/player_config
    state: directory

- name: Remove existing index_cdn.ejs
  file: path=/var/lib/jenkins/player_config/index_cdn.ejs state=absent
  ignore_errors: true

- name: copy new index file
  copy: src="{{cdn_file_path}}" dest="/var/lib/jenkins/player_config/index_cdn.ejs" mode=0644
  when: sunbird_portal_cdn_url is defined and  cdn_file_path is defined

- name: remove whitespaces in index file
  shell: 'sed -i s/\\s\\+$//e /var/lib/jenkins/player_config/index_cdn.ejs'
  when: sunbird_portal_cdn_url is defined and cdn_file_path is defined

- name: Remove the existing CDN config
  shell: "kubectl delete configmap player-cdn-config --namespace={{namespace}}"
  ignore_errors: true

- name: Create player-cdn configmap
  shell: "kubectl create configmap player-cdn-config --from-file=/var/lib/jenkins/player_config/index_cdn.ejs --namespace={{namespace}}"
  when: sunbird_portal_cdn_url is defined and cdn_file_path is defined

- name: Create env data dir
  file:
    path: "/home/deployer/env"
    state: directory
    mode: 0755

- name: copy env file from swarm role
  template:
    src: "{{service_env}}.{{ release_name }}_env_path"
    dest: "{{role_path}}/templates/{{ release_name }}.env"

- name: template vars
  template:
    src: "{{ release_name }}.env"
    dest: "/home/deployer/env/{{ release_name }}.env"

- name: create configmap
  shell: "kubectl create configmap test --from-env-file=/home/deployer/env/{{ release_name }}.env -n {{namespace}} --dry-run -o=yaml | kubectl apply -f -"

- name: check helm release
  shell:  helm ls | grep {{ release_name }}
  register: output

- name: helm install
  shell: helm install --name {{ release_name }} {{ chart_path }}
  when: output.rc == 1

- name: helm upgrade
  shell: helm upgrade --recreate-pods {{ release_name }} {{ chart_path }}
  when: output.rc == 0